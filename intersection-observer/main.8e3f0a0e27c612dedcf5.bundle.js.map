{"version":3,"sources":["webpack://intersection_observer/./src/main.ts","webpack://intersection_observer/Map.ts","webpack://intersection_observer/d.ts","webpack://intersection_observer/Registry.ts","webpack://intersection_observer/WeakMap.ts","webpack://intersection_observer/iterator.ts","webpack://intersection_observer/Evented.ts","webpack://intersection_observer/WidgetBase.ts","webpack://intersection_observer/Promise.ts","webpack://intersection_observer/Destroyable.ts","webpack://intersection_observer/vdom.ts","webpack://intersection_observer/string.ts","webpack://intersection_observer/cssTransitions.ts","webpack://intersection_observer/object.ts","webpack://intersection_observer/diff.ts","webpack://intersection_observer/RegistryHandler.ts","webpack://intersection_observer/NodeHandler.ts","webpack://intersection_observer/./src/widgets/App.ts","webpack://intersection_observer/./src/listItemGenerator.ts","webpack://intersection_observer/./src/widgets/InfiniteList.ts","webpack://intersection_observer/Intersection.ts","webpack://intersection_observer/Base.ts","webpack://intersection_observer/Set.ts","webpack://intersection_observer/IntersectionObserver.ts","webpack://intersection_observer/./src/widgets/styles/infiniteList.m.css","webpack://intersection_observer/./src/widgets/styles/app.m.css"],"names":["vdom_1","__webpack_require__","d_1","App_1","default","w","mount","iterator_1","global_1","object_1","has_1","exports","Map","_a","iterable","this","_keys","_values","Symbol","toStringTag","isArrayLike","i","length","value","set","iterable_1","tslib_1","__values","iterable_1_1","next","done","prototype","_indexOfKey","keys","key","length_1","is","Object","defineProperty","clear","delete","index","splice","entries","_this","values","map","ShimIterator","forEach","callback","context","length_2","call","get","undefined","has","iterator","species","isWNode","child","Boolean","type","WNODE","isVNode","VNODE","DOMVNODE","isElementNode","tagName","isDomVNode","decorate","dNodes","optionsOrModifier","predicate","modifier","shallow","nodes","Array","isArray","__spread","breaker","node","shift","children","widgetConstructorOrNode","properties","__assign","widgetConstructor","v","tag","propertiesOrChildren","deferredPropertiesCallback","classes","_b","styles","newProperties","__rest","_c","_d","nodeClasses","_e","nodeStyles","nodeProperties","originalProperties","dom","attrs","props","on","diffType","onAttach","toLowerCase","attributes","events","domNode","text","data","Promise_1","Map_1","Evented_1","isWidgetBaseConstructor","item","_type","WIDGET_BASE_TYPE","isWidgetConstructorDefaultExport","hasOwnProperty","Registry","_super","__extends","emitLoadedEvent","widgetLabel","emit","action","define","label","_widgetRegistry","Error","toString","then","widgetCtor","error","defineInjector","injectorFactory","_injectorRegistry","invalidator","Evented","injectorItem","injector","promise","getInjector","hasInjector","startId","WeakMap","DELETED_1","generateName_1","Math","floor","Date","now","random","_name","_frozenEntries","__read","_getFrozenEntryIndex","entry","frozenIndex","TypeError","create","isFrozen","push","string_1","staticDone","list","_nextIndex","isIterable","_nativeIterator","_list","forOf","thisArg","broken","doBreak","l","char","code","charCodeAt","HIGH_SURROGATE_MIN","HIGH_SURROGATE_MAX","result","Destroyable_1","regexMap","isGlobMatch","globString","targetString","indexOf","regex","RegExp","replace","test","apply","arguments","listenersMap","event","methods","method","listener","handles_1","_addListener","destroy","handle","listeners","Destroyable","WeakMap_1","diff_1","RegistryHandler_1","NodeHandler_1","Registry_1","lazyWidgetId","lazyWidgetIdMap","decoratorMap","builtDecoratorMap","widgetInstanceMap","boundAuto","auto","bind","noBind","WidgetBase","_initialProperties","_changedPropertyKeys","_nodeHandler","_handles","_children","_decoratorCache","_properties","_boundRenderFunc","render","_boundInvalidate","invalidate","dirty","onDetach","nodeHandler","rendering","inputProperties","own","_runAfterConstructors","meta","MetaType","_metaMap","cached","__setProperties__","instanceData","_runBeforeProperties","registeredDiffPropertyNames","getDecorator","changedPropertyKeys","propertyNames","allProperties","checkedProperties","diffPropertyResults_1","runReactions","propertyName","previousProperty","newProperty","_bindFunctionProperty","diffFunctions","i_1","changed","reactionFunctions","executedReactions_1","reaction","propertyChanged","reactionRun","__setChildren__","_filterAndConvert","filteredNodes","convertedNodes","id","registry","registryItem","__render__","_runBeforeRenders","dNode","_runAfterRenders","addDecorator","decoratorKey","decoratorList","constructor","specificDecoratorList","decorators","_buildDecoratorList","allDecorators","instanceMap","unshift","getPrototypeOf","buildDecorators","decoratorCache","property","_bindFunctionPropertyMap","bindInfo","boundFunc","scope","_registry","beforeProperties","reduce","beforePropertiesFunction","beforeRenders","beforeRenderFunction","updatedRender","console","warn","afterRenders","afterRenderFunction","afterRender","isDomMeta","afterConstructors","afterConstructor","pop","queue_1","ShimPromise","Promise","isThenable","executor","state","isChained","callbacks","whenFinished","settle","newState","resolvedValue","queueMicroTask","count","resolve","onFulfilled","onRejected","reject","all","complete","total","populating","fulfill","finish","race","iterable_2","iterable_2_1","reason","catch","finally","onFinally","noop","destroyed","handles","cssTransitions_1","WidgetBase_1","EMPTY_ARRAY","nodeOperations","NAMESPACE_SVG","NAMESPACE_W3","NAMESPACE_XLINK","isWNodeWrapper","isVNodeWrapper","buildPreviousProperties","current","propName","attrName","getAttribute","same","dnode1","dnode2","instance","findIndexOfChild","sameAs","start","createClassPropValue","filter","className","join","trim","updateAttribute","attrValue","namespace","setAttributeNS","removeAttribute","setAttribute","runEnterAnimation","transitions","enterAnimation","enter","runExitAnimation","exitAnimation","removeDomNode","parentNode","removeChild","exit","arrayFrom","arr","slice","renderer","_renderScheduled","parentInvalidate","_mountOptions","sync","merge","transition","document","body","_invalidationQueue","_processQueue","_applicationQueue","_eventMap","_instanceToWrapperMap","_parentWrapperMap","_wrapperSiblingMap","_insertBeforeMap","_afterRenderCallbacks","_deferredRenderCallbacks","_allMergedNodes","nodeOperation","propValue","previousValue","updateEvent","eventName","currentValue","previousEvent","removeEventListener","evt","target","addEventListener","removeOrphanedEvents","previousProperties","onlyEvents","isEvent","substr","eventCallback","renderedToWrapper","rendered","parent","currentParent","previousItem","requiresInsertBefore","hasPreviousSiblings","depth","wrappedRendered","hasParentWNode","hasCurrentParentChildren","childrenWrappers","insertBefore","renderedItem","wrapper","order","hasAnimations","nextParent","findParentWNodeWrapper","currentNode","parentWNodeWrapper","parentWrapper","findParentDomNode","parentDomNode","runDeferredProperties","properties_1","processProperties","findInsertBefore","searchNode","nextSibling","setValue","domValue","onInputValue","onSelectValue","setProperties","currentProperties","nextWrapper","includesEventsAndAttributes","propNames","propCount","previousClassString","currentClassString","merged","domClasses","split","styleNames","styleCount","j","styleName","newStyleValue","style","lastIndexOf","previousAttributes","attrNames","attrCount","updateAttributes","events_1","_runInvalidationQueue","invalidationQueue","previouslyRendered","sort","a","b","parent_1","sibling","item_1","_updateWidget","_runProcessQueue","_runDomInstructionQueue","_runCallbacks","_process","reverse","parentElement","add","inserted","parent_2","instanceData_1","addRoot","attached","run","requestIdleCallback","setTimeout","runAfterRenderCallbacks","requestAnimationFrame","runDeferredRenderCallbacks","mergeNodes","oldIndex","newIndex","currentLength","nextLength","instructions","currentWrapper","domElement","toUpperCase","mergeNodeIndex","_processMergeNodes","_processOne","widget","childNodes","createElementNS","createElement","createTextNode","_createDom","base","_createWidget","updatedTextNode","ownerDocument","replaceChild","_updateDom","wrappers","_removeDom","_removeWidget","mountOptions","mergedNode","class_1","wrapNodes","util_1","LOW_SURROGATE_MIN","LOW_SURROGATE_MAX","fromCodePoint","String","raw","codePointAt","wrapNative","endsWith","includes","normalize","repeat","startsWith","normalizeSubstringArgs_1","name","search","position","isEnd","min","max","codePoints","_i","fromCharCode","codeUnits","codePoint","Number","isFinite","RangeError","highSurrogate","lowSurrogate","callSite","substitutions","rawStrings","numSubstitutions","first","second","endPosition","isNaN","Infinity","end","padEnd","padStart","maxLength","fillString","strText","padding","browserSpecificTransitionEndEventName","browserSpecificAnimationEndEventName","initialize","element","determineBrowserStyleNames","runAndCleanUp","startAnimation","finishAnimation","finished","transitionEnd","activeClass","enterAnimationActive","classList","remove","removeNode","exitAnimationActive","Symbol_1","globalObject","assign","getOwnPropertyDescriptor","getOwnPropertyNames","getOwnPropertySymbols","o","match","sources","to","nextSource","nextKey","prop","isSymbol","for","substring","value1","value2","getOwnPropertyDescriptors","previous","isObjectOrArray","ignore","reference","validOldProperty","validNewProperty","previousKeys","newKeys","some","always","RegistryHandler","_registryWidgetLabelMap","_registryInjectorLabelMap","baseRegistry","globalPrecedence","_get","getFunctionName","labelMap","registries","registeredLabels","NodeEventType","NodeHandler","_nodeMap","Widget","addProjector","Projector","listItemGenerator_1","InfiniteList_1","css","App","root","title","onRequestItems","startIndex","getListItems","sent","summary","itemRoot","itemTitle","itemSummary","titles","subjects","goals","locations","betters","organizations","generateArticleTitle","round","articles","sentences","Intersection_1","InfiniteList","items","isLoadingData","isIntersecting","concat","bottom","Base_1","IntersectionObserver_1","defaultIntersection","freeze","intersectionRatio","Intersection","_details","_onIntersect","detailEntries","entries_1","entries_1_1","options","rootNode","getNode","details","_getDetails","_createDetails","observer","observe","JSON","stringify","disconnect","Base","Set_1","_requestedNodeKeys","_invalidate","_bind","stringKey","handle_1","Set","_setData","idx","callbackfn","IntersectionObserver","module"," _key"],"mappings":"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","file":"main.8e3f0a0e27c612dedcf5.bundle.js","sourcesContent":["import renderer from '@dojo/framework/widget-core/vdom';\nimport { w } from '@dojo/framework/widget-core/d';\nimport App from './widgets/App';\n\nconst r = renderer(() => w(App, {}));\nr.mount();\n","import { isArrayLike, Iterable, IterableIterator, ShimIterator } from './iterator';\nimport global from './global';\nimport { is as objectIs } from './object';\nimport has from '../has/has';\nimport './Symbol';\n\nexport interface Map<K, V> {\n\t/**\n\t * Deletes all keys and their associated values.\n\t */\n\tclear(): void;\n\n\t/**\n\t * Deletes a given key and its associated value.\n\t *\n\t * @param key The key to delete\n\t * @return true if the key exists, false if it does not\n\t */\n\tdelete(key: K): boolean;\n\n\t/**\n\t * Returns an iterator that yields each key/value pair as an array.\n\t *\n\t * @return An iterator for each key/value pair in the instance.\n\t */\n\tentries(): IterableIterator<[K, V]>;\n\n\t/**\n\t * Executes a given function for each map entry. The function\n\t * is invoked with three arguments: the element value, the\n\t * element key, and the associated Map instance.\n\t *\n\t * @param callbackfn The function to execute for each map entry,\n\t * @param thisArg The value to use for `this` for each execution of the calback\n\t */\n\tforEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void;\n\n\t/**\n\t * Returns the value associated with a given key.\n\t *\n\t * @param key The key to look up\n\t * @return The value if one exists or undefined\n\t */\n\tget(key: K): V | undefined;\n\n\t/**\n\t * Returns an iterator that yields each key in the map.\n\t *\n\t * @return An iterator containing the instance's keys.\n\t */\n\tkeys(): IterableIterator<K>;\n\n\t/**\n\t * Checks for the presence of a given key.\n\t *\n\t * @param key The key to check for\n\t * @return true if the key exists, false if it does not\n\t */\n\thas(key: K): boolean;\n\n\t/**\n\t * Sets the value associated with a given key.\n\t *\n\t * @param key The key to define a value to\n\t * @param value The value to assign\n\t * @return The Map instance\n\t */\n\tset(key: K, value: V): this;\n\n\t/**\n\t * Returns the number of key / value pairs in the Map.\n\t */\n\treadonly size: number;\n\n\t/**\n\t * Returns an iterator that yields each value in the map.\n\t *\n\t * @return An iterator containing the instance's values.\n\t */\n\tvalues(): IterableIterator<V>;\n\n\t/** Returns an iterable of entries in the map. */\n\t[Symbol.iterator](): IterableIterator<[K, V]>;\n\n\treadonly [Symbol.toStringTag]: string;\n}\n\nexport interface MapConstructor {\n\t/**\n\t * Creates a new Map\n\t *\n\t * @constructor\n\t */\n\tnew (): Map<any, any>;\n\n\t/**\n\t * Creates a new Map\n\t *\n\t * @constructor\n\t *\n\t * @param iterator\n\t * Array or iterator containing two-item tuples used to initially populate the map.\n\t * The first item in each tuple corresponds to the key of the map entry.\n\t * The second item corresponds to the value of the map entry.\n\t */\n\tnew <K, V>(iterator?: [K, V][]): Map<K, V>;\n\n\t/**\n\t * Creates a new Map\n\t *\n\t * @constructor\n\t *\n\t * @param iterator\n\t * Array or iterator containing two-item tuples used to initially populate the map.\n\t * The first item in each tuple corresponds to the key of the map entry.\n\t * The second item corresponds to the value of the map entry.\n\t */\n\tnew <K, V>(iterator: Iterable<[K, V]>): Map<K, V>;\n\n\treadonly prototype: Map<any, any>;\n\n\treadonly [Symbol.species]: MapConstructor;\n}\n\nexport let Map: MapConstructor = global.Map;\n\nif (!has('es6-map')) {\n\tMap = class Map<K, V> {\n\t\tprotected readonly _keys: K[] = [];\n\t\tprotected readonly _values: V[] = [];\n\n\t\t/**\n\t\t * An alternative to Array.prototype.indexOf using Object.is\n\t\t * to check for equality. See http://mzl.la/1zuKO2V\n\t\t */\n\t\tprotected _indexOfKey(keys: K[], key: K): number {\n\t\t\tfor (let i = 0, length = keys.length; i < length; i++) {\n\t\t\t\tif (objectIs(keys[i], key)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t}\n\n\t\tstatic [Symbol.species] = Map;\n\n\t\tconstructor(iterable?: ArrayLike<[K, V]> | Iterable<[K, V]>) {\n\t\t\tif (iterable) {\n\t\t\t\tif (isArrayLike(iterable)) {\n\t\t\t\t\tfor (let i = 0; i < iterable.length; i++) {\n\t\t\t\t\t\tconst value = iterable[i];\n\t\t\t\t\t\tthis.set(value[0], value[1]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (const value of iterable) {\n\t\t\t\t\t\tthis.set(value[0], value[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tget size(): number {\n\t\t\treturn this._keys.length;\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis._keys.length = this._values.length = 0;\n\t\t}\n\n\t\tdelete(key: K): boolean {\n\t\t\tconst index = this._indexOfKey(this._keys, key);\n\t\t\tif (index < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis._keys.splice(index, 1);\n\t\t\tthis._values.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\n\t\tentries(): IterableIterator<[K, V]> {\n\t\t\tconst values = this._keys.map(\n\t\t\t\t(key: K, i: number): [K, V] => {\n\t\t\t\t\treturn [key, this._values[i]];\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn new ShimIterator(values);\n\t\t}\n\n\t\tforEach(callback: (value: V, key: K, mapInstance: Map<K, V>) => any, context?: {}) {\n\t\t\tconst keys = this._keys;\n\t\t\tconst values = this._values;\n\t\t\tfor (let i = 0, length = keys.length; i < length; i++) {\n\t\t\t\tcallback.call(context, values[i], keys[i], this);\n\t\t\t}\n\t\t}\n\n\t\tget(key: K): V | undefined {\n\t\t\tconst index = this._indexOfKey(this._keys, key);\n\t\t\treturn index < 0 ? undefined : this._values[index];\n\t\t}\n\n\t\thas(key: K): boolean {\n\t\t\treturn this._indexOfKey(this._keys, key) > -1;\n\t\t}\n\n\t\tkeys(): IterableIterator<K> {\n\t\t\treturn new ShimIterator(this._keys);\n\t\t}\n\n\t\tset(key: K, value: V): Map<K, V> {\n\t\t\tlet index = this._indexOfKey(this._keys, key);\n\t\t\tindex = index < 0 ? this._keys.length : index;\n\t\t\tthis._keys[index] = key;\n\t\t\tthis._values[index] = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tvalues(): IterableIterator<V> {\n\t\t\treturn new ShimIterator(this._values);\n\t\t}\n\n\t\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\t\treturn this.entries();\n\t\t}\n\n\t\t[Symbol.toStringTag]: 'Map' = 'Map';\n\t};\n}\n\nexport default Map;\n","import {\n\tConstructor,\n\tDefaultWidgetBaseInterface,\n\tDeferredVirtualProperties,\n\tDNode,\n\tVNode,\n\tRegistryLabel,\n\tVNodeProperties,\n\tWidgetBaseInterface,\n\tWNode,\n\tDomOptions,\n\tRenderResult,\n\tDomVNode,\n\tLazyWidget,\n\tLazyDefine\n} from './interfaces';\n\n/**\n * The identifier for a WNode type\n */\nexport const WNODE = '__WNODE_TYPE';\n\n/**\n * The identifier for a VNode type\n */\nexport const VNODE = '__VNODE_TYPE';\n\n/**\n * The identifier for a VNode type created using dom()\n */\nexport const DOMVNODE = '__DOMVNODE_TYPE';\n\n/**\n * Helper function that returns true if the `DNode` is a `WNode` using the `type` property\n */\nexport function isWNode<W extends WidgetBaseInterface = DefaultWidgetBaseInterface>(\n\tchild: DNode<W> | any\n): child is WNode<W> {\n\treturn Boolean(child && child !== true && typeof child !== 'string' && child.type === WNODE);\n}\n\n/**\n * Helper function that returns true if the `DNode` is a `VNode` using the `type` property\n */\nexport function isVNode(child: DNode): child is VNode {\n\treturn Boolean(\n\t\tchild && child !== true && typeof child !== 'string' && (child.type === VNODE || child.type === DOMVNODE)\n\t);\n}\n\n/**\n * Helper function that returns true if the `DNode` is a `VNode` created with `dom()` using the `type` property\n */\nexport function isDomVNode(child: DNode): child is DomVNode {\n\treturn Boolean(child && child !== true && typeof child !== 'string' && child.type === DOMVNODE);\n}\n\nexport function isElementNode(value: any): value is Element {\n\treturn !!value.tagName;\n}\n\n/**\n * Interface for the decorate modifier\n */\nexport interface Modifier<T extends DNode> {\n\t(dNode: T, breaker: () => void): void;\n}\n\n/**\n * The predicate function for decorate\n */\nexport interface Predicate<T extends DNode> {\n\t(dNode: DNode): dNode is T;\n}\n\n/**\n * Decorator options\n */\nexport interface DecorateOptions<T extends DNode> {\n\tmodifier: Modifier<T>;\n\tpredicate?: Predicate<T>;\n\tshallow?: boolean;\n}\n\n/**\n * Generic decorate function for DNodes. The nodes are modified in place based on the provided predicate\n * and modifier functions.\n *\n * The children of each node are flattened and added to the array for decoration.\n *\n * If no predicate is supplied then the modifier will be executed on all nodes. A `breaker` function is passed to the\n * modifier which will drain the nodes array and exit the decoration.\n *\n * When the `shallow` options is set to `true` the only the top node or nodes will be decorated (only supported using\n * `DecorateOptions`).\n */\nexport function decorate<T extends DNode>(dNodes: DNode, options: DecorateOptions<T>): DNode;\nexport function decorate<T extends DNode>(dNodes: DNode[], options: DecorateOptions<T>): DNode[];\nexport function decorate<T extends DNode>(dNodes: DNode | DNode[], options: DecorateOptions<T>): DNode | DNode[];\nexport function decorate<T extends DNode>(dNodes: DNode, modifier: Modifier<T>, predicate: Predicate<T>): DNode;\nexport function decorate<T extends DNode>(dNodes: DNode[], modifier: Modifier<T>, predicate: Predicate<T>): DNode[];\nexport function decorate<T extends DNode>(\n\tdNodes: RenderResult,\n\tmodifier: Modifier<T>,\n\tpredicate: Predicate<T>\n): RenderResult;\nexport function decorate(dNodes: DNode, modifier: Modifier<DNode>): DNode;\nexport function decorate(dNodes: DNode[], modifier: Modifier<DNode>): DNode[];\nexport function decorate(dNodes: RenderResult, modifier: Modifier<DNode>): RenderResult;\nexport function decorate(\n\tdNodes: DNode | DNode[],\n\toptionsOrModifier: Modifier<DNode> | DecorateOptions<DNode>,\n\tpredicate?: Predicate<DNode>\n): DNode | DNode[] {\n\tlet shallow = false;\n\tlet modifier;\n\tif (typeof optionsOrModifier === 'function') {\n\t\tmodifier = optionsOrModifier;\n\t} else {\n\t\tmodifier = optionsOrModifier.modifier;\n\t\tpredicate = optionsOrModifier.predicate;\n\t\tshallow = optionsOrModifier.shallow || false;\n\t}\n\n\tlet nodes = Array.isArray(dNodes) ? [...dNodes] : [dNodes];\n\tfunction breaker() {\n\t\tnodes = [];\n\t}\n\twhile (nodes.length) {\n\t\tconst node = nodes.shift();\n\t\tif (node && node !== true) {\n\t\t\tif (!shallow && (isWNode(node) || isVNode(node)) && node.children) {\n\t\t\t\tnodes = [...nodes, ...node.children];\n\t\t\t}\n\t\t\tif (!predicate || predicate(node)) {\n\t\t\t\tmodifier(node, breaker);\n\t\t\t}\n\t\t}\n\t}\n\treturn dNodes;\n}\n\n/**\n * Wrapper function for calls to create a widget.\n */\nexport function w<W extends WidgetBaseInterface>(\n\tnode: WNode<W>,\n\tproperties: Partial<W['properties']>,\n\tchildren?: W['children']\n): WNode<W>;\nexport function w<W extends WidgetBaseInterface>(\n\twidgetConstructor: Constructor<W> | RegistryLabel | LazyWidget<W> | LazyDefine<W>,\n\tproperties: W['properties'],\n\tchildren?: W['children']\n): WNode<W>;\nexport function w<W extends WidgetBaseInterface>(\n\twidgetConstructorOrNode: Constructor<W> | RegistryLabel | WNode<W> | LazyWidget<W> | LazyDefine<W>,\n\tproperties: W['properties'],\n\tchildren?: W['children']\n): WNode<W> {\n\tif (isWNode(widgetConstructorOrNode)) {\n\t\tproperties = { ...(widgetConstructorOrNode.properties as any), ...(properties as any) };\n\t\tchildren = children ? children : widgetConstructorOrNode.children;\n\t\twidgetConstructorOrNode = widgetConstructorOrNode.widgetConstructor;\n\t}\n\n\treturn {\n\t\tchildren: children || [],\n\t\twidgetConstructor: widgetConstructorOrNode,\n\t\tproperties,\n\t\ttype: WNODE\n\t};\n}\n\n/**\n * Wrapper function for calls to create VNodes.\n */\nexport function v(node: VNode, properties: VNodeProperties, children: undefined | DNode[]): VNode;\nexport function v(node: VNode, properties: VNodeProperties): VNode;\nexport function v(tag: string, children: undefined | DNode[]): VNode;\nexport function v(tag: string, properties: DeferredVirtualProperties | VNodeProperties, children?: DNode[]): VNode;\nexport function v(tag: string): VNode;\nexport function v(\n\ttag: string | VNode,\n\tpropertiesOrChildren: VNodeProperties | DeferredVirtualProperties | DNode[] = {},\n\tchildren: undefined | DNode[] = undefined\n): VNode {\n\tlet properties: VNodeProperties | DeferredVirtualProperties = propertiesOrChildren;\n\tlet deferredPropertiesCallback;\n\n\tif (Array.isArray(propertiesOrChildren)) {\n\t\tchildren = propertiesOrChildren;\n\t\tproperties = {};\n\t}\n\n\tif (typeof properties === 'function') {\n\t\tdeferredPropertiesCallback = properties;\n\t\tproperties = {};\n\t}\n\n\tif (isVNode(tag)) {\n\t\tlet { classes = [], styles = {}, ...newProperties } = properties;\n\t\tlet { classes: nodeClasses = [], styles: nodeStyles = {}, ...nodeProperties } = tag.properties;\n\t\tnodeClasses = Array.isArray(nodeClasses) ? nodeClasses : [nodeClasses];\n\t\tclasses = Array.isArray(classes) ? classes : [classes];\n\t\tstyles = { ...nodeStyles, ...styles };\n\t\tproperties = { ...nodeProperties, ...newProperties, classes: [...nodeClasses, ...classes], styles };\n\t\tchildren = children ? children : tag.children;\n\t\ttag = tag.tag;\n\t}\n\n\treturn {\n\t\ttag,\n\t\tdeferredPropertiesCallback,\n\t\toriginalProperties: {},\n\t\tchildren,\n\t\tproperties,\n\t\ttype: VNODE\n\t};\n}\n\n/**\n * Create a VNode for an existing DOM Node.\n */\nexport function dom(\n\t{ node, attrs = {}, props = {}, on = {}, diffType = 'none', onAttach }: DomOptions,\n\tchildren?: DNode[]\n): DomVNode {\n\treturn {\n\t\ttag: isElementNode(node) ? node.tagName.toLowerCase() : '',\n\t\tproperties: props,\n\t\tattributes: attrs,\n\t\tevents: on,\n\t\tchildren,\n\t\ttype: DOMVNODE,\n\t\tdomNode: node,\n\t\ttext: isElementNode(node) ? undefined : node.data,\n\t\tdiffType,\n\t\tonAttach\n\t};\n}\n","import Promise from '../shim/Promise';\nimport Map from '../shim/Map';\nimport { Evented, EventObject } from '../core/Evented';\nimport {\n\tConstructor,\n\tInjectorFactory,\n\tInjectorItem,\n\tRegistryLabel,\n\tWidgetBaseConstructor,\n\tWidgetBaseInterface,\n\tESMDefaultWidgetBase,\n\tWidgetBaseConstructorFunction,\n\tESMDefaultWidgetBaseFunction\n} from './interfaces';\n\nexport type RegistryItem =\n\t| WidgetBaseConstructor\n\t| Promise<WidgetBaseConstructor>\n\t| WidgetBaseConstructorFunction\n\t| ESMDefaultWidgetBaseFunction;\n\n/**\n * Widget base type\n */\nexport const WIDGET_BASE_TYPE = '__widget_base_type';\n\nexport interface RegistryEventObject extends EventObject<RegistryLabel> {\n\taction: string;\n\titem: WidgetBaseConstructor | InjectorItem;\n}\n/**\n * Widget Registry Interface\n */\nexport interface RegistryInterface {\n\t/**\n\t * Define a WidgetRegistryItem against a label\n\t *\n\t * @param label The label of the widget to register\n\t * @param registryItem The registry item to define\n\t */\n\tdefine(label: RegistryLabel, registryItem: RegistryItem): void;\n\n\t/**\n\t * Return a RegistryItem for the given label, null if an entry doesn't exist\n\t *\n\t * @param widgetLabel The label of the widget to return\n\t * @returns The RegistryItem for the widgetLabel, `null` if no entry exists\n\t */\n\tget<T extends WidgetBaseInterface = WidgetBaseInterface>(label: RegistryLabel): Constructor<T> | null;\n\n\t/**\n\t * Returns a boolean if an entry for the label exists\n\t *\n\t * @param widgetLabel The label to search for\n\t * @returns boolean indicating if a widget registry item exists\n\t */\n\thas(label: RegistryLabel): boolean;\n\n\t/**\n\t * Define an Injector against a label\n\t *\n\t * @param label The label of the injector to register\n\t * @param registryItem The injector factory\n\t */\n\tdefineInjector(label: RegistryLabel, injectorFactory: InjectorFactory): void;\n\n\t/**\n\t * Return an Injector registry item for the given label, null if an entry doesn't exist\n\t *\n\t * @param label The label of the injector to return\n\t * @returns The RegistryItem for the widgetLabel, `null` if no entry exists\n\t */\n\tgetInjector<T>(label: RegistryLabel): InjectorItem<T> | null;\n\n\t/**\n\t * Returns a boolean if an injector for the label exists\n\t *\n\t * @param widgetLabel The label to search for\n\t * @returns boolean indicating if a injector registry item exists\n\t */\n\thasInjector(label: RegistryLabel): boolean;\n}\n\n/**\n * Checks is the item is a subclass of WidgetBase (or a WidgetBase)\n *\n * @param item the item to check\n * @returns true/false indicating if the item is a WidgetBaseConstructor\n */\nexport function isWidgetBaseConstructor<T extends WidgetBaseInterface>(item: any): item is Constructor<T> {\n\treturn Boolean(item && item._type === WIDGET_BASE_TYPE);\n}\n\nexport function isWidgetConstructorDefaultExport<T>(item: any): item is ESMDefaultWidgetBase<T> {\n\treturn Boolean(\n\t\titem &&\n\t\t\titem.hasOwnProperty('__esModule') &&\n\t\t\titem.hasOwnProperty('default') &&\n\t\t\tisWidgetBaseConstructor(item.default)\n\t);\n}\n\n/**\n * The Registry implementation\n */\nexport class Registry extends Evented<{}, RegistryLabel, RegistryEventObject> implements RegistryInterface {\n\t/**\n\t * internal map of labels and RegistryItem\n\t */\n\tprivate _widgetRegistry: Map<RegistryLabel, RegistryItem> | undefined;\n\n\tprivate _injectorRegistry: Map<RegistryLabel, InjectorItem> | undefined;\n\n\t/**\n\t * Emit loaded event for registry label\n\t */\n\tprivate emitLoadedEvent(widgetLabel: RegistryLabel, item: WidgetBaseConstructor | InjectorItem): void {\n\t\tthis.emit({\n\t\t\ttype: widgetLabel,\n\t\t\taction: 'loaded',\n\t\t\titem\n\t\t});\n\t}\n\n\tpublic define(label: RegistryLabel, item: RegistryItem): void {\n\t\tif (this._widgetRegistry === undefined) {\n\t\t\tthis._widgetRegistry = new Map();\n\t\t}\n\n\t\tif (this._widgetRegistry.has(label)) {\n\t\t\tthrow new Error(`widget has already been registered for '${label.toString()}'`);\n\t\t}\n\n\t\tthis._widgetRegistry.set(label, item);\n\n\t\tif (item instanceof Promise) {\n\t\t\titem.then(\n\t\t\t\t(widgetCtor) => {\n\t\t\t\t\tthis._widgetRegistry!.set(label, widgetCtor);\n\t\t\t\t\tthis.emitLoadedEvent(label, widgetCtor);\n\t\t\t\t\treturn widgetCtor;\n\t\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t);\n\t\t} else if (isWidgetBaseConstructor(item)) {\n\t\t\tthis.emitLoadedEvent(label, item);\n\t\t}\n\t}\n\n\tpublic defineInjector(label: RegistryLabel, injectorFactory: InjectorFactory): void {\n\t\tif (this._injectorRegistry === undefined) {\n\t\t\tthis._injectorRegistry = new Map();\n\t\t}\n\n\t\tif (this._injectorRegistry.has(label)) {\n\t\t\tthrow new Error(`injector has already been registered for '${label.toString()}'`);\n\t\t}\n\n\t\tconst invalidator = new Evented();\n\n\t\tconst injectorItem: InjectorItem = {\n\t\t\tinjector: injectorFactory(() => invalidator.emit({ type: 'invalidate' })),\n\t\t\tinvalidator\n\t\t};\n\n\t\tthis._injectorRegistry.set(label, injectorItem);\n\t\tthis.emitLoadedEvent(label, injectorItem);\n\t}\n\n\tpublic get<T extends WidgetBaseInterface = WidgetBaseInterface>(label: RegistryLabel): Constructor<T> | null {\n\t\tif (!this._widgetRegistry || !this.has(label)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst item = this._widgetRegistry.get(label);\n\n\t\tif (isWidgetBaseConstructor<T>(item)) {\n\t\t\treturn item;\n\t\t}\n\n\t\tif (item instanceof Promise) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst promise = (<WidgetBaseConstructorFunction>item)();\n\t\tthis._widgetRegistry.set(label, promise);\n\n\t\tpromise.then(\n\t\t\t(widgetCtor) => {\n\t\t\t\tif (isWidgetConstructorDefaultExport<T>(widgetCtor)) {\n\t\t\t\t\twidgetCtor = widgetCtor.default;\n\t\t\t\t}\n\n\t\t\t\tthis._widgetRegistry!.set(label, widgetCtor);\n\t\t\t\tthis.emitLoadedEvent(label, widgetCtor);\n\t\t\t\treturn widgetCtor;\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t);\n\n\t\treturn null;\n\t}\n\n\tpublic getInjector<T>(label: RegistryLabel): InjectorItem<T> | null {\n\t\tif (!this._injectorRegistry || !this.hasInjector(label)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this._injectorRegistry.get(label)!;\n\t}\n\n\tpublic has(label: RegistryLabel): boolean {\n\t\treturn Boolean(this._widgetRegistry && this._widgetRegistry.has(label));\n\t}\n\n\tpublic hasInjector(label: RegistryLabel): boolean {\n\t\treturn Boolean(this._injectorRegistry && this._injectorRegistry.has(label));\n\t}\n}\n\nexport default Registry;\n","import global from './global';\nimport { isArrayLike, Iterable } from './iterator';\nimport has from '../has/has';\nimport './Symbol';\n\nexport interface WeakMap<K extends object, V> {\n\t/**\n\t * Remove a `key` from the map\n\t *\n\t * @param key The key to remove\n\t * @return `true` if the value was removed, otherwise `false`\n\t */\n\tdelete(key: K): boolean;\n\n\t/**\n\t * Retrieve the value, based on the supplied `key`\n\t *\n\t * @param key The key to retrieve the `value` for\n\t * @return the `value` based on the `key` if found, otherwise `false`\n\t */\n\tget(key: K): V | undefined;\n\n\t/**\n\t * Determines if a `key` is present in the map\n\t *\n\t * @param key The `key` to check\n\t * @return `true` if the key is part of the map, otherwise `false`.\n\t */\n\thas(key: K): boolean;\n\n\t/**\n\t * Set a `value` for a particular `key`.\n\t *\n\t * @param key The `key` to set the `value` for\n\t * @param value The `value` to set\n\t * @return the instances\n\t */\n\tset(key: K, value: V): this;\n\n\treadonly [Symbol.toStringTag]: 'WeakMap';\n}\n\nexport interface WeakMapConstructor {\n\t/**\n\t * Create a new instance of a `WeakMap`\n\t *\n\t * @constructor\n\t */\n\tnew (): WeakMap<object, any>;\n\n\t/**\n\t * Create a new instance of a `WeakMap`\n\t *\n\t * @constructor\n\t *\n\t * @param iterable An iterable that contains yields up key/value pair entries\n\t */\n\tnew <K extends object, V>(iterable?: [K, V][]): WeakMap<K, V>;\n\n\t/**\n\t * Create a new instance of a `WeakMap`\n\t *\n\t * @constructor\n\t *\n\t * @param iterable An iterable that contains yields up key/value pair entries\n\t */\n\tnew <K extends object, V>(iterable: Iterable<[K, V]>): WeakMap<K, V>;\n\n\treadonly prototype: WeakMap<object, any>;\n}\n\nexport let WeakMap: WeakMapConstructor = global.WeakMap;\n\ninterface Entry<K, V> {\n\tkey: K;\n\tvalue: V;\n}\n\nif (!has('es6-weakmap')) {\n\tconst DELETED: any = {};\n\n\tconst getUID = function getUID(): number {\n\t\treturn Math.floor(Math.random() * 100000000);\n\t};\n\n\tconst generateName = (function() {\n\t\tlet startId = Math.floor(Date.now() % 100000000);\n\n\t\treturn function generateName(): string {\n\t\t\treturn '__wm' + getUID() + (startId++ + '__');\n\t\t};\n\t})();\n\n\tWeakMap = class WeakMap<K, V> {\n\t\tprivate readonly _name: string;\n\t\tprivate readonly _frozenEntries: Entry<K, V>[];\n\n\t\tconstructor(iterable?: ArrayLike<[K, V]> | Iterable<[K, V]>) {\n\t\t\tthis._name = generateName();\n\n\t\t\tthis._frozenEntries = [];\n\n\t\t\tif (iterable) {\n\t\t\t\tif (isArrayLike(iterable)) {\n\t\t\t\t\tfor (let i = 0; i < iterable.length; i++) {\n\t\t\t\t\t\tconst item = iterable[i];\n\t\t\t\t\t\tthis.set(item[0], item[1]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (const [key, value] of iterable) {\n\t\t\t\t\t\tthis.set(key, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprivate _getFrozenEntryIndex(key: any): number {\n\t\t\tfor (let i = 0; i < this._frozenEntries.length; i++) {\n\t\t\t\tif (this._frozenEntries[i].key === key) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn -1;\n\t\t}\n\n\t\tdelete(key: any): boolean {\n\t\t\tif (key === undefined || key === null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst entry: Entry<K, V> = key[this._name];\n\t\t\tif (entry && entry.key === key && entry.value !== DELETED) {\n\t\t\t\tentry.value = DELETED;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst frozenIndex = this._getFrozenEntryIndex(key);\n\t\t\tif (frozenIndex >= 0) {\n\t\t\t\tthis._frozenEntries.splice(frozenIndex, 1);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tget(key: any): V | undefined {\n\t\t\tif (key === undefined || key === null) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst entry: Entry<K, V> = key[this._name];\n\t\t\tif (entry && entry.key === key && entry.value !== DELETED) {\n\t\t\t\treturn entry.value;\n\t\t\t}\n\n\t\t\tconst frozenIndex = this._getFrozenEntryIndex(key);\n\t\t\tif (frozenIndex >= 0) {\n\t\t\t\treturn this._frozenEntries[frozenIndex].value;\n\t\t\t}\n\t\t}\n\n\t\thas(key: any): boolean {\n\t\t\tif (key === undefined || key === null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst entry: Entry<K, V> = key[this._name];\n\t\t\tif (Boolean(entry && entry.key === key && entry.value !== DELETED)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst frozenIndex = this._getFrozenEntryIndex(key);\n\t\t\tif (frozenIndex >= 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tset(key: any, value?: any): this {\n\t\t\tif (!key || (typeof key !== 'object' && typeof key !== 'function')) {\n\t\t\t\tthrow new TypeError('Invalid value used as weak map key');\n\t\t\t}\n\t\t\tlet entry: Entry<K, V> = key[this._name];\n\t\t\tif (!entry || entry.key !== key) {\n\t\t\t\tentry = Object.create(null, {\n\t\t\t\t\tkey: { value: key }\n\t\t\t\t});\n\n\t\t\t\tif (Object.isFrozen(key)) {\n\t\t\t\t\tthis._frozenEntries.push(entry);\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty(key, this._name, {\n\t\t\t\t\t\tvalue: entry\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tentry.value = value;\n\t\t\treturn this;\n\t\t}\n\n\t\t[Symbol.toStringTag]: 'WeakMap' = 'WeakMap';\n\t};\n}\n\nexport default WeakMap;\n","import './Symbol';\nimport { HIGH_SURROGATE_MAX, HIGH_SURROGATE_MIN } from './string';\n\nexport interface IteratorResult<T> {\n\treadonly done: boolean;\n\treadonly value: T;\n}\n\nexport interface Iterator<T> {\n\tnext(value?: any): IteratorResult<T>;\n\n\treturn?(value?: any): IteratorResult<T>;\n\n\tthrow?(e?: any): IteratorResult<T>;\n}\n\nexport interface Iterable<T> {\n\t[Symbol.iterator](): Iterator<T>;\n}\n\nexport interface IterableIterator<T> extends Iterator<T> {\n\t[Symbol.iterator](): IterableIterator<T>;\n}\n\nconst staticDone: IteratorResult<any> = { done: true, value: undefined };\n\n/**\n * A class that _shims_ an iterator interface on array like objects.\n */\nexport class ShimIterator<T> {\n\tprivate _list: ArrayLike<T> | undefined;\n\tprivate _nextIndex = -1;\n\tprivate _nativeIterator: Iterator<T> | undefined;\n\n\tconstructor(list: ArrayLike<T> | Iterable<T>) {\n\t\tif (isIterable(list)) {\n\t\t\tthis._nativeIterator = list[Symbol.iterator]();\n\t\t} else {\n\t\t\tthis._list = list;\n\t\t}\n\t}\n\n\t/**\n\t * Return the next iteration result for the Iterator\n\t */\n\tnext(): IteratorResult<T> {\n\t\tif (this._nativeIterator) {\n\t\t\treturn this._nativeIterator.next();\n\t\t}\n\t\tif (!this._list) {\n\t\t\treturn staticDone;\n\t\t}\n\t\tif (++this._nextIndex < this._list.length) {\n\t\t\treturn {\n\t\t\t\tdone: false,\n\t\t\t\tvalue: this._list[this._nextIndex]\n\t\t\t};\n\t\t}\n\t\treturn staticDone;\n\t}\n\n\t[Symbol.iterator](): IterableIterator<T> {\n\t\treturn this;\n\t}\n}\n\n/**\n * A type guard for checking if something has an Iterable interface\n *\n * @param value The value to type guard against\n */\nexport function isIterable(value: any): value is Iterable<any> {\n\treturn value && typeof value[Symbol.iterator] === 'function';\n}\n\n/**\n * A type guard for checking if something is ArrayLike\n *\n * @param value The value to type guard against\n */\nexport function isArrayLike(value: any): value is ArrayLike<any> {\n\treturn value && typeof value.length === 'number';\n}\n\n/**\n * Returns the iterator for an object\n *\n * @param iterable The iterable object to return the iterator for\n */\nexport function get<T>(iterable: Iterable<T> | ArrayLike<T>): Iterator<T> | undefined {\n\tif (isIterable(iterable)) {\n\t\treturn iterable[Symbol.iterator]();\n\t} else if (isArrayLike(iterable)) {\n\t\treturn new ShimIterator(iterable);\n\t}\n}\n\nexport interface ForOfCallback<T> {\n\t/**\n\t * A callback function for a forOf() iteration\n\t *\n\t * @param value The current value\n\t * @param object The object being iterated over\n\t * @param doBreak A function, if called, will stop the iteration\n\t */\n\t(value: T, object: Iterable<T> | ArrayLike<T> | string, doBreak: () => void): void;\n}\n\n/**\n * Shims the functionality of `for ... of` blocks\n *\n * @param iterable The object the provides an interator interface\n * @param callback The callback which will be called for each item of the iterable\n * @param thisArg Optional scope to pass the callback\n */\nexport function forOf<T>(\n\titerable: Iterable<T> | ArrayLike<T> | string,\n\tcallback: ForOfCallback<T>,\n\tthisArg?: any\n): void {\n\tlet broken = false;\n\n\tfunction doBreak() {\n\t\tbroken = true;\n\t}\n\n\t/* We need to handle iteration of double byte strings properly */\n\tif (isArrayLike(iterable) && typeof iterable === 'string') {\n\t\tconst l = iterable.length;\n\t\tfor (let i = 0; i < l; ++i) {\n\t\t\tlet char = iterable[i];\n\t\t\tif (i + 1 < l) {\n\t\t\t\tconst code = char.charCodeAt(0);\n\t\t\t\tif (code >= HIGH_SURROGATE_MIN && code <= HIGH_SURROGATE_MAX) {\n\t\t\t\t\tchar += iterable[++i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tcallback.call(thisArg, char, iterable, doBreak);\n\t\t\tif (broken) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconst iterator = get(iterable);\n\t\tif (iterator) {\n\t\t\tlet result = iterator.next();\n\n\t\t\twhile (!result.done) {\n\t\t\t\tcallback.call(thisArg, result.value, iterable, doBreak);\n\t\t\t\tif (broken) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresult = iterator.next();\n\t\t\t}\n\t\t}\n\t}\n}\n","import Map from '../shim/Map';\nimport { Destroyable, Handle } from './Destroyable';\n\n/**\n * Map of computed regular expressions, keyed by string\n */\nconst regexMap = new Map<string, RegExp>();\n\nexport type EventType = string | symbol;\n\n/**\n * The base event object, which provides a `type` property\n */\nexport interface EventObject<T = EventType> {\n\t/**\n\t * The type of the event\n\t */\n\treadonly type: T;\n}\n\n/**\n * Determines if the event type glob has been matched\n *\n * @returns boolean that indicates if the glob is matched\n */\nexport function isGlobMatch(globString: string | symbol, targetString: string | symbol): boolean {\n\tif (typeof targetString === 'string' && typeof globString === 'string' && globString.indexOf('*') !== -1) {\n\t\tlet regex: RegExp;\n\t\tif (regexMap.has(globString)) {\n\t\t\tregex = regexMap.get(globString)!;\n\t\t} else {\n\t\t\tregex = new RegExp(`^${globString.replace(/\\*/g, '.*')}$`);\n\t\t\tregexMap.set(globString, regex);\n\t\t}\n\t\treturn regex.test(targetString);\n\t} else {\n\t\treturn globString === targetString;\n\t}\n}\n\nexport type EventedCallback<T = EventType, E extends EventObject<T> = EventObject<T>> = {\n\t/**\n\t * A callback that takes an `event` argument\n\t *\n\t * @param event The event object\n\t */\n\n\t(event: E): boolean | void;\n};\n\nexport interface CustomEventTypes<T extends EventObject<any> = EventObject<any>> {\n\t[index: string]: T;\n}\n\n/**\n * A type which is either a targeted event listener or an array of listeners\n * @template T The type of target for the events\n * @template E The event type for the events\n */\nexport type EventedCallbackOrArray<T = EventType, E extends EventObject<T> = EventObject<T>> =\n\t| EventedCallback<T, E>\n\t| EventedCallback<T, E>[];\n\n/**\n * Event Class\n */\nexport class Evented<\n\tM extends CustomEventTypes = {},\n\tT = EventType,\n\tO extends EventObject<T> = EventObject<T>\n> extends Destroyable {\n\t// The following member is purely so TypeScript remembers the type of `M` when extending so\n\t// that the utilities in `on.ts` will work https://github.com/Microsoft/TypeScript/issues/20348\n\t// tslint:disable-next-line\n\tprotected __typeMap__?: M;\n\t/**\n\t * map of listeners keyed by event type\n\t */\n\tprotected listenersMap: Map<T | keyof M, EventedCallback<T, O>[]> = new Map();\n\n\t/**\n\t * Emits the event object for the specified type\n\t *\n\t * @param event the event to emit\n\t */\n\temit<K extends keyof M>(event: M[K]): void;\n\temit(event: O): void;\n\temit(event: any): void {\n\t\tthis.listenersMap.forEach((methods, type) => {\n\t\t\tif (isGlobMatch(type as any, event.type)) {\n\t\t\t\t[...methods].forEach((method) => {\n\t\t\t\t\tmethod.call(this, event);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Catch all handler for various call signatures. The signatures are defined in\n\t * `BaseEventedEvents`.  You can add your own event type -> handler types by extending\n\t * `BaseEventedEvents`.  See example for details.\n\t *\n\t * @param args\n\t *\n\t * @example\n\t *\n\t * interface WidgetBaseEvents extends BaseEventedEvents {\n\t *     (type: 'properties:changed', handler: PropertiesChangedHandler): Handle;\n\t * }\n\t * class WidgetBase extends Evented {\n\t *    on: WidgetBaseEvents;\n\t * }\n\t *\n\t * @return {any}\n\t */\n\ton<K extends keyof M>(type: K, listener: EventedCallbackOrArray<K, M[K]>): Handle;\n\ton(type: T, listener: EventedCallbackOrArray<T, O>): Handle;\n\ton(type: any, listener: EventedCallbackOrArray<any, any>): Handle {\n\t\tif (Array.isArray(listener)) {\n\t\t\tconst handles = listener.map((listener) => this._addListener(type, listener));\n\t\t\treturn {\n\t\t\t\tdestroy() {\n\t\t\t\t\thandles.forEach((handle) => handle.destroy());\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\treturn this._addListener(type, listener);\n\t}\n\n\tprivate _addListener(type: T | keyof M, listener: EventedCallback<T, O>) {\n\t\tconst listeners = this.listenersMap.get(type) || [];\n\t\tlisteners.push(listener);\n\t\tthis.listenersMap.set(type, listeners);\n\t\treturn {\n\t\t\tdestroy: () => {\n\t\t\t\tconst listeners = this.listenersMap.get(type) || [];\n\t\t\t\tlisteners.splice(listeners.indexOf(listener), 1);\n\t\t\t}\n\t\t};\n\t}\n}\n\nexport default Evented;\n","import Map from '../shim/Map';\nimport WeakMap from '../shim/WeakMap';\nimport { v, VNODE, isVNode, isWNode } from './d';\nimport { auto } from './diff';\nimport {\n\tAfterRender,\n\tBeforeProperties,\n\tBeforeRender,\n\tDiffPropertyReaction,\n\tDNode,\n\tDefaultWidgetBaseInterface,\n\tLazyWidget,\n\tRender,\n\tWidgetMetaConstructor,\n\tWidgetBaseInterface,\n\tWidgetProperties,\n\tWNode,\n\tVNode,\n\tLazyDefine,\n\tMetaBase\n} from './interfaces';\nimport RegistryHandler from './RegistryHandler';\nimport NodeHandler from './NodeHandler';\nimport { isWidgetBaseConstructor, WIDGET_BASE_TYPE } from './Registry';\nimport { Handle } from '../core/Destroyable';\nimport { Base } from './meta/Base';\n\ninterface ReactionFunctionConfig {\n\tpropertyName: string;\n\treaction: DiffPropertyReaction;\n}\n\nexport interface WidgetData {\n\tonDetach: () => void;\n\tonAttach: () => void;\n\tdirty: boolean;\n\tnodeHandler: NodeHandler;\n\tinvalidate?: Function;\n\trendering: boolean;\n\tinputProperties: any;\n}\n\nexport type BoundFunctionData = { boundFunc: (...args: any[]) => any; scope: any };\n\nlet lazyWidgetId = 0;\nconst lazyWidgetIdMap = new WeakMap<LazyWidget, string>();\nconst decoratorMap = new WeakMap<Function, Map<string, any[]>>();\nconst builtDecoratorMap = new WeakMap<Function, Map<string, any[]>>();\nexport const widgetInstanceMap = new WeakMap<\n\tWidgetBase<WidgetProperties, DNode<DefaultWidgetBaseInterface>>,\n\tWidgetData\n>();\nconst boundAuto = auto.bind(null);\n\nexport const noBind = '__dojo_no_bind';\n\nfunction toTextVNode(data: any): VNode {\n\treturn {\n\t\ttag: '',\n\t\tproperties: {},\n\t\tchildren: undefined,\n\t\ttext: `${data}`,\n\t\ttype: VNODE\n\t};\n}\n\nfunction isLazyDefine(item: any): item is LazyDefine {\n\treturn Boolean(item && item.label);\n}\n\nfunction isDomMeta(meta: any): meta is Base {\n\treturn Boolean(meta.afterRender);\n}\n\n/**\n * Main widget base for all widgets to extend\n */\nexport class WidgetBase<P = WidgetProperties, C extends DNode = DNode> implements WidgetBaseInterface<P, C> {\n\t/**\n\t * static identifier\n\t */\n\tstatic _type = WIDGET_BASE_TYPE;\n\n\t/**\n\t * children array\n\t */\n\tprivate _children: (C | null)[];\n\n\t/**\n\t * Indicates if it is the initial set properties cycle\n\t */\n\tprivate _initialProperties = true;\n\n\t/**\n\t * internal widget properties\n\t */\n\tprivate _properties: P & WidgetProperties & { [index: string]: any };\n\n\t/**\n\t * Array of property keys considered changed from the previous set properties\n\t */\n\tprivate _changedPropertyKeys: string[] = [];\n\n\t/**\n\t * map of decorators that are applied to this widget\n\t */\n\tprivate _decoratorCache: Map<string, any[]>;\n\n\tprivate _registry: RegistryHandler | undefined;\n\n\t/**\n\t * Map of functions properties for the bound function\n\t */\n\tprivate _bindFunctionPropertyMap: WeakMap<(...args: any[]) => any, BoundFunctionData> | undefined;\n\n\tprivate _metaMap: Map<WidgetMetaConstructor<any>, MetaBase> | undefined;\n\n\tprivate _boundRenderFunc: Render;\n\n\tprivate _boundInvalidate: () => void;\n\n\tprivate _nodeHandler: NodeHandler = new NodeHandler();\n\n\tprivate _handles: Handle[] = [];\n\n\t/**\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tthis._children = [];\n\t\tthis._decoratorCache = new Map<string, any[]>();\n\t\tthis._properties = {} as P;\n\t\tthis._boundRenderFunc = this.render.bind(this);\n\t\tthis._boundInvalidate = this.invalidate.bind(this);\n\n\t\twidgetInstanceMap.set(this, {\n\t\t\tdirty: true,\n\t\t\tonAttach: (): void => {\n\t\t\t\tthis.onAttach();\n\t\t\t},\n\t\t\tonDetach: (): void => {\n\t\t\t\tthis.onDetach();\n\t\t\t\tthis.destroy();\n\t\t\t},\n\t\t\tnodeHandler: this._nodeHandler,\n\t\t\trendering: false,\n\t\t\tinputProperties: {}\n\t\t});\n\n\t\tthis.own({\n\t\t\tdestroy: () => {\n\t\t\t\twidgetInstanceMap.delete(this);\n\t\t\t\tthis._nodeHandler.clear();\n\t\t\t\tthis._nodeHandler.destroy();\n\t\t\t}\n\t\t});\n\n\t\tthis._runAfterConstructors();\n\t}\n\n\tprotected meta<T extends MetaBase>(MetaType: WidgetMetaConstructor<T>): T {\n\t\tif (this._metaMap === undefined) {\n\t\t\tthis._metaMap = new Map<WidgetMetaConstructor<any>, MetaBase>();\n\t\t}\n\t\tlet cached = this._metaMap.get(MetaType);\n\t\tif (!cached) {\n\t\t\tcached = new MetaType({\n\t\t\t\tinvalidate: this._boundInvalidate,\n\t\t\t\tnodeHandler: this._nodeHandler,\n\t\t\t\tbind: this\n\t\t\t});\n\t\t\tthis.own(cached);\n\t\t\tthis._metaMap.set(MetaType, cached);\n\t\t}\n\n\t\treturn cached as T;\n\t}\n\n\tprotected onAttach(): void {\n\t\t// Do nothing by default.\n\t}\n\n\tprotected onDetach(): void {\n\t\t// Do nothing by default.\n\t}\n\n\tpublic get properties(): Readonly<P> & Readonly<WidgetProperties> {\n\t\treturn this._properties;\n\t}\n\n\tpublic get changedPropertyKeys(): string[] {\n\t\treturn [...this._changedPropertyKeys];\n\t}\n\n\tpublic __setProperties__(originalProperties: this['properties'], bind?: WidgetBaseInterface): void {\n\t\tconst instanceData = widgetInstanceMap.get(this);\n\t\tif (instanceData) {\n\t\t\tinstanceData.inputProperties = originalProperties;\n\t\t}\n\t\tconst properties = this._runBeforeProperties(originalProperties);\n\t\tconst registeredDiffPropertyNames = this.getDecorator('registeredDiffProperty');\n\t\tconst changedPropertyKeys: string[] = [];\n\t\tconst propertyNames = Object.keys(properties);\n\n\t\tif (this._initialProperties === false || registeredDiffPropertyNames.length !== 0) {\n\t\t\tconst allProperties = [...propertyNames, ...Object.keys(this._properties)];\n\t\t\tconst checkedProperties: (string | number)[] = [];\n\t\t\tconst diffPropertyResults: any = {};\n\t\t\tlet runReactions = false;\n\n\t\t\tfor (let i = 0; i < allProperties.length; i++) {\n\t\t\t\tconst propertyName = allProperties[i];\n\t\t\t\tif (checkedProperties.indexOf(propertyName) !== -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tcheckedProperties.push(propertyName);\n\t\t\t\tconst previousProperty = this._properties[propertyName];\n\t\t\t\tconst newProperty = this._bindFunctionProperty(properties[propertyName], bind);\n\t\t\t\tif (registeredDiffPropertyNames.indexOf(propertyName) !== -1) {\n\t\t\t\t\trunReactions = true;\n\t\t\t\t\tconst diffFunctions = this.getDecorator(`diffProperty:${propertyName}`);\n\t\t\t\t\tfor (let i = 0; i < diffFunctions.length; i++) {\n\t\t\t\t\t\tconst result = diffFunctions[i](previousProperty, newProperty);\n\t\t\t\t\t\tif (result.changed && changedPropertyKeys.indexOf(propertyName) === -1) {\n\t\t\t\t\t\t\tchangedPropertyKeys.push(propertyName);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (propertyName in properties) {\n\t\t\t\t\t\t\tdiffPropertyResults[propertyName] = result.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst result = boundAuto(previousProperty, newProperty);\n\t\t\t\t\tif (result.changed && changedPropertyKeys.indexOf(propertyName) === -1) {\n\t\t\t\t\t\tchangedPropertyKeys.push(propertyName);\n\t\t\t\t\t}\n\t\t\t\t\tif (propertyName in properties) {\n\t\t\t\t\t\tdiffPropertyResults[propertyName] = result.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (runReactions) {\n\t\t\t\tconst reactionFunctions: ReactionFunctionConfig[] = this.getDecorator('diffReaction');\n\t\t\t\tconst executedReactions: Function[] = [];\n\t\t\t\treactionFunctions.forEach(({ reaction, propertyName }) => {\n\t\t\t\t\tconst propertyChanged = changedPropertyKeys.indexOf(propertyName) !== -1;\n\t\t\t\t\tconst reactionRun = executedReactions.indexOf(reaction) !== -1;\n\t\t\t\t\tif (propertyChanged && !reactionRun) {\n\t\t\t\t\t\treaction.call(this, this._properties, diffPropertyResults);\n\t\t\t\t\t\texecutedReactions.push(reaction);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._properties = diffPropertyResults;\n\t\t\tthis._changedPropertyKeys = changedPropertyKeys;\n\t\t} else {\n\t\t\tthis._initialProperties = false;\n\t\t\tfor (let i = 0; i < propertyNames.length; i++) {\n\t\t\t\tconst propertyName = propertyNames[i];\n\t\t\t\tif (typeof properties[propertyName] === 'function') {\n\t\t\t\t\tproperties[propertyName] = this._bindFunctionProperty(properties[propertyName], bind);\n\t\t\t\t} else {\n\t\t\t\t\tchangedPropertyKeys.push(propertyName);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._changedPropertyKeys = changedPropertyKeys;\n\t\t\tthis._properties = { ...properties };\n\t\t}\n\n\t\tif (this._changedPropertyKeys.length > 0) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tpublic get children(): (C | null)[] {\n\t\treturn this._children;\n\t}\n\n\tpublic __setChildren__(children: (C | null)[]): void {\n\t\tif (this._children.length > 0 || children.length > 0) {\n\t\t\tthis._children = children;\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tprivate _filterAndConvert(nodes: DNode[]): (WNode | VNode)[];\n\tprivate _filterAndConvert(nodes: DNode): WNode | VNode;\n\tprivate _filterAndConvert(nodes: DNode | DNode[]): (WNode | VNode) | (WNode | VNode)[];\n\tprivate _filterAndConvert(nodes: DNode | DNode[]): (WNode | VNode) | (WNode | VNode)[] {\n\t\tconst isArray = Array.isArray(nodes);\n\t\tconst filteredNodes = Array.isArray(nodes) ? nodes : [nodes];\n\t\tconst convertedNodes: (WNode | VNode)[] = [];\n\t\tfor (let i = 0; i < filteredNodes.length; i++) {\n\t\t\tconst node = filteredNodes[i];\n\t\t\tif (!node || node === true) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (typeof node === 'string') {\n\t\t\t\tconvertedNodes.push(toTextVNode(node));\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (isVNode(node) && node.deferredPropertiesCallback) {\n\t\t\t\tconst properties = node.deferredPropertiesCallback(false);\n\t\t\t\tnode.originalProperties = node.properties;\n\t\t\t\tnode.properties = { ...properties, ...node.properties };\n\t\t\t}\n\t\t\tif (isWNode(node) && !isWidgetBaseConstructor(node.widgetConstructor)) {\n\t\t\t\tif (typeof node.widgetConstructor === 'function') {\n\t\t\t\t\tlet id = lazyWidgetIdMap.get(node.widgetConstructor);\n\t\t\t\t\tif (!id) {\n\t\t\t\t\t\tid = `__lazy_widget_${lazyWidgetId++}`;\n\t\t\t\t\t\tlazyWidgetIdMap.set(node.widgetConstructor, id);\n\t\t\t\t\t\tthis.registry.define(id, node.widgetConstructor);\n\t\t\t\t\t}\n\t\t\t\t\tnode.widgetConstructor = id;\n\t\t\t\t} else if (isLazyDefine(node.widgetConstructor)) {\n\t\t\t\t\tconst { label, registryItem } = node.widgetConstructor;\n\t\t\t\t\tif (!this.registry.has(label)) {\n\t\t\t\t\t\tthis.registry.define(label, registryItem);\n\t\t\t\t\t}\n\t\t\t\t\tnode.widgetConstructor = label;\n\t\t\t\t}\n\n\t\t\t\tnode.widgetConstructor =\n\t\t\t\t\tthis.registry.get<WidgetBase>(node.widgetConstructor) || node.widgetConstructor;\n\t\t\t}\n\t\t\tif (!node.bind) {\n\t\t\t\tnode.bind = this;\n\t\t\t}\n\t\t\tconvertedNodes.push(node);\n\t\t\tif (node.children && node.children.length) {\n\t\t\t\tnode.children = this._filterAndConvert(node.children);\n\t\t\t}\n\t\t}\n\t\treturn isArray ? convertedNodes : convertedNodes[0];\n\t}\n\n\tpublic __render__(): (WNode | VNode) | (WNode | VNode)[] {\n\t\tconst instanceData = widgetInstanceMap.get(this);\n\t\tif (instanceData) {\n\t\t\tinstanceData.dirty = false;\n\t\t}\n\t\tconst render = this._runBeforeRenders();\n\t\tconst dNode = this._filterAndConvert(this._runAfterRenders(render()));\n\t\tthis._nodeHandler.clear();\n\t\treturn dNode;\n\t}\n\n\tpublic invalidate(): void {\n\t\tconst instanceData = widgetInstanceMap.get(this);\n\t\tif (instanceData && instanceData.invalidate) {\n\t\t\tinstanceData.invalidate();\n\t\t}\n\t}\n\n\tprotected render(): DNode | DNode[] {\n\t\treturn v('div', {}, this.children);\n\t}\n\n\t/**\n\t * Function to add decorators to WidgetBase\n\t *\n\t * @param decoratorKey The key of the decorator\n\t * @param value The value of the decorator\n\t */\n\tprotected addDecorator(decoratorKey: string, value: any): void {\n\t\tvalue = Array.isArray(value) ? value : [value];\n\t\tif (this.hasOwnProperty('constructor')) {\n\t\t\tlet decoratorList = decoratorMap.get(this.constructor);\n\t\t\tif (!decoratorList) {\n\t\t\t\tdecoratorList = new Map<string, any[]>();\n\t\t\t\tdecoratorMap.set(this.constructor, decoratorList);\n\t\t\t}\n\n\t\t\tlet specificDecoratorList = decoratorList.get(decoratorKey);\n\t\t\tif (!specificDecoratorList) {\n\t\t\t\tspecificDecoratorList = [];\n\t\t\t\tdecoratorList.set(decoratorKey, specificDecoratorList);\n\t\t\t}\n\t\t\tspecificDecoratorList.push(...value);\n\t\t} else {\n\t\t\tconst decorators = this.getDecorator(decoratorKey);\n\t\t\tthis._decoratorCache.set(decoratorKey, [...decorators, ...value]);\n\t\t}\n\t}\n\n\t/**\n\t * Function to build the list of decorators from the global decorator map.\n\t *\n\t * @param decoratorKey  The key of the decorator\n\t * @return An array of decorator values\n\t * @private\n\t */\n\tprivate _buildDecoratorList(decoratorKey: string): any[] {\n\t\tconst allDecorators = [];\n\n\t\tlet constructor = this.constructor;\n\n\t\twhile (constructor) {\n\t\t\tconst instanceMap = decoratorMap.get(constructor);\n\t\t\tif (instanceMap) {\n\t\t\t\tconst decorators = instanceMap.get(decoratorKey);\n\n\t\t\t\tif (decorators) {\n\t\t\t\t\tallDecorators.unshift(...decorators);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconstructor = Object.getPrototypeOf(constructor);\n\t\t}\n\n\t\tconst buildDecorators = builtDecoratorMap.get(this.constructor) || new Map();\n\t\tbuildDecorators.set(decoratorKey, allDecorators);\n\t\tbuiltDecoratorMap.set(this.constructor, buildDecorators);\n\t\treturn allDecorators;\n\t}\n\n\t/**\n\t * Function to retrieve decorator values\n\t *\n\t * @param decoratorKey The key of the decorator\n\t * @returns An array of decorator values\n\t */\n\tprotected getDecorator(decoratorKey: string): any[] {\n\t\tlet decoratorCache = builtDecoratorMap.get(this.constructor);\n\t\tlet allDecorators =\n\t\t\tthis._decoratorCache.get(decoratorKey) || (decoratorCache && decoratorCache.get(decoratorKey));\n\n\t\tif (allDecorators !== undefined) {\n\t\t\treturn allDecorators;\n\t\t}\n\n\t\tallDecorators = this._buildDecoratorList(decoratorKey);\n\n\t\tallDecorators = [...allDecorators];\n\t\tthis._decoratorCache.set(decoratorKey, allDecorators);\n\t\treturn allDecorators;\n\t}\n\n\t/**\n\t * Binds unbound property functions to the specified `bind` property\n\t *\n\t * @param properties properties to check for functions\n\t */\n\tprivate _bindFunctionProperty(property: any, bind: any): any {\n\t\tif (typeof property === 'function' && !property[noBind] && isWidgetBaseConstructor(property) === false) {\n\t\t\tif (this._bindFunctionPropertyMap === undefined) {\n\t\t\t\tthis._bindFunctionPropertyMap = new WeakMap<\n\t\t\t\t\t(...args: any[]) => any,\n\t\t\t\t\t{ boundFunc: (...args: any[]) => any; scope: any }\n\t\t\t\t>();\n\t\t\t}\n\t\t\tconst bindInfo: Partial<BoundFunctionData> = this._bindFunctionPropertyMap.get(property) || {};\n\t\t\tlet { boundFunc, scope } = bindInfo;\n\n\t\t\tif (boundFunc === undefined || scope !== bind) {\n\t\t\t\tboundFunc = property.bind(bind) as (...args: any[]) => any;\n\t\t\t\tthis._bindFunctionPropertyMap.set(property, { boundFunc, scope: bind });\n\t\t\t}\n\t\t\treturn boundFunc;\n\t\t}\n\t\treturn property;\n\t}\n\n\tpublic get registry(): RegistryHandler {\n\t\tif (this._registry === undefined) {\n\t\t\tthis._registry = new RegistryHandler();\n\t\t\tthis.own(this._registry);\n\t\t\tthis.own(this._registry.on('invalidate', this._boundInvalidate));\n\t\t}\n\t\treturn this._registry;\n\t}\n\n\tprivate _runBeforeProperties(properties: any) {\n\t\tconst beforeProperties: BeforeProperties[] = this.getDecorator('beforeProperties');\n\t\tif (beforeProperties.length > 0) {\n\t\t\treturn beforeProperties.reduce(\n\t\t\t\t(properties, beforePropertiesFunction) => {\n\t\t\t\t\treturn { ...properties, ...beforePropertiesFunction.call(this, properties) };\n\t\t\t\t},\n\t\t\t\t{ ...properties }\n\t\t\t);\n\t\t}\n\t\treturn properties;\n\t}\n\n\t/**\n\t * Run all registered before renders and return the updated render method\n\t */\n\tprivate _runBeforeRenders(): Render {\n\t\tconst beforeRenders = this.getDecorator('beforeRender');\n\n\t\tif (beforeRenders.length > 0) {\n\t\t\treturn beforeRenders.reduce((render: Render, beforeRenderFunction: BeforeRender) => {\n\t\t\t\tconst updatedRender = beforeRenderFunction.call(this, render, this._properties, this._children);\n\t\t\t\tif (!updatedRender) {\n\t\t\t\t\tconsole.warn('Render function not returned from beforeRender, using previous render');\n\t\t\t\t\treturn render;\n\t\t\t\t}\n\t\t\t\treturn updatedRender;\n\t\t\t}, this._boundRenderFunc);\n\t\t}\n\t\treturn this._boundRenderFunc;\n\t}\n\n\t/**\n\t * Run all registered after renders and return the decorated DNodes\n\t *\n\t * @param dNode The DNodes to run through the after renders\n\t */\n\tprivate _runAfterRenders(dNode: DNode | DNode[]): DNode | DNode[] {\n\t\tconst afterRenders = this.getDecorator('afterRender');\n\n\t\tif (afterRenders.length > 0) {\n\t\t\tdNode = afterRenders.reduce((dNode: DNode | DNode[], afterRenderFunction: AfterRender) => {\n\t\t\t\treturn afterRenderFunction.call(this, dNode);\n\t\t\t}, dNode);\n\t\t}\n\n\t\tif (this._metaMap !== undefined) {\n\t\t\tthis._metaMap.forEach((meta) => {\n\t\t\t\tisDomMeta(meta) && meta.afterRender();\n\t\t\t});\n\t\t}\n\n\t\treturn dNode;\n\t}\n\n\tprivate _runAfterConstructors(): void {\n\t\tconst afterConstructors = this.getDecorator('afterConstructor');\n\n\t\tif (afterConstructors.length > 0) {\n\t\t\tafterConstructors.forEach((afterConstructor) => afterConstructor.call(this));\n\t\t}\n\t}\n\n\tprotected own(handle: Handle): void {\n\t\tthis._handles.push(handle);\n\t}\n\n\tprotected destroy() {\n\t\twhile (this._handles.length > 0) {\n\t\t\tconst handle = this._handles.pop();\n\t\t\tif (handle) {\n\t\t\t\thandle.destroy();\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default WidgetBase;\n","import { Thenable } from './interfaces';\nimport global from './global';\nimport { queueMicroTask } from './support/queue';\nimport { Iterable } from './iterator';\nimport './Symbol';\nimport has from '../has/has';\n\n/**\n * Executor is the interface for functions used to initialize a Promise.\n */\nexport interface Executor<T> {\n\t/**\n\t * The executor for the promise\n\t *\n\t * @param resolve The resolver callback of the promise\n\t * @param reject The rejector callback of the promise\n\t */\n\t(resolve: (value?: T | PromiseLike<T>) => void, reject: (reason?: any) => void): void;\n}\n\ndeclare global {\n\tinterface Promise<T> {\n\t\tfinally(onfinally?: (() => void) | undefined | null): Promise<T>;\n\t}\n}\n\nexport let ShimPromise: typeof Promise = global.Promise;\n\nexport const isThenable = function isThenable<T>(value: any): value is PromiseLike<T> {\n\treturn value && typeof value.then === 'function';\n};\n\nif (!has('es6-promise')) {\n\tconst enum State {\n\t\tFulfilled,\n\t\tPending,\n\t\tRejected\n\t}\n\n\tglobal.Promise = ShimPromise = class Promise<T> implements Thenable<T> {\n\t\tstatic all(iterable: Iterable<any | PromiseLike<any>> | (any | PromiseLike<any>)[]): Promise<any> {\n\t\t\treturn new this(function(resolve, reject) {\n\t\t\t\tconst values: any[] = [];\n\t\t\t\tlet complete = 0;\n\t\t\t\tlet total = 0;\n\t\t\t\tlet populating = true;\n\n\t\t\t\tfunction fulfill(index: number, value: any): void {\n\t\t\t\t\tvalues[index] = value;\n\t\t\t\t\t++complete;\n\t\t\t\t\tfinish();\n\t\t\t\t}\n\n\t\t\t\tfunction finish(): void {\n\t\t\t\t\tif (populating || complete < total) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tresolve(values);\n\t\t\t\t}\n\n\t\t\t\tfunction processItem(index: number, item: any): void {\n\t\t\t\t\t++total;\n\t\t\t\t\tif (isThenable(item)) {\n\t\t\t\t\t\t// If an item Promise rejects, this Promise is immediately rejected with the item\n\t\t\t\t\t\t// Promise's rejection error.\n\t\t\t\t\t\titem.then(fulfill.bind(null, index), reject);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tPromise.resolve(item).then(fulfill.bind(null, index));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet i = 0;\n\t\t\t\tfor (const value of iterable) {\n\t\t\t\t\tprocessItem(i, value);\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\tpopulating = false;\n\n\t\t\t\tfinish();\n\t\t\t});\n\t\t}\n\n\t\tstatic race<T>(iterable: Iterable<T | PromiseLike<T>> | (T | PromiseLike<T>)[]): Promise<T[]> {\n\t\t\treturn new this(function(resolve: (value?: any) => void, reject) {\n\t\t\t\tfor (const item of iterable) {\n\t\t\t\t\tif (item instanceof Promise) {\n\t\t\t\t\t\t// If a Promise item rejects, this Promise is immediately rejected with the item\n\t\t\t\t\t\t// Promise's rejection error.\n\t\t\t\t\t\titem.then(resolve, reject);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tPromise.resolve(item).then(resolve);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tstatic reject(reason?: any): Promise<never> {\n\t\t\treturn new this(function(resolve, reject) {\n\t\t\t\treject(reason);\n\t\t\t});\n\t\t}\n\n\t\tstatic resolve(): Promise<void>;\n\t\tstatic resolve<T>(value: T | PromiseLike<T>): Promise<T>;\n\t\tstatic resolve<T>(value?: any): Promise<T> {\n\t\t\treturn new this(function(resolve) {\n\t\t\t\tresolve(<T>value);\n\t\t\t});\n\t\t}\n\n\t\tstatic [Symbol.species]: PromiseConstructor = ShimPromise as PromiseConstructor;\n\n\t\t/**\n\t\t * Creates a new Promise.\n\t\t *\n\t\t * @constructor\n\t\t *\n\t\t * @param executor\n\t\t * The executor function is called immediately when the Promise is instantiated. It is responsible for\n\t\t * starting the asynchronous operation when it is invoked.\n\t\t *\n\t\t * The executor must call either the passed `resolve` function when the asynchronous operation has completed\n\t\t * successfully, or the `reject` function when the operation fails.\n\t\t */\n\t\tconstructor(executor: Executor<T>) {\n\t\t\t/**\n\t\t\t * If true, the resolution of this promise is chained (\"locked in\") to another promise.\n\t\t\t */\n\t\t\tlet isChained = false;\n\n\t\t\t/**\n\t\t\t * Whether or not this promise is in a resolved state.\n\t\t\t */\n\t\t\tconst isResolved = (): boolean => {\n\t\t\t\treturn this.state !== State.Pending || isChained;\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Callbacks that should be invoked once the asynchronous operation has completed.\n\t\t\t */\n\t\t\tlet callbacks: null | (Array<() => void>) = [];\n\n\t\t\t/**\n\t\t\t * Initially pushes callbacks onto a queue for execution once this promise settles. After the promise settles,\n\t\t\t * enqueues callbacks for execution on the next event loop turn.\n\t\t\t */\n\t\t\tlet whenFinished = function(callback: () => void): void {\n\t\t\t\tif (callbacks) {\n\t\t\t\t\tcallbacks.push(callback);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Settles this promise.\n\t\t\t *\n\t\t\t * @param newState The resolved state for this promise.\n\t\t\t * @param {T|any} value The resolved value for this promise.\n\t\t\t */\n\t\t\tconst settle = (newState: State, value: any): void => {\n\t\t\t\t// A promise can only be settled once.\n\t\t\t\tif (this.state !== State.Pending) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.state = newState;\n\t\t\t\tthis.resolvedValue = value;\n\t\t\t\twhenFinished = queueMicroTask;\n\n\t\t\t\t// Only enqueue a callback runner if there are callbacks so that initially fulfilled Promises don't have to\n\t\t\t\t// wait an extra turn.\n\t\t\t\tif (callbacks && callbacks.length > 0) {\n\t\t\t\t\tqueueMicroTask(function(): void {\n\t\t\t\t\t\tif (callbacks) {\n\t\t\t\t\t\t\tlet count = callbacks.length;\n\t\t\t\t\t\t\tfor (let i = 0; i < count; ++i) {\n\t\t\t\t\t\t\t\tcallbacks[i].call(null);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcallbacks = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Resolves this promise.\n\t\t\t *\n\t\t\t * @param newState The resolved state for this promise.\n\t\t\t * @param {T|any} value The resolved value for this promise.\n\t\t\t */\n\t\t\tconst resolve = (newState: State, value: any): void => {\n\t\t\t\tif (isResolved()) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (isThenable(value)) {\n\t\t\t\t\tvalue.then(settle.bind(null, State.Fulfilled), settle.bind(null, State.Rejected));\n\t\t\t\t\tisChained = true;\n\t\t\t\t} else {\n\t\t\t\t\tsettle(newState, value);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.then = <TResult1 = T, TResult2 = never>(\n\t\t\t\tonFulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,\n\t\t\t\tonRejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null\n\t\t\t): Promise<TResult1 | TResult2> => {\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\t// whenFinished initially queues up callbacks for execution after the promise has settled. Once the\n\t\t\t\t\t// promise has settled, whenFinished will schedule callbacks for execution on the next turn through the\n\t\t\t\t\t// event loop.\n\t\t\t\t\twhenFinished(() => {\n\t\t\t\t\t\tconst callback: ((value?: any) => any) | undefined | null =\n\t\t\t\t\t\t\tthis.state === State.Rejected ? onRejected : onFulfilled;\n\n\t\t\t\t\t\tif (typeof callback === 'function') {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tresolve(callback(this.resolvedValue));\n\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (this.state === State.Rejected) {\n\t\t\t\t\t\t\treject(this.resolvedValue);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresolve(this.resolvedValue);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\texecutor(resolve.bind(null, State.Fulfilled), resolve.bind(null, State.Rejected));\n\t\t\t} catch (error) {\n\t\t\t\tsettle(State.Rejected, error);\n\t\t\t}\n\t\t}\n\n\t\tcatch<TResult = never>(\n\t\t\tonRejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null\n\t\t): Promise<T | TResult> {\n\t\t\treturn this.then(undefined, onRejected);\n\t\t}\n\n\t\t/**\n\t\t * The current state of this promise.\n\t\t */\n\t\tprivate state = State.Pending;\n\n\t\t/**\n\t\t * The resolved value for this promise.\n\t\t *\n\t\t * @type {T|any}\n\t\t */\n\t\tprivate resolvedValue: any;\n\n\t\tthen: <TResult1 = T, TResult2 = never>(\n\t\t\tonfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,\n\t\t\tonrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null\n\t\t) => Promise<TResult1 | TResult2>;\n\n\t\t[Symbol.toStringTag]: 'Promise' = 'Promise';\n\t} as any;\n\t// this cast is needed in order to omit finally in the class declaration; this was done so the finally code\n\t// is not duplicated and always added in the conditional below\n}\n\nif (!has('es2018-promise-finally')) {\n\tglobal.Promise.prototype.finally = function<T>(\n\t\tthis: Promise<T>,\n\t\tonFinally: (() => any) | undefined | null\n\t): Promise<any> {\n\t\treturn this.then(\n\t\t\tonFinally && ((value: T) => Promise.resolve(onFinally()).then(() => value)),\n\t\t\tonFinally &&\n\t\t\t\t((reason: any) =>\n\t\t\t\t\tPromise.resolve(onFinally()).then(() => {\n\t\t\t\t\t\tthrow reason;\n\t\t\t\t\t}))\n\t\t);\n\t};\n}\n\nexport default ShimPromise;\n","import Promise from '../shim/Promise';\n\n/**\n * Used through the toolkit as a consistent API to manage how callers can \"cleanup\"\n * when doing a function.\n */\nexport interface Handle {\n\t/**\n\t * Perform the destruction/cleanup logic associated with this Handle\n\t */\n\tdestroy(): void;\n}\n\n/**\n * No op function used to replace a Destroyable instance's `destroy` method, once the instance has been destroyed\n */\nfunction noop(): Promise<boolean> {\n\treturn Promise.resolve(false);\n}\n\n/**\n * No op function used to replace a Destroyable instance's `own` method, once the instance has been destroyed\n */\nfunction destroyed(): never {\n\tthrow new Error('Call made to destroyed method');\n}\n\nexport class Destroyable {\n\t/**\n\t * The instance's handles\n\t */\n\tprivate handles: Handle[];\n\n\t/**\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tthis.handles = [];\n\t}\n\n\t/**\n\t * Register handles for the instance that will be destroyed when `this.destroy` is called\n\t *\n\t * @param {Handle} handle The handle to add for the instance\n\t * @returns {Handle} A wrapper Handle. When the wrapper Handle's `destroy` method is invoked, the original handle is\n\t *                   removed from the instance, and its `destroy` method is invoked.\n\t */\n\town(handle: Handle): Handle {\n\t\tconst { handles: _handles } = this;\n\t\t_handles.push(handle);\n\t\treturn {\n\t\t\tdestroy() {\n\t\t\t\t_handles.splice(_handles.indexOf(handle));\n\t\t\t\thandle.destroy();\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Destroys all handlers registered for the instance\n\t *\n\t * @returns {Promise<any} A Promise that resolves once all handles have been destroyed\n\t */\n\tdestroy(): Promise<any> {\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.handles.forEach((handle) => {\n\t\t\t\thandle && handle.destroy && handle.destroy();\n\t\t\t});\n\t\t\tthis.destroy = noop;\n\t\t\tthis.own = destroyed;\n\t\t\tresolve(true);\n\t\t});\n\t}\n}\n\nexport default Destroyable;\n","import global from '../shim/global';\nimport has from '../has/has';\nimport { WeakMap } from '../shim/WeakMap';\nimport {\n\tWNode,\n\tVNode,\n\tDNode,\n\tVNodeProperties,\n\tWidgetBaseConstructor,\n\tTransitionStrategy,\n\tSupportedClassName,\n\tDomVNode\n} from './interfaces';\nimport transitionStrategy from './animations/cssTransitions';\nimport { isVNode, isWNode, WNODE, v, isDomVNode, w } from './d';\nimport { Registry, isWidgetBaseConstructor } from './Registry';\nimport { WidgetBase, widgetInstanceMap } from './WidgetBase';\n\nexport interface BaseNodeWrapper {\n\tnode: WNode | VNode;\n\tdomNode?: Node;\n\tchildrenWrappers?: DNodeWrapper[];\n\tdepth: number;\n\torder: number;\n\trequiresInsertBefore?: boolean;\n\thasPreviousSiblings?: boolean;\n\thasParentWNode?: boolean;\n\tnamespace?: string;\n\thasAnimations?: boolean;\n}\n\nexport interface WNodeWrapper extends BaseNodeWrapper {\n\tnode: WNode;\n\tinstance?: WidgetBase;\n\tmergeNodes?: Node[];\n\tnodeHandlerCalled?: boolean;\n}\n\nexport interface VNodeWrapper extends BaseNodeWrapper {\n\tnode: VNode | DomVNode;\n\tmerged?: boolean;\n\tdecoratedDeferredProperties?: VNodeProperties;\n\tinserted?: boolean;\n}\n\nexport type DNodeWrapper = VNodeWrapper | WNodeWrapper;\n\nexport interface MountOptions {\n\tsync: boolean;\n\tmerge: boolean;\n\ttransition: TransitionStrategy;\n\tdomNode: HTMLElement;\n\tregistry: Registry | null;\n}\n\nexport interface Renderer {\n\tinvalidate(): void;\n\tmount(mountOptions?: Partial<MountOptions>): void;\n}\n\ninterface ProcessItem {\n\tcurrent?: (WNodeWrapper | VNodeWrapper)[];\n\tnext?: (WNodeWrapper | VNodeWrapper)[];\n\tmeta: ProcessMeta;\n}\n\ninterface ProcessResult {\n\titem?: ProcessItem;\n\twidget?: AttachApplication | DetachApplication;\n\tdom?: ApplicationInstruction;\n}\n\ninterface ProcessMeta {\n\tmergeNodes?: Node[];\n\toldIndex?: number;\n\tnewIndex?: number;\n}\n\ninterface InvalidationQueueItem {\n\tinstance: WidgetBase;\n\tdepth: number;\n\torder: number;\n}\n\ninterface Instruction {\n\tcurrent: undefined | DNodeWrapper;\n\tnext: undefined | DNodeWrapper;\n}\n\ninterface CreateWidgetInstruction {\n\tnext: WNodeWrapper;\n}\n\ninterface UpdateWidgetInstruction {\n\tcurrent: WNodeWrapper;\n\tnext: WNodeWrapper;\n}\n\ninterface RemoveWidgetInstruction {\n\tcurrent: WNodeWrapper;\n}\n\ninterface CreateDomInstruction {\n\tnext: VNodeWrapper;\n}\n\ninterface UpdateDomInstruction {\n\tcurrent: VNodeWrapper;\n\tnext: VNodeWrapper;\n}\n\ninterface RemoveDomInstruction {\n\tcurrent: VNodeWrapper;\n}\n\ninterface AttachApplication {\n\ttype: 'attach';\n\tinstance: WidgetBase;\n\tattached: boolean;\n}\n\ninterface DetachApplication {\n\ttype: 'detach';\n\tcurrent: WNodeWrapper;\n}\n\ninterface CreateDomApplication {\n\ttype: 'create';\n\tcurrent?: VNodeWrapper;\n\tnext: VNodeWrapper;\n\tparentDomNode: Node;\n}\n\ninterface DeleteDomApplication {\n\ttype: 'delete';\n\tcurrent: VNodeWrapper;\n}\n\ninterface UpdateDomApplication {\n\ttype: 'update';\n\tcurrent: VNodeWrapper;\n\tnext: VNodeWrapper;\n}\n\ninterface PreviousProperties {\n\tproperties: any;\n\tattributes?: any;\n\tevents?: any;\n}\n\ntype ApplicationInstruction =\n\t| CreateDomApplication\n\t| UpdateDomApplication\n\t| DeleteDomApplication\n\t| AttachApplication\n\t| DetachApplication;\n\nconst EMPTY_ARRAY: DNodeWrapper[] = [];\nconst nodeOperations = ['focus', 'blur', 'scrollIntoView', 'click'];\nconst NAMESPACE_W3 = 'http://www.w3.org/';\nconst NAMESPACE_SVG = NAMESPACE_W3 + '2000/svg';\nconst NAMESPACE_XLINK = NAMESPACE_W3 + '1999/xlink';\n\nfunction isWNodeWrapper(child: DNodeWrapper): child is WNodeWrapper {\n\treturn child && isWNode(child.node);\n}\n\nfunction isVNodeWrapper(child?: DNodeWrapper | null): child is VNodeWrapper {\n\treturn !!child && isVNode(child.node);\n}\n\nfunction isAttachApplication(value: any): value is AttachApplication | DetachApplication {\n\treturn !!value.type;\n}\n\nfunction updateAttributes(\n\tdomNode: Element,\n\tpreviousAttributes: { [index: string]: string | undefined },\n\tattributes: { [index: string]: string | undefined },\n\tnamespace?: string\n) {\n\tconst attrNames = Object.keys(attributes);\n\tconst attrCount = attrNames.length;\n\tfor (let i = 0; i < attrCount; i++) {\n\t\tconst attrName = attrNames[i];\n\t\tconst attrValue = attributes[attrName];\n\t\tconst previousAttrValue = previousAttributes[attrName];\n\t\tif (attrValue !== previousAttrValue) {\n\t\t\tupdateAttribute(domNode, attrName, attrValue, namespace);\n\t\t}\n\t}\n}\n\nfunction buildPreviousProperties(domNode: any, current: VNodeWrapper, next: VNodeWrapper) {\n\tconst {\n\t\tnode: { diffType, properties, attributes }\n\t} = current;\n\tif (!diffType || diffType === 'vdom') {\n\t\treturn {\n\t\t\tproperties: current.node.properties,\n\t\t\tattributes: current.node.attributes,\n\t\t\tevents: current.node.events\n\t\t};\n\t} else if (diffType === 'none') {\n\t\treturn { properties: {}, attributes: current.node.attributes ? {} : undefined, events: current.node.events };\n\t}\n\tlet newProperties: any = {\n\t\tproperties: {}\n\t};\n\tif (attributes) {\n\t\tnewProperties.attributes = {};\n\t\tnewProperties.events = current.node.events;\n\t\tObject.keys(properties).forEach((propName) => {\n\t\t\tnewProperties.properties[propName] = domNode[propName];\n\t\t});\n\t\tObject.keys(attributes).forEach((attrName) => {\n\t\t\tnewProperties.attributes[attrName] = domNode.getAttribute(attrName);\n\t\t});\n\t\treturn newProperties;\n\t}\n\tnewProperties.properties = Object.keys(properties).reduce(\n\t\t(props, property) => {\n\t\t\tprops[property] = domNode.getAttribute(property) || domNode[property];\n\t\t\treturn props;\n\t\t},\n\t\t{} as any\n\t);\n\treturn newProperties;\n}\n\nfunction checkDistinguishable(wrappers: DNodeWrapper[], index: number, parentWNodeWrapper?: WNodeWrapper) {\n\tconst wrapperToCheck = wrappers[index];\n\tif (isVNodeWrapper(wrapperToCheck) && !wrapperToCheck.node.tag) {\n\t\treturn;\n\t}\n\tconst { key } = wrapperToCheck.node.properties;\n\tlet parentName = 'unknown';\n\tif (parentWNodeWrapper) {\n\t\tconst {\n\t\t\tnode: { widgetConstructor }\n\t\t} = parentWNodeWrapper;\n\t\tparentName = (widgetConstructor as any).name || 'unknown';\n\t}\n\n\tif (key === undefined || key === null) {\n\t\tfor (let i = 0; i < wrappers.length; i++) {\n\t\t\tif (i !== index) {\n\t\t\t\tconst wrapper = wrappers[i];\n\t\t\t\tif (same(wrapper, wrapperToCheck)) {\n\t\t\t\t\tlet nodeIdentifier: string;\n\t\t\t\t\tif (isWNodeWrapper(wrapper)) {\n\t\t\t\t\t\tnodeIdentifier = (wrapper.node.widgetConstructor as any).name || 'unknown';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnodeIdentifier = wrapper.node.tag;\n\t\t\t\t\t}\n\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`A widget (${parentName}) has had a child added or removed, but they were not able to uniquely identified. It is recommended to provide a unique 'key' property when using the same widget or element (${nodeIdentifier}) multiple times as siblings`\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction same(dnode1: DNodeWrapper, dnode2: DNodeWrapper): boolean {\n\tif (isVNodeWrapper(dnode1) && isVNodeWrapper(dnode2)) {\n\t\tif (isDomVNode(dnode1.node) && isDomVNode(dnode2.node)) {\n\t\t\tif (dnode1.node.domNode !== dnode2.node.domNode) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (dnode1.node.tag !== dnode2.node.tag) {\n\t\t\treturn false;\n\t\t}\n\t\tif (dnode1.node.properties.key !== dnode2.node.properties.key) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t} else if (isWNodeWrapper(dnode1) && isWNodeWrapper(dnode2)) {\n\t\tif (dnode1.instance === undefined && typeof dnode2.node.widgetConstructor === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\tif (dnode1.node.widgetConstructor !== dnode2.node.widgetConstructor) {\n\t\t\treturn false;\n\t\t}\n\t\tif (dnode1.node.properties.key !== dnode2.node.properties.key) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction findIndexOfChild(children: DNodeWrapper[], sameAs: DNodeWrapper, start: number) {\n\tfor (let i = start; i < children.length; i++) {\n\t\tif (same(children[i], sameAs)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction createClassPropValue(classes: SupportedClassName | SupportedClassName[] = []) {\n\tclasses = Array.isArray(classes) ? classes : [classes];\n\treturn classes\n\t\t.filter((className) => className && className !== true)\n\t\t.join(' ')\n\t\t.trim();\n}\n\nfunction updateAttribute(domNode: Element, attrName: string, attrValue: string | undefined, namespace?: string) {\n\tif (namespace === NAMESPACE_SVG && attrName === 'href' && attrValue) {\n\t\tdomNode.setAttributeNS(NAMESPACE_XLINK, attrName, attrValue);\n\t} else if ((attrName === 'role' && attrValue === '') || attrValue === undefined) {\n\t\tdomNode.removeAttribute(attrName);\n\t} else {\n\t\tdomNode.setAttribute(attrName, attrValue);\n\t}\n}\n\nfunction runEnterAnimation(next: VNodeWrapper, transitions: TransitionStrategy) {\n\tconst {\n\t\tdomNode,\n\t\tnode: { properties },\n\t\tnode: {\n\t\t\tproperties: { enterAnimation }\n\t\t}\n\t} = next;\n\tif (enterAnimation && enterAnimation !== true) {\n\t\tif (typeof enterAnimation === 'function') {\n\t\t\treturn enterAnimation(domNode as Element, properties);\n\t\t}\n\t\ttransitions.enter(domNode as Element, properties, enterAnimation);\n\t}\n}\n\nfunction runExitAnimation(current: VNodeWrapper, transitions: TransitionStrategy, exitAnimation: string | Function) {\n\tconst {\n\t\tdomNode,\n\t\tnode: { properties }\n\t} = current;\n\tconst removeDomNode = () => {\n\t\tdomNode && domNode.parentNode && domNode.parentNode.removeChild(domNode);\n\t\tcurrent.domNode = undefined;\n\t};\n\tif (typeof exitAnimation === 'function') {\n\t\treturn exitAnimation(domNode as Element, removeDomNode, properties);\n\t}\n\ttransitions.exit(domNode as Element, properties, exitAnimation, removeDomNode);\n}\n\nfunction arrayFrom(arr: any) {\n\treturn Array.prototype.slice.call(arr);\n}\n\nfunction wrapNodes(renderer: () => DNode) {\n\treturn class extends WidgetBase {\n\t\tpublic isWNodeWrapper = true;\n\n\t\tprotected render() {\n\t\t\tconst result = renderer();\n\t\t\tthis.isWNodeWrapper = isWNode(result);\n\t\t\treturn result;\n\t\t}\n\t};\n}\n\nexport function renderer(renderer: () => WNode | VNode): Renderer {\n\tlet _mountOptions: MountOptions = {\n\t\tsync: false,\n\t\tmerge: true,\n\t\ttransition: transitionStrategy,\n\t\tdomNode: global.document.body,\n\t\tregistry: null\n\t};\n\tlet _invalidationQueue: InvalidationQueueItem[] = [];\n\tlet _processQueue: (ProcessItem | DetachApplication | AttachApplication)[] = [];\n\tlet _applicationQueue: ApplicationInstruction[] = [];\n\tlet _eventMap = new WeakMap<Function, EventListener>();\n\tlet _instanceToWrapperMap = new WeakMap<WidgetBase, WNodeWrapper>();\n\tlet _parentWrapperMap = new WeakMap<DNodeWrapper, DNodeWrapper>();\n\tlet _wrapperSiblingMap = new WeakMap<DNodeWrapper, DNodeWrapper>();\n\tlet _insertBeforeMap: undefined | WeakMap<DNodeWrapper, Node> = new WeakMap<DNodeWrapper, Node>();\n\tlet _renderScheduled: number | undefined;\n\tlet _afterRenderCallbacks: Function[] = [];\n\tlet _deferredRenderCallbacks: Function[] = [];\n\tlet parentInvalidate: () => void;\n\tlet _allMergedNodes: Node[] = [];\n\n\tfunction nodeOperation(\n\t\tpropName: string,\n\t\tpropValue: (() => boolean) | boolean,\n\t\tpreviousValue: boolean,\n\t\tdomNode: HTMLElement & { [index: string]: any }\n\t): void {\n\t\tlet result = propValue && !previousValue;\n\t\tif (typeof propValue === 'function') {\n\t\t\tresult = propValue();\n\t\t}\n\t\tif (result === true) {\n\t\t\t_afterRenderCallbacks.push(() => {\n\t\t\t\tdomNode[propName]();\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction updateEvent(\n\t\tdomNode: Node,\n\t\teventName: string,\n\t\tcurrentValue: Function,\n\t\tbind: any,\n\t\tpreviousValue?: Function\n\t) {\n\t\tif (previousValue) {\n\t\t\tconst previousEvent = _eventMap.get(previousValue);\n\t\t\tdomNode.removeEventListener(eventName, previousEvent);\n\t\t}\n\n\t\tlet callback = currentValue.bind(bind);\n\n\t\tif (eventName === 'input') {\n\t\t\tcallback = function(this: any, evt: Event) {\n\t\t\t\tcurrentValue.call(this, evt);\n\t\t\t\t(evt.target as any)['oninput-value'] = (evt.target as HTMLInputElement).value;\n\t\t\t}.bind(bind);\n\t\t}\n\n\t\tdomNode.addEventListener(eventName, callback);\n\t\t_eventMap.set(currentValue, callback);\n\t}\n\n\tfunction removeOrphanedEvents(\n\t\tdomNode: Element,\n\t\tpreviousProperties: VNodeProperties,\n\t\tproperties: VNodeProperties,\n\t\tonlyEvents: boolean = false\n\t) {\n\t\tObject.keys(previousProperties).forEach((propName) => {\n\t\t\tconst isEvent = propName.substr(0, 2) === 'on' || onlyEvents;\n\t\t\tconst eventName = onlyEvents ? propName : propName.substr(2);\n\t\t\tif (isEvent && !properties[propName]) {\n\t\t\t\tconst eventCallback = _eventMap.get(previousProperties[propName]);\n\t\t\t\tif (eventCallback) {\n\t\t\t\t\tdomNode.removeEventListener(eventName, eventCallback);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction renderedToWrapper(\n\t\trendered: DNode[],\n\t\tparent: DNodeWrapper,\n\t\tcurrentParent: DNodeWrapper | null\n\t): DNodeWrapper[] {\n\t\tconst { requiresInsertBefore, hasPreviousSiblings, namespace, depth } = parent;\n\t\tconst wrappedRendered: DNodeWrapper[] = [];\n\t\tconst hasParentWNode = isWNodeWrapper(parent);\n\t\tconst currentParentChildren = (isVNodeWrapper(currentParent) && currentParent.childrenWrappers) || [];\n\t\tconst hasCurrentParentChildren = currentParentChildren.length > 0;\n\t\tconst insertBefore =\n\t\t\t((requiresInsertBefore || hasPreviousSiblings !== false) && hasParentWNode) ||\n\t\t\t(hasCurrentParentChildren && rendered.length > 1);\n\t\tlet previousItem: DNodeWrapper | undefined;\n\t\tfor (let i = 0; i < rendered.length; i++) {\n\t\t\tconst renderedItem = rendered[i];\n\t\t\tconst wrapper = {\n\t\t\t\tnode: renderedItem,\n\t\t\t\tdepth: depth + 1,\n\t\t\t\torder: i,\n\t\t\t\trequiresInsertBefore: insertBefore,\n\t\t\t\thasParentWNode,\n\t\t\t\tnamespace: namespace\n\t\t\t} as DNodeWrapper;\n\t\t\tif (isVNode(renderedItem) && renderedItem.properties.exitAnimation) {\n\t\t\t\tparent.hasAnimations = true;\n\t\t\t\tlet nextParent = _parentWrapperMap.get(parent);\n\t\t\t\twhile (nextParent) {\n\t\t\t\t\tif (nextParent.hasAnimations) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tnextParent.hasAnimations = true;\n\t\t\t\t\tnextParent = _parentWrapperMap.get(nextParent);\n\t\t\t\t}\n\t\t\t}\n\t\t\t_parentWrapperMap.set(wrapper, parent);\n\t\t\tif (previousItem) {\n\t\t\t\t_wrapperSiblingMap.set(previousItem, wrapper);\n\t\t\t}\n\t\t\twrappedRendered.push(wrapper);\n\t\t\tpreviousItem = wrapper;\n\t\t}\n\t\treturn wrappedRendered;\n\t}\n\n\tfunction findParentWNodeWrapper(currentNode: DNodeWrapper): WNodeWrapper | undefined {\n\t\tlet parentWNodeWrapper: WNodeWrapper | undefined;\n\t\tlet parentWrapper = _parentWrapperMap.get(currentNode);\n\n\t\twhile (!parentWNodeWrapper && parentWrapper) {\n\t\t\tif (!parentWNodeWrapper && isWNodeWrapper(parentWrapper)) {\n\t\t\t\tparentWNodeWrapper = parentWrapper;\n\t\t\t}\n\t\t\tparentWrapper = _parentWrapperMap.get(parentWrapper);\n\t\t}\n\t\treturn parentWNodeWrapper;\n\t}\n\n\tfunction findParentDomNode(currentNode: DNodeWrapper): Node | undefined {\n\t\tlet parentDomNode: Node | undefined;\n\t\tlet parentWrapper = _parentWrapperMap.get(currentNode);\n\n\t\twhile (!parentDomNode && parentWrapper) {\n\t\t\tif (!parentDomNode && isVNodeWrapper(parentWrapper) && parentWrapper.domNode) {\n\t\t\t\tparentDomNode = parentWrapper.domNode;\n\t\t\t}\n\t\t\tparentWrapper = _parentWrapperMap.get(parentWrapper);\n\t\t}\n\t\treturn parentDomNode;\n\t}\n\n\tfunction runDeferredProperties(next: VNodeWrapper) {\n\t\tif (next.node.deferredPropertiesCallback) {\n\t\t\tconst properties = next.node.properties;\n\t\t\tnext.node.properties = { ...next.node.deferredPropertiesCallback(true), ...next.node.originalProperties };\n\t\t\t_afterRenderCallbacks.push(() => {\n\t\t\t\tprocessProperties(next, { properties });\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction findInsertBefore(next: DNodeWrapper) {\n\t\tlet insertBefore: Node | null = null;\n\t\tlet searchNode: DNodeWrapper | undefined = next;\n\t\twhile (!insertBefore) {\n\t\t\tconst nextSibling = _wrapperSiblingMap.get(searchNode);\n\t\t\tif (nextSibling) {\n\t\t\t\tif (isVNodeWrapper(nextSibling)) {\n\t\t\t\t\tif (nextSibling.domNode && nextSibling.domNode.parentNode) {\n\t\t\t\t\t\tinsertBefore = nextSibling.domNode;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tsearchNode = nextSibling;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (nextSibling.domNode && nextSibling.domNode.parentNode) {\n\t\t\t\t\tinsertBefore = nextSibling.domNode;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tsearchNode = nextSibling;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsearchNode = _parentWrapperMap.get(searchNode);\n\t\t\tif (!searchNode || isVNodeWrapper(searchNode)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn insertBefore;\n\t}\n\n\tfunction setValue(domNode: any, propValue?: any, previousValue?: any) {\n\t\tconst domValue = domNode.value;\n\t\tconst onInputValue = domNode['oninput-value'];\n\t\tconst onSelectValue = domNode['select-value'];\n\n\t\tif (onSelectValue && domValue !== onSelectValue) {\n\t\t\tdomNode.value = onSelectValue;\n\t\t\tif (domNode.value === onSelectValue) {\n\t\t\t\tdomNode['select-value'] = undefined;\n\t\t\t}\n\t\t} else if ((onInputValue && domValue === onInputValue) || propValue !== previousValue) {\n\t\t\tdomNode.value = propValue;\n\t\t\tdomNode['oninput-value'] = undefined;\n\t\t}\n\t}\n\n\tfunction setProperties(\n\t\tdomNode: HTMLElement,\n\t\tcurrentProperties: VNodeProperties = {},\n\t\tnextWrapper: VNodeWrapper,\n\t\tincludesEventsAndAttributes = true\n\t): void {\n\t\tconst propNames = Object.keys(nextWrapper.node.properties);\n\t\tconst propCount = propNames.length;\n\t\tif (propNames.indexOf('classes') === -1 && currentProperties.classes) {\n\t\t\tdomNode.removeAttribute('class');\n\t\t}\n\n\t\tincludesEventsAndAttributes && removeOrphanedEvents(domNode, currentProperties, nextWrapper.node.properties);\n\n\t\tfor (let i = 0; i < propCount; i++) {\n\t\t\tconst propName = propNames[i];\n\t\t\tlet propValue = nextWrapper.node.properties[propName];\n\t\t\tconst previousValue = currentProperties[propName];\n\t\t\tif (propName === 'classes') {\n\t\t\t\tconst previousClassString = createClassPropValue(previousValue);\n\t\t\t\tlet currentClassString = createClassPropValue(propValue);\n\t\t\t\tif (previousClassString !== currentClassString) {\n\t\t\t\t\tif (currentClassString) {\n\t\t\t\t\t\tif (nextWrapper.merged) {\n\t\t\t\t\t\t\tconst domClasses = (domNode.getAttribute('class') || '').split(' ');\n\t\t\t\t\t\t\tfor (let i = 0; i < domClasses.length; i++) {\n\t\t\t\t\t\t\t\tif (currentClassString.indexOf(domClasses[i]) === -1) {\n\t\t\t\t\t\t\t\t\tcurrentClassString = `${domClasses[i]} ${currentClassString}`;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdomNode.setAttribute('class', currentClassString);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdomNode.removeAttribute('class');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (nodeOperations.indexOf(propName) !== -1) {\n\t\t\t\tnodeOperation(propName, propValue, previousValue, domNode);\n\t\t\t} else if (propName === 'styles') {\n\t\t\t\tconst styleNames = Object.keys(propValue);\n\t\t\t\tconst styleCount = styleNames.length;\n\t\t\t\tfor (let j = 0; j < styleCount; j++) {\n\t\t\t\t\tconst styleName = styleNames[j];\n\t\t\t\t\tconst newStyleValue = propValue[styleName];\n\t\t\t\t\tconst oldStyleValue = previousValue && previousValue[styleName];\n\t\t\t\t\tif (newStyleValue === oldStyleValue) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t(domNode.style as any)[styleName] = newStyleValue || '';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!propValue && typeof previousValue === 'string') {\n\t\t\t\t\tpropValue = '';\n\t\t\t\t}\n\t\t\t\tif (propName === 'value') {\n\t\t\t\t\tif ((domNode as HTMLElement).tagName === 'SELECT') {\n\t\t\t\t\t\t(domNode as any)['select-value'] = propValue;\n\t\t\t\t\t}\n\t\t\t\t\tsetValue(domNode, propValue, previousValue);\n\t\t\t\t} else if (propName !== 'key' && propValue !== previousValue) {\n\t\t\t\t\tconst type = typeof propValue;\n\t\t\t\t\tif (type === 'function' && propName.lastIndexOf('on', 0) === 0 && includesEventsAndAttributes) {\n\t\t\t\t\t\tupdateEvent(domNode, propName.substr(2), propValue, nextWrapper.node.bind, previousValue);\n\t\t\t\t\t} else if (type === 'string' && propName !== 'innerHTML' && includesEventsAndAttributes) {\n\t\t\t\t\t\tupdateAttribute(domNode, propName, propValue, nextWrapper.namespace);\n\t\t\t\t\t} else if (propName === 'scrollLeft' || propName === 'scrollTop') {\n\t\t\t\t\t\tif ((domNode as any)[propName] !== propValue) {\n\t\t\t\t\t\t\t(domNode as any)[propName] = propValue;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t(domNode as any)[propName] = propValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction runDeferredRenderCallbacks() {\n\t\tconst { sync } = _mountOptions;\n\t\tconst callbacks = _deferredRenderCallbacks;\n\t\t_deferredRenderCallbacks = [];\n\t\tif (callbacks.length) {\n\t\t\tconst run = () => {\n\t\t\t\tlet callback: Function | undefined;\n\t\t\t\twhile ((callback = callbacks.shift())) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (sync) {\n\t\t\t\trun();\n\t\t\t} else {\n\t\t\t\tglobal.requestAnimationFrame(run);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction runAfterRenderCallbacks() {\n\t\tconst { sync } = _mountOptions;\n\t\tconst callbacks = _afterRenderCallbacks;\n\t\t_afterRenderCallbacks = [];\n\t\tif (callbacks.length) {\n\t\t\tconst run = () => {\n\t\t\t\tlet callback: Function | undefined;\n\t\t\t\twhile ((callback = callbacks.shift())) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (sync) {\n\t\t\t\trun();\n\t\t\t} else {\n\t\t\t\tif (global.requestIdleCallback) {\n\t\t\t\t\tglobal.requestIdleCallback(run);\n\t\t\t\t} else {\n\t\t\t\t\tsetTimeout(run);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction processProperties(next: VNodeWrapper, previousProperties: PreviousProperties) {\n\t\tif (next.node.attributes && next.node.events) {\n\t\t\tupdateAttributes(\n\t\t\t\tnext.domNode as HTMLElement,\n\t\t\t\tpreviousProperties.attributes || {},\n\t\t\t\tnext.node.attributes,\n\t\t\t\tnext.namespace\n\t\t\t);\n\t\t\tsetProperties(next.domNode as HTMLElement, previousProperties.properties, next, false);\n\t\t\tconst events = next.node.events || {};\n\t\t\tif (previousProperties.events) {\n\t\t\t\tremoveOrphanedEvents(\n\t\t\t\t\tnext.domNode as HTMLElement,\n\t\t\t\t\tpreviousProperties.events || {},\n\t\t\t\t\tnext.node.events,\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t}\n\t\t\tpreviousProperties.events = previousProperties.events || {};\n\t\t\tObject.keys(events).forEach((event) => {\n\t\t\t\tupdateEvent(\n\t\t\t\t\tnext.domNode as HTMLElement,\n\t\t\t\t\tevent,\n\t\t\t\t\tevents[event],\n\t\t\t\t\tnext.node.bind,\n\t\t\t\t\tpreviousProperties.events[event]\n\t\t\t\t);\n\t\t\t});\n\t\t} else {\n\t\t\tsetProperties(next.domNode as HTMLElement, previousProperties.properties, next);\n\t\t}\n\t}\n\n\tfunction mount(mountOptions: Partial<MountOptions> = {}) {\n\t\t_mountOptions = { ..._mountOptions, ...mountOptions };\n\t\tconst { domNode } = _mountOptions;\n\t\tconst renderResult = w(wrapNodes(renderer), {});\n\t\tconst nextWrapper = {\n\t\t\tnode: renderResult,\n\t\t\torder: 0,\n\t\t\tdepth: 1\n\t\t};\n\t\t_parentWrapperMap.set(nextWrapper, { depth: 0, order: 0, domNode, node: v('fake') });\n\t\t_processQueue.push({\n\t\t\tcurrent: [],\n\t\t\tnext: [nextWrapper],\n\t\t\tmeta: { mergeNodes: arrayFrom(domNode.childNodes) }\n\t\t});\n\t\t_runProcessQueue();\n\t\tlet mergedNode: Node | undefined;\n\t\twhile ((mergedNode = _allMergedNodes.pop())) {\n\t\t\tmergedNode.parentNode && mergedNode.parentNode.removeChild(mergedNode);\n\t\t}\n\t\t_runDomInstructionQueue();\n\t\t_mountOptions.merge = false;\n\t\t_insertBeforeMap = undefined;\n\t\t_runCallbacks();\n\t}\n\n\tfunction invalidate() {\n\t\tparentInvalidate && parentInvalidate();\n\t}\n\n\tfunction _schedule(): void {\n\t\tconst { sync } = _mountOptions;\n\t\tif (sync) {\n\t\t\t_runInvalidationQueue();\n\t\t} else if (!_renderScheduled) {\n\t\t\t_renderScheduled = global.requestAnimationFrame(() => {\n\t\t\t\t_runInvalidationQueue();\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction _runInvalidationQueue() {\n\t\t_renderScheduled = undefined;\n\t\tconst invalidationQueue = [..._invalidationQueue];\n\t\tconst previouslyRendered = [];\n\t\t_invalidationQueue = [];\n\t\tinvalidationQueue.sort((a, b) => {\n\t\t\tlet result = b.depth - a.depth;\n\t\t\tif (result === 0) {\n\t\t\t\tresult = b.order - a.order;\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t\tlet item: InvalidationQueueItem | undefined;\n\t\twhile ((item = invalidationQueue.pop())) {\n\t\t\tlet { instance } = item;\n\t\t\tif (previouslyRendered.indexOf(instance) === -1 && _instanceToWrapperMap.has(instance!)) {\n\t\t\t\tpreviouslyRendered.push(instance);\n\t\t\t\tconst current = _instanceToWrapperMap.get(instance)!;\n\t\t\t\tconst instanceData = widgetInstanceMap.get(instance)!;\n\t\t\t\tconst parent = _parentWrapperMap.get(current);\n\t\t\t\tconst sibling = _wrapperSiblingMap.get(current);\n\t\t\t\tconst { constructor, children } = instance;\n\t\t\t\tconst next = {\n\t\t\t\t\tnode: {\n\t\t\t\t\t\ttype: WNODE,\n\t\t\t\t\t\twidgetConstructor: constructor as WidgetBaseConstructor,\n\t\t\t\t\t\tproperties: instanceData.inputProperties,\n\t\t\t\t\t\tchildren: children,\n\t\t\t\t\t\tbind: current.node.bind\n\t\t\t\t\t},\n\t\t\t\t\tinstance,\n\t\t\t\t\tdepth: current.depth,\n\t\t\t\t\torder: current.order\n\t\t\t\t};\n\n\t\t\t\tparent && _parentWrapperMap.set(next, parent);\n\t\t\t\tsibling && _wrapperSiblingMap.set(next, sibling);\n\t\t\t\tconst { item } = _updateWidget({ current, next });\n\t\t\t\tif (item) {\n\t\t\t\t\t_processQueue.push(item);\n\t\t\t\t\tinstance && _instanceToWrapperMap.set(instance, next);\n\t\t\t\t\t_runProcessQueue();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_runDomInstructionQueue();\n\t\t_runCallbacks();\n\t}\n\n\tfunction _runProcessQueue() {\n\t\tlet item: DetachApplication | AttachApplication | ProcessItem | undefined;\n\t\twhile ((item = _processQueue.pop())) {\n\t\t\tif (isAttachApplication(item)) {\n\t\t\t\t_applicationQueue.push(item);\n\t\t\t} else {\n\t\t\t\tconst { current, next, meta } = item;\n\t\t\t\t_process(current || EMPTY_ARRAY, next || EMPTY_ARRAY, meta);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction _runDomInstructionQueue(): void {\n\t\t_applicationQueue.reverse();\n\t\tlet item: ApplicationInstruction | undefined;\n\t\twhile ((item = _applicationQueue.pop())) {\n\t\t\tif (item.type === 'create') {\n\t\t\t\tconst {\n\t\t\t\t\tparentDomNode,\n\t\t\t\t\tnext,\n\t\t\t\t\tnext: {\n\t\t\t\t\t\tdomNode,\n\t\t\t\t\t\tmerged,\n\t\t\t\t\t\trequiresInsertBefore,\n\t\t\t\t\t\tnode: { properties }\n\t\t\t\t\t}\n\t\t\t\t} = item;\n\n\t\t\t\tprocessProperties(next, { properties: {} });\n\t\t\t\trunDeferredProperties(next);\n\t\t\t\tif (!merged) {\n\t\t\t\t\tlet insertBefore: any;\n\t\t\t\t\tif (requiresInsertBefore) {\n\t\t\t\t\t\tinsertBefore = findInsertBefore(next);\n\t\t\t\t\t} else if (_insertBeforeMap) {\n\t\t\t\t\t\tinsertBefore = _insertBeforeMap.get(next);\n\t\t\t\t\t}\n\t\t\t\t\tparentDomNode.insertBefore(domNode!, insertBefore);\n\t\t\t\t\tif (isDomVNode(next.node) && next.node.onAttach) {\n\t\t\t\t\t\tnext.node.onAttach();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ((domNode as HTMLElement).tagName === 'OPTION' && domNode!.parentElement) {\n\t\t\t\t\tsetValue(domNode!.parentElement);\n\t\t\t\t}\n\t\t\t\trunEnterAnimation(next, _mountOptions.transition);\n\t\t\t\tconst instanceData = widgetInstanceMap.get(next.node.bind as WidgetBase);\n\t\t\t\tif (properties.key != null && instanceData) {\n\t\t\t\t\tinstanceData.nodeHandler.add(domNode as HTMLElement, `${properties.key}`);\n\t\t\t\t}\n\t\t\t\titem.next.inserted = true;\n\t\t\t} else if (item.type === 'update') {\n\t\t\t\tconst {\n\t\t\t\t\tnext,\n\t\t\t\t\tnext: { domNode, node },\n\t\t\t\t\tcurrent\n\t\t\t\t} = item;\n\t\t\t\tconst parent = _parentWrapperMap.get(next);\n\t\t\t\tif (parent && isWNodeWrapper(parent) && parent.instance) {\n\t\t\t\t\tconst instanceData = widgetInstanceMap.get(parent.instance);\n\t\t\t\t\tinstanceData && instanceData.nodeHandler.addRoot();\n\t\t\t\t}\n\n\t\t\t\tconst previousProperties = buildPreviousProperties(domNode, current, next);\n\t\t\t\tconst instanceData = widgetInstanceMap.get(next.node.bind as WidgetBase);\n\n\t\t\t\tprocessProperties(next, previousProperties);\n\t\t\t\trunDeferredProperties(next);\n\n\t\t\t\tif (instanceData && node.properties.key != null) {\n\t\t\t\t\tinstanceData.nodeHandler.add(next.domNode as HTMLElement, `${node.properties.key}`);\n\t\t\t\t}\n\t\t\t} else if (item.type === 'delete') {\n\t\t\t\tconst { current } = item;\n\t\t\t\tconst { exitAnimation } = current.node.properties;\n\t\t\t\tif (exitAnimation && exitAnimation !== true) {\n\t\t\t\t\trunExitAnimation(current, _mountOptions.transition, exitAnimation);\n\t\t\t\t} else {\n\t\t\t\t\tcurrent.domNode!.parentNode!.removeChild(current.domNode!);\n\t\t\t\t\tcurrent.domNode = undefined;\n\t\t\t\t}\n\t\t\t} else if (item.type === 'attach') {\n\t\t\t\tconst { instance, attached } = item;\n\t\t\t\tconst instanceData = widgetInstanceMap.get(instance)!;\n\t\t\t\tinstanceData.nodeHandler.addRoot();\n\t\t\t\tattached && instanceData.onAttach();\n\t\t\t} else if (item.type === 'detach') {\n\t\t\t\tif (item.current.instance) {\n\t\t\t\t\tconst instanceData = widgetInstanceMap.get(item.current.instance);\n\t\t\t\t\tinstanceData && instanceData.onDetach();\n\t\t\t\t}\n\t\t\t\titem.current.domNode = undefined;\n\t\t\t\titem.current.node.bind = undefined;\n\t\t\t\titem.current.instance = undefined;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction _runCallbacks() {\n\t\trunAfterRenderCallbacks();\n\t\trunDeferredRenderCallbacks();\n\t}\n\n\tfunction _processMergeNodes(next: DNodeWrapper, mergeNodes: Node[]) {\n\t\tconst { merge } = _mountOptions;\n\t\tif (merge && mergeNodes.length) {\n\t\t\tif (isVNodeWrapper(next)) {\n\t\t\t\tlet {\n\t\t\t\t\tnode: { tag }\n\t\t\t\t} = next;\n\t\t\t\tfor (let i = 0; i < mergeNodes.length; i++) {\n\t\t\t\t\tconst domElement = mergeNodes[i] as Element;\n\t\t\t\t\tif (tag.toUpperCase() === (domElement.tagName || '')) {\n\t\t\t\t\t\tconst mergeNodeIndex = _allMergedNodes.indexOf(domElement);\n\t\t\t\t\t\tif (mergeNodeIndex !== -1) {\n\t\t\t\t\t\t\t_allMergedNodes.splice(mergeNodeIndex, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmergeNodes.splice(i, 1);\n\t\t\t\t\t\tnext.domNode = domElement;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnext.mergeNodes = mergeNodes;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction registerDistinguishableCallback(childNodes: DNodeWrapper[], index: number) {\n\t\t_afterRenderCallbacks.push(() => {\n\t\t\tconst parentWNodeWrapper = findParentWNodeWrapper(childNodes[index]);\n\t\t\tcheckDistinguishable(childNodes, index, parentWNodeWrapper);\n\t\t});\n\t}\n\n\tfunction _process(current: DNodeWrapper[], next: DNodeWrapper[], meta: ProcessMeta = {}): void {\n\t\tlet { mergeNodes = [], oldIndex = 0, newIndex = 0 } = meta;\n\t\tconst currentLength = current.length;\n\t\tconst nextLength = next.length;\n\t\tconst hasPreviousSiblings = currentLength > 1 || (currentLength > 0 && currentLength < nextLength);\n\t\tconst instructions: Instruction[] = [];\n\t\tif (newIndex < nextLength) {\n\t\t\tlet currentWrapper = oldIndex < currentLength ? current[oldIndex] : undefined;\n\t\t\tconst nextWrapper = next[newIndex];\n\t\t\tnextWrapper.hasPreviousSiblings = hasPreviousSiblings;\n\n\t\t\t_processMergeNodes(nextWrapper, mergeNodes);\n\n\t\t\tif (currentWrapper && same(currentWrapper, nextWrapper)) {\n\t\t\t\toldIndex++;\n\t\t\t\tnewIndex++;\n\t\t\t\tif (isVNodeWrapper(currentWrapper) && isVNodeWrapper(nextWrapper)) {\n\t\t\t\t\tnextWrapper.inserted = currentWrapper.inserted;\n\t\t\t\t}\n\t\t\t\tinstructions.push({ current: currentWrapper, next: nextWrapper });\n\t\t\t} else if (!currentWrapper || findIndexOfChild(current, nextWrapper, oldIndex + 1) === -1) {\n\t\t\t\thas('dojo-debug') && current.length && registerDistinguishableCallback(next, newIndex);\n\t\t\t\tinstructions.push({ current: undefined, next: nextWrapper });\n\t\t\t\tnewIndex++;\n\t\t\t} else if (findIndexOfChild(next, currentWrapper, newIndex + 1) === -1) {\n\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(current, oldIndex);\n\t\t\t\tinstructions.push({ current: currentWrapper, next: undefined });\n\t\t\t\toldIndex++;\n\t\t\t} else {\n\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(next, newIndex);\n\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(current, oldIndex);\n\t\t\t\tinstructions.push({ current: currentWrapper, next: undefined });\n\t\t\t\tinstructions.push({ current: undefined, next: nextWrapper });\n\t\t\t\toldIndex++;\n\t\t\t\tnewIndex++;\n\t\t\t}\n\t\t}\n\n\t\tif (newIndex < nextLength) {\n\t\t\t_processQueue.push({ current, next, meta: { mergeNodes, oldIndex, newIndex } });\n\t\t}\n\n\t\tif (currentLength > oldIndex && newIndex >= nextLength) {\n\t\t\tfor (let i = oldIndex; i < currentLength; i++) {\n\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(current, i);\n\t\t\t\tinstructions.push({ current: current[i], next: undefined });\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < instructions.length; i++) {\n\t\t\tconst { item, dom, widget } = _processOne(instructions[i]);\n\t\t\twidget && _processQueue.push(widget);\n\t\t\titem && _processQueue.push(item);\n\t\t\tdom && _applicationQueue.push(dom);\n\t\t}\n\t}\n\n\tfunction _processOne({ current, next }: Instruction): ProcessResult {\n\t\tif (current !== next) {\n\t\t\tif (!current && next) {\n\t\t\t\tif (isVNodeWrapper(next)) {\n\t\t\t\t\treturn _createDom({ next });\n\t\t\t\t} else {\n\t\t\t\t\treturn _createWidget({ next });\n\t\t\t\t}\n\t\t\t} else if (current && next) {\n\t\t\t\tif (isVNodeWrapper(current) && isVNodeWrapper(next)) {\n\t\t\t\t\treturn _updateDom({ current, next });\n\t\t\t\t} else if (isWNodeWrapper(current) && isWNodeWrapper(next)) {\n\t\t\t\t\treturn _updateWidget({ current, next });\n\t\t\t\t}\n\t\t\t} else if (current && !next) {\n\t\t\t\tif (isVNodeWrapper(current)) {\n\t\t\t\t\treturn _removeDom({ current });\n\t\t\t\t} else if (isWNodeWrapper(current)) {\n\t\t\t\t\treturn _removeWidget({ current });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn {};\n\t}\n\n\tfunction _createWidget({ next }: CreateWidgetInstruction): ProcessResult {\n\t\tlet {\n\t\t\tnode: { widgetConstructor }\n\t\t} = next;\n\t\tlet { registry } = _mountOptions;\n\t\tif (!isWidgetBaseConstructor(widgetConstructor)) {\n\t\t\treturn {};\n\t\t}\n\t\tconst instance = new widgetConstructor() as WidgetBase;\n\t\tif (registry) {\n\t\t\tinstance.registry.base = registry;\n\t\t}\n\t\tconst instanceData = widgetInstanceMap.get(instance)!;\n\t\tinstanceData.invalidate = () => {\n\t\t\tinstanceData.dirty = true;\n\t\t\tif (!instanceData.rendering && _instanceToWrapperMap.has(instance)) {\n\t\t\t\t_invalidationQueue.push({ instance, depth: next.depth, order: next.order });\n\t\t\t\t_schedule();\n\t\t\t}\n\t\t};\n\t\tinstanceData.rendering = true;\n\t\tinstance.__setProperties__(next.node.properties, next.node.bind);\n\t\tinstance.__setChildren__(next.node.children);\n\t\tnext.instance = instance;\n\t\tlet rendered = instance.__render__();\n\t\tinstanceData.rendering = false;\n\t\tif (rendered) {\n\t\t\trendered = Array.isArray(rendered) ? rendered : [rendered];\n\t\t\tnext.childrenWrappers = renderedToWrapper(rendered, next, null);\n\t\t}\n\t\tif (next.instance) {\n\t\t\t_instanceToWrapperMap.set(next.instance, next);\n\t\t\tif (!parentInvalidate && !(next.instance as any).isWNodeWrapper) {\n\t\t\t\tparentInvalidate = next.instance.invalidate.bind(next.instance);\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\titem: { next: next.childrenWrappers, meta: { mergeNodes: next.mergeNodes } },\n\t\t\twidget: { type: 'attach', instance, attached: true }\n\t\t};\n\t}\n\n\tfunction _updateWidget({ current, next }: UpdateWidgetInstruction): ProcessResult {\n\t\tcurrent = (current.instance && _instanceToWrapperMap.get(current.instance)) || current;\n\t\tconst { instance, domNode, hasAnimations } = current;\n\t\tif (!instance) {\n\t\t\treturn [] as ProcessResult;\n\t\t}\n\t\tconst instanceData = widgetInstanceMap.get(instance)!;\n\t\tnext.instance = instance;\n\t\tnext.domNode = domNode;\n\t\tnext.hasAnimations = hasAnimations;\n\t\tinstanceData.rendering = true;\n\t\tinstance!.__setProperties__(next.node.properties, next.node.bind);\n\t\tinstance!.__setChildren__(next.node.children);\n\t\t_instanceToWrapperMap.set(next.instance!, next);\n\t\tif (instanceData.dirty) {\n\t\t\tlet rendered = instance!.__render__();\n\t\t\tinstanceData.rendering = false;\n\t\t\tif (rendered) {\n\t\t\t\trendered = Array.isArray(rendered) ? rendered : [rendered];\n\t\t\t\tnext.childrenWrappers = renderedToWrapper(rendered, next, current);\n\t\t\t}\n\t\t\treturn {\n\t\t\t\titem: { current: current.childrenWrappers, next: next.childrenWrappers, meta: {} },\n\t\t\t\twidget: { type: 'attach', instance, attached: false }\n\t\t\t};\n\t\t}\n\t\tinstanceData.rendering = false;\n\t\tnext.childrenWrappers = current.childrenWrappers;\n\t\treturn {\n\t\t\twidget: { type: 'attach', instance, attached: false }\n\t\t};\n\t}\n\n\tfunction _removeWidget({ current }: RemoveWidgetInstruction): ProcessResult {\n\t\tcurrent = current.instance ? _instanceToWrapperMap.get(current.instance)! : current;\n\t\t_wrapperSiblingMap.delete(current);\n\t\t_parentWrapperMap.delete(current);\n\t\t_instanceToWrapperMap.delete(current.instance!);\n\n\t\treturn {\n\t\t\titem: { current: current.childrenWrappers, meta: {} },\n\t\t\twidget: { type: 'detach', current }\n\t\t};\n\t}\n\n\tfunction _createDom({ next }: CreateDomInstruction): ProcessResult {\n\t\tlet mergeNodes: Node[] = [];\n\t\tconst parentDomNode = findParentDomNode(next)!;\n\t\tif (!next.domNode) {\n\t\t\tif ((next.node as any).domNode) {\n\t\t\t\tnext.domNode = (next.node as any).domNode;\n\t\t\t} else {\n\t\t\t\tif (next.node.tag === 'svg') {\n\t\t\t\t\tnext.namespace = NAMESPACE_SVG;\n\t\t\t\t}\n\t\t\t\tif (next.node.tag) {\n\t\t\t\t\tif (next.namespace) {\n\t\t\t\t\t\tnext.domNode = global.document.createElementNS(next.namespace, next.node.tag);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnext.domNode = global.document.createElement(next.node.tag);\n\t\t\t\t\t}\n\t\t\t\t} else if (next.node.text != null) {\n\t\t\t\t\tnext.domNode = global.document.createTextNode(next.node.text);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (_insertBeforeMap && _allMergedNodes.length) {\n\t\t\t\tif (parentDomNode === _allMergedNodes[0].parentNode) {\n\t\t\t\t\t_insertBeforeMap.set(next, _allMergedNodes[0]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (_mountOptions.merge) {\n\t\t\t\tmergeNodes = arrayFrom(next.domNode.childNodes);\n\t\t\t\t_allMergedNodes = [..._allMergedNodes, ...mergeNodes];\n\t\t\t}\n\t\t\tnext.merged = true;\n\t\t}\n\t\tif (next.domNode) {\n\t\t\tif (next.node.children) {\n\t\t\t\tnext.childrenWrappers = renderedToWrapper(next.node.children, next, null);\n\t\t\t}\n\t\t}\n\t\tconst parentWNodeWrapper = findParentWNodeWrapper(next);\n\t\tif (parentWNodeWrapper && !parentWNodeWrapper.domNode) {\n\t\t\tparentWNodeWrapper.domNode = next.domNode;\n\t\t}\n\t\tconst dom: ApplicationInstruction = {\n\t\t\tnext: next!,\n\t\t\tparentDomNode: parentDomNode,\n\t\t\ttype: 'create'\n\t\t};\n\t\tif (next.childrenWrappers) {\n\t\t\treturn {\n\t\t\t\titem: { current: [], next: next.childrenWrappers, meta: { mergeNodes } },\n\t\t\t\tdom\n\t\t\t};\n\t\t}\n\t\treturn { dom };\n\t}\n\n\tfunction _updateDom({ current, next }: UpdateDomInstruction): ProcessResult {\n\t\tconst parentDomNode = findParentDomNode(current);\n\t\tnext.domNode = current.domNode;\n\t\tnext.namespace = current.namespace;\n\t\tif (next.node.text && next.node.text !== current.node.text) {\n\t\t\tconst updatedTextNode = parentDomNode!.ownerDocument.createTextNode(next.node.text!);\n\t\t\tparentDomNode!.replaceChild(updatedTextNode, next.domNode!);\n\t\t\tnext.domNode = updatedTextNode;\n\t\t} else if (next.node.children) {\n\t\t\tconst children = renderedToWrapper(next.node.children, next, current);\n\t\t\tnext.childrenWrappers = children;\n\t\t}\n\t\treturn {\n\t\t\titem: { current: current.childrenWrappers, next: next.childrenWrappers, meta: {} },\n\t\t\tdom: { type: 'update', next, current }\n\t\t};\n\t}\n\n\tfunction _removeDom({ current }: RemoveDomInstruction): ProcessResult {\n\t\t_wrapperSiblingMap.delete(current);\n\t\t_parentWrapperMap.delete(current);\n\t\tcurrent.node.bind = undefined;\n\t\tif (current.hasAnimations) {\n\t\t\treturn {\n\t\t\t\titem: { current: current.childrenWrappers, meta: {} },\n\t\t\t\tdom: { type: 'delete', current }\n\t\t\t};\n\t\t}\n\n\t\tif (current.childrenWrappers) {\n\t\t\t_afterRenderCallbacks.push(() => {\n\t\t\t\tlet wrappers = current.childrenWrappers || [];\n\t\t\t\tlet wrapper: DNodeWrapper | undefined;\n\t\t\t\twhile ((wrapper = wrappers.pop())) {\n\t\t\t\t\tif (wrapper.childrenWrappers) {\n\t\t\t\t\t\twrappers.push(...wrapper.childrenWrappers);\n\t\t\t\t\t\twrapper.childrenWrappers = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tif (isWNodeWrapper(wrapper)) {\n\t\t\t\t\t\tif (wrapper.instance) {\n\t\t\t\t\t\t\t_instanceToWrapperMap.delete(wrapper.instance);\n\t\t\t\t\t\t\tconst instanceData = widgetInstanceMap.get(wrapper.instance);\n\t\t\t\t\t\t\tinstanceData && instanceData.onDetach();\n\t\t\t\t\t\t}\n\t\t\t\t\t\twrapper.instance = undefined;\n\t\t\t\t\t}\n\t\t\t\t\t_wrapperSiblingMap.delete(wrapper);\n\t\t\t\t\t_parentWrapperMap.delete(wrapper);\n\t\t\t\t\twrapper.domNode = undefined;\n\t\t\t\t\twrapper.node.bind = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn {\n\t\t\tdom: { type: 'delete', current }\n\t\t};\n\t}\n\n\treturn {\n\t\tmount,\n\t\tinvalidate\n\t};\n}\n\nexport default renderer;\n","import global from './global';\nimport has from '../has/has';\nimport { wrapNative } from './support/util';\n\nexport interface StringNormalize {\n\t/**\n\t * Returns the String value result of normalizing the string into the normalization form\n\t * named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n\t * @param target The target string\n\t * @param form Applicable values: \"NFC\", \"NFD\", \"NFKC\", or \"NFKD\", If not specified default\n\t * is \"NFC\"\n\t */\n\t(target: string, form: 'NFC' | 'NFD' | 'NFKC' | 'NFKD'): string;\n\n\t/**\n\t * Returns the String value result of normalizing the string into the normalization form\n\t * named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n\t * @param target The target string\n\t * @param form Applicable values: \"NFC\", \"NFD\", \"NFKC\", or \"NFKD\", If not specified default\n\t * is \"NFC\"\n\t */\n\t(target: string, form?: string): string;\n}\n\n/**\n * The minimum location of high surrogates\n */\nexport const HIGH_SURROGATE_MIN = 0xd800;\n\n/**\n * The maximum location of high surrogates\n */\nexport const HIGH_SURROGATE_MAX = 0xdbff;\n\n/**\n * The minimum location of low surrogates\n */\nexport const LOW_SURROGATE_MIN = 0xdc00;\n\n/**\n * The maximum location of low surrogates\n */\nexport const LOW_SURROGATE_MAX = 0xdfff;\n\n/* ES6 static methods */\n\n/**\n * Return the String value whose elements are, in order, the elements in the List elements.\n * If length is 0, the empty string is returned.\n * @param codePoints The code points to generate the string\n */\nexport let fromCodePoint: (...codePoints: number[]) => string;\n\n/**\n * `raw` is intended for use as a tag function of a Tagged Template String. When called\n * as such the first argument will be a well formed template call site object and the rest\n * parameter will contain the substitution values.\n * @param template A well-formed template string call site representation.\n * @param substitutions A set of substitution values.\n */\nexport let raw: (template: TemplateStringsArray, ...substitutions: any[]) => string;\n\n/* ES6 instance methods */\n\n/**\n * Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\n * value of the UTF-16 encoded code point starting at the string element at position pos in\n * the String resulting from converting this object to a String.\n * If there is no element at that position, the result is undefined.\n * If a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.\n */\nexport let codePointAt: (target: string, pos?: number) => number | undefined;\n\n/**\n * Returns true if the sequence of elements of searchString converted to a String is the\n * same as the corresponding elements of this object (converted to a String) starting at\n * endPosition – length(this). Otherwise returns false.\n */\nexport let endsWith: (target: string, searchString: string, endPosition?: number) => boolean;\n\n/**\n * Returns true if searchString appears as a substring of the result of converting this\n * object to a String, at one or more positions that are\n * greater than or equal to position; otherwise, returns false.\n * @param target The target string\n * @param searchString search string\n * @param position If position is undefined, 0 is assumed, so as to search all of the String.\n */\nexport let includes: (target: string, searchString: string, position?: number) => boolean;\n\n/**\n * Returns the String value result of normalizing the string into the normalization form\n * named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n * @param target The target string\n * @param form Applicable values: \"NFC\", \"NFD\", \"NFKC\", or \"NFKD\", If not specified default\n * is \"NFC\"\n */\nexport let normalize: StringNormalize;\n\n/**\n * Returns a String value that is made from count copies appended together. If count is 0,\n * T is the empty String is returned.\n * @param count number of copies to append\n */\nexport let repeat: (target: string, count?: number) => string;\n\n/**\n * Returns true if the sequence of elements of searchString converted to a String is the\n * same as the corresponding elements of this object (converted to a String) starting at\n * position. Otherwise returns false.\n */\nexport let startsWith: (target: string, searchString: string, position?: number) => boolean;\n\n/* ES7 instance methods */\n\n/**\n * Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\n * The padding is applied from the end (right) of the current string.\n *\n * @param target The target string\n * @param maxLength The length of the resulting string once the current string has been padded.\n *        If this parameter is smaller than the current string's length, the current string will be returned as it is.\n *\n * @param fillString The string to pad the current string with.\n *        If this string is too long, it will be truncated and the left-most part will be applied.\n *        The default value for this parameter is \" \" (U+0020).\n */\nexport let padEnd: (target: string, maxLength: number, fillString?: string) => string;\n\n/**\n * Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\n * The padding is applied from the start (left) of the current string.\n *\n * @param target The target string\n * @param maxLength The length of the resulting string once the current string has been padded.\n *        If this parameter is smaller than the current string's length, the current string will be returned as it is.\n *\n * @param fillString The string to pad the current string with.\n *        If this string is too long, it will be truncated and the left-most part will be applied.\n *        The default value for this parameter is \" \" (U+0020).\n */\nexport let padStart: (target: string, maxLength: number, fillString?: string) => string;\n\nif (has('es6-string') && has('es6-string-raw')) {\n\tfromCodePoint = global.String.fromCodePoint;\n\traw = global.String.raw;\n\n\tcodePointAt = wrapNative(global.String.prototype.codePointAt);\n\tendsWith = wrapNative(global.String.prototype.endsWith);\n\tincludes = wrapNative(global.String.prototype.includes);\n\tnormalize = wrapNative(global.String.prototype.normalize);\n\trepeat = wrapNative(global.String.prototype.repeat);\n\tstartsWith = wrapNative(global.String.prototype.startsWith);\n} else {\n\t/**\n\t * Validates that text is defined, and normalizes position (based on the given default if the input is NaN).\n\t * Used by startsWith, includes, and endsWith.\n\t *\n\t * @return Normalized position.\n\t */\n\tconst normalizeSubstringArgs = function(\n\t\tname: string,\n\t\ttext: string,\n\t\tsearch: string,\n\t\tposition: number,\n\t\tisEnd: boolean = false\n\t): [string, string, number] {\n\t\tif (text == null) {\n\t\t\tthrow new TypeError('string.' + name + ' requires a valid string to search against.');\n\t\t}\n\n\t\tconst length = text.length;\n\t\tposition = position !== position ? (isEnd ? length : 0) : position;\n\t\treturn [text, String(search), Math.min(Math.max(position, 0), length)];\n\t};\n\n\tfromCodePoint = function fromCodePoint(...codePoints: number[]): string {\n\t\t// Adapted from https://github.com/mathiasbynens/String.fromCodePoint\n\t\tconst length = arguments.length;\n\t\tif (!length) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromCharCode = String.fromCharCode;\n\t\tconst MAX_SIZE = 0x4000;\n\t\tlet codeUnits: number[] = [];\n\t\tlet index = -1;\n\t\tlet result = '';\n\n\t\twhile (++index < length) {\n\t\t\tlet codePoint = Number(arguments[index]);\n\n\t\t\t// Code points must be finite integers within the valid range\n\t\t\tlet isValid =\n\t\t\t\tisFinite(codePoint) && Math.floor(codePoint) === codePoint && codePoint >= 0 && codePoint <= 0x10ffff;\n\t\t\tif (!isValid) {\n\t\t\t\tthrow RangeError('string.fromCodePoint: Invalid code point ' + codePoint);\n\t\t\t}\n\n\t\t\tif (codePoint <= 0xffff) {\n\t\t\t\t// BMP code point\n\t\t\t\tcodeUnits.push(codePoint);\n\t\t\t} else {\n\t\t\t\t// Astral code point; split in surrogate halves\n\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\tcodePoint -= 0x10000;\n\t\t\t\tlet highSurrogate = (codePoint >> 10) + HIGH_SURROGATE_MIN;\n\t\t\t\tlet lowSurrogate = (codePoint % 0x400) + LOW_SURROGATE_MIN;\n\t\t\t\tcodeUnits.push(highSurrogate, lowSurrogate);\n\t\t\t}\n\n\t\t\tif (index + 1 === length || codeUnits.length > MAX_SIZE) {\n\t\t\t\tresult += fromCharCode.apply(null, codeUnits);\n\t\t\t\tcodeUnits.length = 0;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t};\n\n\traw = function raw(callSite: TemplateStringsArray, ...substitutions: any[]): string {\n\t\tlet rawStrings = callSite.raw;\n\t\tlet result = '';\n\t\tlet numSubstitutions = substitutions.length;\n\n\t\tif (callSite == null || callSite.raw == null) {\n\t\t\tthrow new TypeError('string.raw requires a valid callSite object with a raw value');\n\t\t}\n\n\t\tfor (let i = 0, length = rawStrings.length; i < length; i++) {\n\t\t\tresult += rawStrings[i] + (i < numSubstitutions && i < length - 1 ? substitutions[i] : '');\n\t\t}\n\n\t\treturn result;\n\t};\n\n\tcodePointAt = function codePointAt(text: string, position: number = 0): number | undefined {\n\t\t// Adapted from https://github.com/mathiasbynens/String.prototype.codePointAt\n\t\tif (text == null) {\n\t\t\tthrow new TypeError('string.codePointAt requries a valid string.');\n\t\t}\n\t\tconst length = text.length;\n\n\t\tif (position !== position) {\n\t\t\tposition = 0;\n\t\t}\n\t\tif (position < 0 || position >= length) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Get the first code unit\n\t\tconst first = text.charCodeAt(position);\n\t\tif (first >= HIGH_SURROGATE_MIN && first <= HIGH_SURROGATE_MAX && length > position + 1) {\n\t\t\t// Start of a surrogate pair (high surrogate and there is a next code unit); check for low surrogate\n\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\tconst second = text.charCodeAt(position + 1);\n\t\t\tif (second >= LOW_SURROGATE_MIN && second <= LOW_SURROGATE_MAX) {\n\t\t\t\treturn (first - HIGH_SURROGATE_MIN) * 0x400 + second - LOW_SURROGATE_MIN + 0x10000;\n\t\t\t}\n\t\t}\n\t\treturn first;\n\t};\n\n\tendsWith = function endsWith(text: string, search: string, endPosition?: number): boolean {\n\t\tif (search === '') {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (typeof endPosition === 'undefined') {\n\t\t\tendPosition = text.length;\n\t\t} else if (endPosition === null || isNaN(endPosition)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t[text, search, endPosition] = normalizeSubstringArgs('endsWith', text, search, endPosition, true);\n\n\t\tconst start = endPosition - search.length;\n\t\tif (start < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn text.slice(start, endPosition) === search;\n\t};\n\n\tincludes = function includes(text: string, search: string, position: number = 0): boolean {\n\t\t[text, search, position] = normalizeSubstringArgs('includes', text, search, position);\n\t\treturn text.indexOf(search, position) !== -1;\n\t};\n\n\trepeat = function repeat(text: string, count: number = 0): string {\n\t\t// Adapted from https://github.com/mathiasbynens/String.prototype.repeat\n\t\tif (text == null) {\n\t\t\tthrow new TypeError('string.repeat requires a valid string.');\n\t\t}\n\t\tif (count !== count) {\n\t\t\tcount = 0;\n\t\t}\n\t\tif (count < 0 || count === Infinity) {\n\t\t\tthrow new RangeError('string.repeat requires a non-negative finite count.');\n\t\t}\n\n\t\tlet result = '';\n\t\twhile (count) {\n\t\t\tif (count % 2) {\n\t\t\t\tresult += text;\n\t\t\t}\n\t\t\tif (count > 1) {\n\t\t\t\ttext += text;\n\t\t\t}\n\t\t\tcount >>= 1;\n\t\t}\n\t\treturn result;\n\t};\n\n\tstartsWith = function startsWith(text: string, search: string, position: number = 0): boolean {\n\t\tsearch = String(search);\n\t\t[text, search, position] = normalizeSubstringArgs('startsWith', text, search, position);\n\n\t\tconst end = position + search.length;\n\t\tif (end > text.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn text.slice(position, end) === search;\n\t};\n}\n\nif (has('es2017-string')) {\n\tpadEnd = wrapNative(global.String.prototype.padEnd);\n\tpadStart = wrapNative(global.String.prototype.padStart);\n} else {\n\tpadEnd = function padEnd(text: string, maxLength: number, fillString: string = ' '): string {\n\t\tif (text === null || text === undefined) {\n\t\t\tthrow new TypeError('string.repeat requires a valid string.');\n\t\t}\n\n\t\tif (maxLength === Infinity) {\n\t\t\tthrow new RangeError('string.padEnd requires a non-negative finite count.');\n\t\t}\n\n\t\tif (maxLength === null || maxLength === undefined || maxLength < 0) {\n\t\t\tmaxLength = 0;\n\t\t}\n\n\t\tlet strText = String(text);\n\t\tconst padding = maxLength - strText.length;\n\n\t\tif (padding > 0) {\n\t\t\tstrText +=\n\t\t\t\trepeat(fillString, Math.floor(padding / fillString.length)) +\n\t\t\t\tfillString.slice(0, padding % fillString.length);\n\t\t}\n\n\t\treturn strText;\n\t};\n\n\tpadStart = function padStart(text: string, maxLength: number, fillString: string = ' '): string {\n\t\tif (text === null || text === undefined) {\n\t\t\tthrow new TypeError('string.repeat requires a valid string.');\n\t\t}\n\n\t\tif (maxLength === Infinity) {\n\t\t\tthrow new RangeError('string.padStart requires a non-negative finite count.');\n\t\t}\n\n\t\tif (maxLength === null || maxLength === undefined || maxLength < 0) {\n\t\t\tmaxLength = 0;\n\t\t}\n\n\t\tlet strText = String(text);\n\t\tconst padding = maxLength - strText.length;\n\n\t\tif (padding > 0) {\n\t\t\tstrText =\n\t\t\t\trepeat(fillString, Math.floor(padding / fillString.length)) +\n\t\t\t\tfillString.slice(0, padding % fillString.length) +\n\t\t\t\tstrText;\n\t\t}\n\n\t\treturn strText;\n\t};\n}\n","import { VNodeProperties } from './../interfaces';\n\nlet browserSpecificTransitionEndEventName = '';\nlet browserSpecificAnimationEndEventName = '';\n\nfunction determineBrowserStyleNames(element: HTMLElement) {\n\tif ('WebkitTransition' in element.style) {\n\t\tbrowserSpecificTransitionEndEventName = 'webkitTransitionEnd';\n\t\tbrowserSpecificAnimationEndEventName = 'webkitAnimationEnd';\n\t} else if ('transition' in element.style || 'MozTransition' in element.style) {\n\t\tbrowserSpecificTransitionEndEventName = 'transitionend';\n\t\tbrowserSpecificAnimationEndEventName = 'animationend';\n\t} else {\n\t\tthrow new Error('Your browser is not supported');\n\t}\n}\n\nfunction initialize(element: HTMLElement) {\n\tif (browserSpecificAnimationEndEventName === '') {\n\t\tdetermineBrowserStyleNames(element);\n\t}\n}\n\nfunction runAndCleanUp(element: HTMLElement, startAnimation: () => void, finishAnimation: () => void) {\n\tinitialize(element);\n\n\tlet finished = false;\n\n\tlet transitionEnd = function() {\n\t\tif (!finished) {\n\t\t\tfinished = true;\n\t\t\telement.removeEventListener(browserSpecificTransitionEndEventName, transitionEnd);\n\t\t\telement.removeEventListener(browserSpecificAnimationEndEventName, transitionEnd);\n\n\t\t\tfinishAnimation();\n\t\t}\n\t};\n\n\tstartAnimation();\n\n\telement.addEventListener(browserSpecificAnimationEndEventName, transitionEnd);\n\telement.addEventListener(browserSpecificTransitionEndEventName, transitionEnd);\n}\n\nfunction exit(node: HTMLElement, properties: VNodeProperties, exitAnimation: string, removeNode: () => void) {\n\tconst activeClass = properties.exitAnimationActive || `${exitAnimation}-active`;\n\n\trunAndCleanUp(\n\t\tnode,\n\t\t() => {\n\t\t\tnode.classList.add(exitAnimation);\n\n\t\t\trequestAnimationFrame(function() {\n\t\t\t\tnode.classList.add(activeClass);\n\t\t\t});\n\t\t},\n\t\t() => {\n\t\t\tremoveNode();\n\t\t}\n\t);\n}\n\nfunction enter(node: HTMLElement, properties: VNodeProperties, enterAnimation: string) {\n\tconst activeClass = properties.enterAnimationActive || `${enterAnimation}-active`;\n\n\trunAndCleanUp(\n\t\tnode,\n\t\t() => {\n\t\t\tnode.classList.add(enterAnimation);\n\n\t\t\trequestAnimationFrame(function() {\n\t\t\t\tnode.classList.add(activeClass);\n\t\t\t});\n\t\t},\n\t\t() => {\n\t\t\tnode.classList.remove(enterAnimation);\n\t\t\tnode.classList.remove(activeClass);\n\t\t}\n\t);\n}\n\nexport default {\n\tenter,\n\texit\n};\n","import global from './global';\nimport has from '../has/has';\nimport { isSymbol } from './Symbol';\n\nexport interface ObjectAssign {\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param source The source object from which to copy properties.\n\t */\n\t<T, U>(target: T, source: U): T & U;\n\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param source1 The first source object from which to copy properties.\n\t * @param source2 The second source object from which to copy properties.\n\t */\n\t<T, U, V>(target: T, source1: U, source2: V): T & U & V;\n\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param source1 The first source object from which to copy properties.\n\t * @param source2 The second source object from which to copy properties.\n\t * @param source3 The third source object from which to copy properties.\n\t */\n\t<T, U, V, W>(target: T, source1: U, source2: V, source3: W): T & U & V & W;\n\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param sources One or more source objects from which to copy properties\n\t */\n\t(target: object, ...sources: any[]): any;\n}\n\nexport interface ObjectEnteries {\n\t/**\n\t * Returns an array of key/values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t<T extends { [key: string]: any }, K extends keyof T>(o: T): [keyof T, T[K]][];\n\n\t/**\n\t * Returns an array of key/values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t(o: object): [string, any][];\n}\n\nexport interface ObjectGetOwnPropertyDescriptors {\n\t<T>(o: T): { [K in keyof T]: PropertyDescriptor };\n\t(o: any): { [key: string]: PropertyDescriptor };\n}\n\nexport interface ObjectValues {\n\t/**\n\t * Returns an array of values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t<T>(o: { [s: string]: T }): T[];\n\n\t/**\n\t * Returns an array of values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t(o: object): any[];\n}\n\nexport let assign: ObjectAssign;\n\n/**\n * Gets the own property descriptor of the specified object.\n * An own property descriptor is one that is defined directly on the object and is not\n * inherited from the object's prototype.\n * @param o Object that contains the property.\n * @param p Name of the property.\n */\nexport let getOwnPropertyDescriptor: <T, K extends keyof T>(o: T, propertyKey: K) => PropertyDescriptor | undefined;\n\n/**\n * Returns the names of the own properties of an object. The own properties of an object are those that are defined directly\n * on that object, and are not inherited from the object's prototype. The properties of an object include both fields (objects) and functions.\n * @param o Object that contains the own properties.\n */\nexport let getOwnPropertyNames: (o: any) => string[];\n\n/**\n * Returns an array of all symbol properties found directly on object o.\n * @param o Object to retrieve the symbols from.\n */\nexport let getOwnPropertySymbols: (o: any) => symbol[];\n\n/**\n * Returns true if the values are the same value, false otherwise.\n * @param value1 The first value.\n * @param value2 The second value.\n */\nexport let is: (value1: any, value2: any) => boolean;\n\n/**\n * Returns the names of the enumerable properties and methods of an object.\n * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n */\nexport let keys: (o: object) => string[];\n\n/* ES7 Object static methods */\n\nexport let getOwnPropertyDescriptors: ObjectGetOwnPropertyDescriptors;\n\nexport let entries: ObjectEnteries;\n\nexport let values: ObjectValues;\n\nif (has('es6-object')) {\n\tconst globalObject = global.Object;\n\tassign = globalObject.assign;\n\tgetOwnPropertyDescriptor = globalObject.getOwnPropertyDescriptor;\n\tgetOwnPropertyNames = globalObject.getOwnPropertyNames;\n\tgetOwnPropertySymbols = globalObject.getOwnPropertySymbols;\n\tis = globalObject.is;\n\tkeys = globalObject.keys;\n} else {\n\tkeys = function symbolAwareKeys(o: object): string[] {\n\t\treturn Object.keys(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n\t};\n\n\tassign = function assign(target: any, ...sources: any[]) {\n\t\tif (target == null) {\n\t\t\t// TypeError if undefined or null\n\t\t\tthrow new TypeError('Cannot convert undefined or null to object');\n\t\t}\n\n\t\tconst to = Object(target);\n\t\tsources.forEach((nextSource) => {\n\t\t\tif (nextSource) {\n\t\t\t\t// Skip over if undefined or null\n\t\t\t\tkeys(nextSource).forEach((nextKey) => {\n\t\t\t\t\tto[nextKey] = nextSource[nextKey];\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn to;\n\t};\n\n\tgetOwnPropertyDescriptor = function<T, K extends keyof T>(o: T, prop: K): PropertyDescriptor | undefined {\n\t\tif (isSymbol(prop)) {\n\t\t\treturn Object.getOwnPropertyDescriptor(o, prop);\n\t\t} else {\n\t\t\treturn Object.getOwnPropertyDescriptor(o, prop);\n\t\t}\n\t};\n\n\tgetOwnPropertyNames = function getOwnPropertyNames(o: any): string[] {\n\t\treturn Object.getOwnPropertyNames(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n\t};\n\n\tgetOwnPropertySymbols = function getOwnPropertySymbols(o: any): symbol[] {\n\t\treturn Object.getOwnPropertyNames(o)\n\t\t\t.filter((key) => Boolean(key.match(/^@@.+/)))\n\t\t\t.map((key) => Symbol.for(key.substring(2)));\n\t};\n\n\tis = function is(value1: any, value2: any): boolean {\n\t\tif (value1 === value2) {\n\t\t\treturn value1 !== 0 || 1 / value1 === 1 / value2; // -0\n\t\t}\n\t\treturn value1 !== value1 && value2 !== value2; // NaN\n\t};\n}\n\nif (has('es2017-object')) {\n\tconst globalObject = global.Object;\n\tgetOwnPropertyDescriptors = globalObject.getOwnPropertyDescriptors;\n\tentries = globalObject.entries;\n\tvalues = globalObject.values;\n} else {\n\tgetOwnPropertyDescriptors = function getOwnPropertyDescriptors(o: any) {\n\t\treturn getOwnPropertyNames(o).reduce(\n\t\t\t(previous, key) => {\n\t\t\t\tprevious[key] = getOwnPropertyDescriptor(o, key)!;\n\t\t\t\treturn previous;\n\t\t\t},\n\t\t\t{} as { [key: string]: PropertyDescriptor }\n\t\t);\n\t};\n\n\tentries = function entries(o: any): [string, any][] {\n\t\treturn keys(o).map((key) => [key, o[key]] as [string, any]);\n\t};\n\n\tvalues = function values(o: any): any[] {\n\t\treturn keys(o).map((key) => o[key]);\n\t};\n}\n","import { PropertyChangeRecord } from './interfaces';\nimport { WIDGET_BASE_TYPE } from './Registry';\n\nfunction isObjectOrArray(value: any): boolean {\n\treturn Object.prototype.toString.call(value) === '[object Object]' || Array.isArray(value);\n}\n\nexport function always(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\treturn {\n\t\tchanged: true,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function ignore(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\treturn {\n\t\tchanged: false,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function reference(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\treturn {\n\t\tchanged: previousProperty !== newProperty,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function shallow(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\tlet changed = false;\n\n\tconst validOldProperty = previousProperty && isObjectOrArray(previousProperty);\n\tconst validNewProperty = newProperty && isObjectOrArray(newProperty);\n\n\tif (!validOldProperty || !validNewProperty) {\n\t\treturn {\n\t\t\tchanged: true,\n\t\t\tvalue: newProperty\n\t\t};\n\t}\n\n\tconst previousKeys = Object.keys(previousProperty);\n\tconst newKeys = Object.keys(newProperty);\n\n\tif (previousKeys.length !== newKeys.length) {\n\t\tchanged = true;\n\t} else {\n\t\tchanged = newKeys.some((key) => {\n\t\t\treturn newProperty[key] !== previousProperty[key];\n\t\t});\n\t}\n\treturn {\n\t\tchanged,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function auto(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\tlet result;\n\tif (typeof newProperty === 'function') {\n\t\tif (newProperty._type === WIDGET_BASE_TYPE) {\n\t\t\tresult = reference(previousProperty, newProperty);\n\t\t} else {\n\t\t\tresult = ignore(previousProperty, newProperty);\n\t\t}\n\t} else if (isObjectOrArray(newProperty)) {\n\t\tresult = shallow(previousProperty, newProperty);\n\t} else {\n\t\tresult = reference(previousProperty, newProperty);\n\t}\n\treturn result;\n}\n","import { Map } from '../shim/Map';\nimport { Evented, EventObject } from '../core/Evented';\nimport { Constructor, InjectorFactory, InjectorItem, RegistryLabel, WidgetBaseInterface } from './interfaces';\nimport { Registry, RegistryEventObject, RegistryItem } from './Registry';\n\nexport type RegistryHandlerEventMap = {\n\tinvalidate: EventObject<'invalidate'>;\n};\n\nexport class RegistryHandler extends Evented<RegistryHandlerEventMap> {\n\tprivate _registry = new Registry();\n\tprivate _registryWidgetLabelMap: Map<Registry, RegistryLabel[]> = new Map();\n\tprivate _registryInjectorLabelMap: Map<Registry, RegistryLabel[]> = new Map();\n\tprotected baseRegistry?: Registry;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.own(this._registry);\n\t\tconst destroy = () => {\n\t\t\tif (this.baseRegistry) {\n\t\t\t\tthis._registryWidgetLabelMap.delete(this.baseRegistry);\n\t\t\t\tthis._registryInjectorLabelMap.delete(this.baseRegistry);\n\t\t\t\tthis.baseRegistry = undefined;\n\t\t\t}\n\t\t};\n\t\tthis.own({ destroy });\n\t}\n\n\tpublic set base(baseRegistry: Registry) {\n\t\tif (this.baseRegistry) {\n\t\t\tthis._registryWidgetLabelMap.delete(this.baseRegistry);\n\t\t\tthis._registryInjectorLabelMap.delete(this.baseRegistry);\n\t\t}\n\t\tthis.baseRegistry = baseRegistry;\n\t}\n\n\tpublic define(label: RegistryLabel, widget: RegistryItem): void {\n\t\tthis._registry.define(label, widget);\n\t}\n\n\tpublic defineInjector(label: RegistryLabel, injector: InjectorFactory): void {\n\t\tthis._registry.defineInjector(label, injector);\n\t}\n\n\tpublic has(label: RegistryLabel): boolean {\n\t\treturn this._registry.has(label) || Boolean(this.baseRegistry && this.baseRegistry.has(label));\n\t}\n\n\tpublic hasInjector(label: RegistryLabel): boolean {\n\t\treturn this._registry.hasInjector(label) || Boolean(this.baseRegistry && this.baseRegistry.hasInjector(label));\n\t}\n\n\tpublic get<T extends WidgetBaseInterface = WidgetBaseInterface>(\n\t\tlabel: RegistryLabel,\n\t\tglobalPrecedence: boolean = false\n\t): Constructor<T> | null {\n\t\treturn this._get(label, globalPrecedence, 'get', this._registryWidgetLabelMap);\n\t}\n\n\tpublic getInjector<T>(label: RegistryLabel, globalPrecedence: boolean = false): InjectorItem<T> | null {\n\t\treturn this._get(label, globalPrecedence, 'getInjector', this._registryInjectorLabelMap);\n\t}\n\n\tprivate _get(\n\t\tlabel: RegistryLabel,\n\t\tglobalPrecedence: boolean,\n\t\tgetFunctionName: 'getInjector' | 'get',\n\t\tlabelMap: Map<Registry, RegistryLabel[]>\n\t): any {\n\t\tconst registries = globalPrecedence ? [this.baseRegistry, this._registry] : [this._registry, this.baseRegistry];\n\t\tfor (let i = 0; i < registries.length; i++) {\n\t\t\tconst registry: any = registries[i];\n\t\t\tif (!registry) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst item = registry[getFunctionName](label);\n\t\t\tconst registeredLabels = labelMap.get(registry) || [];\n\t\t\tif (item) {\n\t\t\t\treturn item;\n\t\t\t} else if (registeredLabels.indexOf(label) === -1) {\n\t\t\t\tconst handle = registry.on(label, (event: RegistryEventObject) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tevent.action === 'loaded' &&\n\t\t\t\t\t\t(this as any)[getFunctionName](label, globalPrecedence) === event.item\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.emit({ type: 'invalidate' });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.own(handle);\n\t\t\t\tlabelMap.set(registry, [...registeredLabels, label]);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n}\n\nexport default RegistryHandler;\n","import { Evented, EventObject } from '../core/Evented';\nimport Map from '../shim/Map';\nimport { NodeHandlerInterface } from './interfaces';\n\n/**\n * Enum to identify the type of event.\n * Listening to 'Projector' will notify when projector is created or updated\n * Listening to 'Widget' will notify when widget root is created or updated\n */\nexport enum NodeEventType {\n\tProjector = 'Projector',\n\tWidget = 'Widget'\n}\n\nexport type NodeHandlerEventMap = {\n\tProjector: EventObject<NodeEventType.Projector>;\n\tWidget: EventObject<NodeEventType.Widget>;\n};\n\nexport class NodeHandler extends Evented<NodeHandlerEventMap> implements NodeHandlerInterface {\n\tprivate _nodeMap = new Map<string, Element>();\n\n\tpublic get(key: string): Element | undefined {\n\t\treturn this._nodeMap.get(key);\n\t}\n\n\tpublic has(key: string): boolean {\n\t\treturn this._nodeMap.has(key);\n\t}\n\n\tpublic add(element: Element, key: string): void {\n\t\tthis._nodeMap.set(key, element);\n\t\tthis.emit({ type: key });\n\t}\n\n\tpublic addRoot(): void {\n\t\tthis.emit({ type: NodeEventType.Widget });\n\t}\n\n\tpublic addProjector(): void {\n\t\tthis.emit({ type: NodeEventType.Projector });\n\t}\n\n\tpublic clear(): void {\n\t\tthis._nodeMap.clear();\n\t}\n}\n\nexport default NodeHandler;\n","import { v, w } from '@dojo/framework/widget-core/d';\nimport WidgetBase from '@dojo/framework/widget-core/WidgetBase';\nimport { getListItems } from '../listItemGenerator';\nimport InfiniteList from './InfiniteList';\n\nimport * as css from './styles/app.m.css';\n\n/**\n * The main widget of this application. This widget contains and feeds data to our infinite list.\n */\nexport class App extends WidgetBase {\n\tprotected render() {\n\t\treturn v('div', { classes: css.root }, [\n\t\t\tv('h1', { classes: css.title }, ['Infinite Scrolling List']),\n\t\t\tw(InfiniteList, { onRequestItems: this.onRequestItems.bind(this) })\n\t\t]);\n\t}\n\n\tprivate async onRequestItems(startIndex: number) {\n\t\tconst articles = await getListItems();\n\n\t\treturn articles.map(({ title, summary }, index) =>\n\t\t\tv('div', { key: `article-${startIndex + index}`, classes: css.itemRoot }, [\n\t\t\t\tv('h2', { classes: css.itemTitle }, [title]),\n\t\t\t\tv('p', { classes: css.itemSummary }, [summary])\n\t\t\t])\n\t\t);\n\t}\n}\n\nexport default App;\n","/*\n * Nonsense content generation to keep our infinite list interesting.\n */\n\nconst titles = [\n\t'Double Your Profit with These [number] tips on [subject]',\n\t'[number] Easy Ways You Can Turn [subject] Into Success',\n\t'Can You Pass The [subject] Test?',\n\t'Why Ignoring [subject] Will Cost You Time And Sales',\n\t'[number] Methods Of [subject] [goal]',\n\t'What [organization] Doesn\\'t Want You To Know About [subject]',\n\t'The Aliens Are Sneaking [subject] Into America. What You Need To Know For [better]',\n\t'Clear And Unbiased Facts About [subject] (Without All The Hype)',\n\t'[subject] Is Bound To Make An Impact On Your [location]',\n\t'At Last, The Secret To [subject] Revealed',\n\t'Take The Stress Out Of [subject]',\n\t'[number] Easy Ways To Make [subject] [better]',\n\t'Lies About [subject]',\n\t'Top [number] Ways To Buy Used [subject]',\n\t'Improve Your [subject] In [number] Days',\n\t'[better] [subject] In [number] Easy Steps',\n\t'Proof That [subject] Are Exactly What You Are Looking For',\n\t'[subject] Becoming A Challenge? [number] Tips for [subject] [better]',\n\t'The [organization]\\'s Secret Campaign Against [subject]',\n\t'Drone Overhead? Why [organization] Can\\'t Have You Panic'\n];\n\nconst subjects = [\n\t'Waning Gibbous',\n\t'Government Test Sites',\n\t'Tin Foil Hats',\n\t'Cats'\n];\n\nconst goals = [\n\t'Success',\n\t'Domination',\n\t'Happiness'\n];\n\nconst locations = [\n\t'Life',\n\t'Business',\n\t'Mother\\'s Basement',\n\t'Cat'\n];\n\nconst betters = [\n\t'Faster',\n\t'Stronger',\n\t'Successful'\n];\n\nconst organizations = [\n\t'The Government',\n\t'The CIA',\n\t'The FBI',\n\t'Math Teachers'\n];\n\nfunction generateArticleTitle() {\n\tlet template = titles[Math.floor(Math.random() * titles.length)];\n\n\treturn template.replace(/\\[[^\\]]+\\]/g, (match) => {\n\t\tswitch (match) {\n\t\t\tcase '[number]':\n\t\t\t\treturn String(Math.round(Math.random() * 14) + 1);\n\t\t\tcase '[subject]':\n\t\t\t\treturn subjects[Math.floor(Math.random() * subjects.length)];\n\t\t\tcase '[goal]':\n\t\t\t\treturn goals[Math.floor(Math.random() * goals.length)];\n\t\t\tcase '[location]':\n\t\t\t\treturn locations[Math.floor(Math.random() * locations.length)];\n\t\t\tcase '[better]':\n\t\t\t\treturn betters[Math.floor(Math.random() * betters.length)];\n\t\t\tcase '[organization]':\n\t\t\t\treturn organizations[Math.floor(Math.random() * organizations.length)];\n\t\t}\n\n\t\treturn match;\n\t});\n}\n\n/**\n * Grabs content for our list. This is async because it could be pulling data from a server.\n */\nexport function getListItems(count = 10) {\n\tconst articles = [];\n\n\tfor (let i = 0; i < count; i++) {\n\t\tconst sentences = Math.round(Math.random() * 3);\n\n\t\tlet summary = generateArticleTitle();\n\t\tfor(let j = 0; j < sentences; j++) {\n\t\t\tsummary += '. ' + generateArticleTitle();\n\t\t}\n\n\t\tarticles.push({\n\t\t\ttitle: generateArticleTitle(),\n\t\t\tsummary\n\t\t});\n\t}\n\n\treturn Promise.resolve(articles);\n}","import { v } from '@dojo/framework/widget-core/d';\nimport { DNode } from '@dojo/framework/widget-core/interfaces';\nimport Intersection from '@dojo/framework/widget-core/meta/Intersection';\nimport WidgetBase from '@dojo/framework/widget-core/WidgetBase';\n\nimport * as css from './styles/infiniteList.m.css';\n\nexport interface InfiniteListProperties {\n\tonRequestItems(startIndex: number): Promise<DNode[]>;\n}\n\n/**\n * Infinite list widget. The widget simply has an element at the bottom that, when is detected to be on the screen,\n * causes a request for more data.  To keep things simple, it is the responsibility of the containing widget to provide\n * more data.\n */\nexport class InfiniteList extends WidgetBase<InfiniteListProperties> {\n\titems: DNode[] = [];\n\tisLoadingData = false;\n\n\tprotected render() {\n\t\tconst { isIntersecting } = this.meta(Intersection).get('bottom');\n\n\t\tif (isIntersecting && !this.isLoadingData) {\n\t\t\tthis.isLoadingData = true;\n\t\t\tthis.properties.onRequestItems(this.items.length).then(items => {\n\t\t\t\tthis.items = this.items.concat(items);\n\t\t\t\tthis.isLoadingData = false;\n\t\t\t\tthis.invalidate();\n\t\t\t});\n\t\t}\n\n\t\treturn v('div', {}, [\n\t\t\t...this.items,\n\t\t\tv('div', { key: 'bottom', classes: css.bottom })\n\t\t]);\n\t}\n}\n\nexport default InfiniteList;\n","import WeakMap from '../../shim/WeakMap';\nimport Map from '../../shim/Map';\nimport { Base } from './Base';\nimport IntersectionObserver from '../../shim/IntersectionObserver';\n\ninterface ExtendedIntersectionObserverEntry extends IntersectionObserverEntry {\n\treadonly isIntersecting: boolean;\n}\n\ninterface IntersectionDetail extends IntersectionGetOptions {\n\tentries: WeakMap<Element, IntersectionResult>;\n\tobserver: IntersectionObserver;\n}\n\nexport interface IntersectionGetOptions {\n\troot?: string;\n\trootMargin?: string;\n\tthreshold?: number[];\n}\n\nexport interface IntersectionResult {\n\tintersectionRatio: number;\n\tisIntersecting: boolean;\n}\n\nconst defaultIntersection: IntersectionResult = Object.freeze({\n\tintersectionRatio: 0,\n\tisIntersecting: false\n});\n\nexport class Intersection extends Base {\n\tprivate readonly _details = new Map<string, IntersectionDetail>();\n\n\t/**\n\t * Return an `InteractionResult` for the requested key and options.\n\t *\n\t * @param key The key to return the intersection meta for\n\t * @param options The options for the request\n\t */\n\tpublic get(key: string | number, options: IntersectionGetOptions = {}): IntersectionResult {\n\t\tlet rootNode: HTMLElement | undefined;\n\t\tif (options.root) {\n\t\t\trootNode = this.getNode(options.root) as HTMLElement;\n\t\t\tif (!rootNode) {\n\t\t\t\treturn defaultIntersection;\n\t\t\t}\n\t\t}\n\t\tconst node = this.getNode(key);\n\t\tif (!node) {\n\t\t\treturn defaultIntersection;\n\t\t}\n\n\t\tlet details = this._getDetails(options) || this._createDetails(options, rootNode);\n\t\tif (!details.entries.get(node)) {\n\t\t\tdetails.entries.set(node, defaultIntersection);\n\t\t\tdetails.observer.observe(node);\n\t\t}\n\n\t\treturn details.entries.get(node) || defaultIntersection;\n\t}\n\n\t/**\n\t * Returns true if the node for the key has intersection details\n\t *\n\t * @param key The key to return the intersection meta for\n\t * @param options The options for the request\n\t */\n\tpublic has(key: string | number, options?: IntersectionGetOptions): boolean {\n\t\tconst node = this.getNode(key);\n\t\tconst details = this._getDetails(options);\n\t\treturn Boolean(details && node && details.entries.has(node));\n\t}\n\n\tprivate _createDetails(options: IntersectionGetOptions, rootNode?: HTMLElement): IntersectionDetail {\n\t\tconst entries = new WeakMap<HTMLElement, ExtendedIntersectionObserverEntry>();\n\t\tconst observer = new IntersectionObserver(this._onIntersect(entries), { ...options, root: rootNode });\n\t\tconst details = { observer, entries, ...options };\n\n\t\tthis._details.set(JSON.stringify(options), details);\n\t\tthis.own({\n\t\t\tdestroy: () => observer.disconnect()\n\t\t});\n\t\treturn details;\n\t}\n\n\tprivate _getDetails(options: IntersectionGetOptions = {}): IntersectionDetail | undefined {\n\t\treturn this._details.get(JSON.stringify(options));\n\t}\n\n\tprivate _onIntersect = (detailEntries: WeakMap<Element, IntersectionResult>) => {\n\t\treturn (entries: ExtendedIntersectionObserverEntry[]) => {\n\t\t\tfor (const { intersectionRatio, isIntersecting, target } of entries) {\n\t\t\t\tdetailEntries.set(target, { intersectionRatio, isIntersecting });\n\t\t\t}\n\t\t\tthis.invalidate();\n\t\t};\n\t};\n}\n\nexport default Intersection;\n","import { Destroyable } from '../../core/Destroyable';\nimport Set from '../../shim/Set';\nimport { WidgetMetaBase, WidgetMetaProperties, NodeHandlerInterface, WidgetBaseInterface } from '../interfaces';\n\nexport class Base extends Destroyable implements WidgetMetaBase {\n\tprivate _invalidate: () => void;\n\tprotected nodeHandler: NodeHandlerInterface;\n\n\tprivate _requestedNodeKeys = new Set<string | number>();\n\n\tprotected _bind: WidgetBaseInterface | undefined;\n\n\tconstructor(properties: WidgetMetaProperties) {\n\t\tsuper();\n\n\t\tthis._invalidate = properties.invalidate;\n\t\tthis.nodeHandler = properties.nodeHandler;\n\t\tif (properties.bind) {\n\t\t\tthis._bind = properties.bind;\n\t\t}\n\t}\n\n\tpublic has(key: string | number): boolean {\n\t\treturn this.nodeHandler.has(key);\n\t}\n\n\tprotected getNode(key: string | number): Element | undefined {\n\t\tconst stringKey = `${key}`;\n\t\tconst node = this.nodeHandler.get(stringKey);\n\n\t\tif (!node && !this._requestedNodeKeys.has(stringKey)) {\n\t\t\tconst handle = this.nodeHandler.on(stringKey, () => {\n\t\t\t\thandle.destroy();\n\t\t\t\tthis._requestedNodeKeys.delete(stringKey);\n\t\t\t\tthis.invalidate();\n\t\t\t});\n\n\t\t\tthis.own(handle);\n\t\t\tthis._requestedNodeKeys.add(stringKey);\n\t\t}\n\n\t\treturn node;\n\t}\n\n\tprotected invalidate(): void {\n\t\tthis._invalidate();\n\t}\n\n\tpublic afterRender(): void {\n\t\t// Do nothing by default.\n\t}\n}\n\nexport default Base;\n","import global from './global';\nimport { isArrayLike, Iterable, IterableIterator, ShimIterator } from './iterator';\nimport has from '../has/has';\nimport './Symbol';\n\nexport interface Set<T> {\n\t/**\n\t * Adds a `value` to the `Set`\n\t *\n\t * @param value The value to add to the set\n\t * @returns The instance of the `Set`\n\t */\n\tadd(value: T): this;\n\n\t/**\n\t * Removes all the values from the `Set`.\n\t */\n\tclear(): void;\n\n\t/**\n\t * Removes a `value` from the set\n\t *\n\t * @param value The value to be removed\n\t * @returns `true` if the value was removed\n\t */\n\tdelete(value: T): boolean;\n\n\t/**\n\t * Returns an iterator that yields each entry.\n\t *\n\t * @return An iterator for each key/value pair in the instance.\n\t */\n\tentries(): IterableIterator<[T, T]>;\n\n\t/**\n\t * Executes a given function for each set entry. The function\n\t * is invoked with three arguments: the element value, the\n\t * element key, and the associated `Set` instance.\n\t *\n\t * @param callbackfn The function to execute for each map entry,\n\t * @param thisArg The value to use for `this` for each execution of the calback\n\t */\n\tforEach(callbackfn: (value: T, value2: T, set: Set<T>) => void, thisArg?: any): void;\n\n\t/**\n\t * Identifies if a value is part of the set.\n\t *\n\t * @param value The value to check\n\t * @returns `true` if the value is part of the set otherwise `false`\n\t */\n\thas(value: T): boolean;\n\n\t/**\n\t * Despite its name, returns an iterable of the values in the set,\n\t */\n\tkeys(): IterableIterator<T>;\n\n\t/**\n\t * Returns the number of values in the `Set`.\n\t */\n\treadonly size: number;\n\n\t/**\n\t * Returns an iterable of values in the set.\n\t */\n\tvalues(): IterableIterator<T>;\n\n\t/** Iterates over values in the set. */\n\t[Symbol.iterator](): IterableIterator<T>;\n\n\treadonly [Symbol.toStringTag]: 'Set';\n}\n\nexport interface SetConstructor {\n\t/**\n\t * Creates a new Set\n\t *\n\t * @constructor\n\t */\n\tnew (): Set<any>;\n\n\t/**\n\t * Creates a new Set\n\t *\n\t * @constructor\n\t *\n\t * @param iterator The iterable structure to initialize the set with\n\t */\n\tnew <T>(iterator?: T[]): Set<T>;\n\n\t/**\n\t * Creates a new Set\n\t *\n\t * @constructor\n\t *\n\t * @param iterator The iterable structure to initialize the set with\n\t */\n\tnew <T>(iterator: Iterable<T>): Set<T>;\n\n\treadonly prototype: Set<any>;\n}\n\nexport let Set: SetConstructor = global.Set;\n\nif (!has('es6-set')) {\n\tSet = class Set<T> {\n\t\tprivate readonly _setData: T[] = [];\n\n\t\tstatic [Symbol.species] = Set;\n\n\t\tconstructor(iterable?: ArrayLike<T> | Iterable<T>) {\n\t\t\tif (iterable) {\n\t\t\t\tif (isArrayLike(iterable)) {\n\t\t\t\t\tfor (let i = 0; i < iterable.length; i++) {\n\t\t\t\t\t\tthis.add(iterable[i]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (const value of iterable) {\n\t\t\t\t\t\tthis.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tadd(value: T): this {\n\t\t\tif (this.has(value)) {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tthis._setData.push(value);\n\t\t\treturn this;\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis._setData.length = 0;\n\t\t}\n\n\t\tdelete(value: T): boolean {\n\t\t\tconst idx = this._setData.indexOf(value);\n\t\t\tif (idx === -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis._setData.splice(idx, 1);\n\t\t\treturn true;\n\t\t}\n\n\t\tentries(): IterableIterator<[T, T]> {\n\t\t\treturn new ShimIterator<[any, any]>(this._setData.map<[any, any]>((value) => [value, value]));\n\t\t}\n\n\t\tforEach(callbackfn: (value: T, index: T, set: Set<T>) => void, thisArg?: any): void {\n\t\t\tconst iterator = this.values();\n\t\t\tlet result = iterator.next();\n\t\t\twhile (!result.done) {\n\t\t\t\tcallbackfn.call(thisArg, result.value, result.value, this);\n\t\t\t\tresult = iterator.next();\n\t\t\t}\n\t\t}\n\n\t\thas(value: T): boolean {\n\t\t\treturn this._setData.indexOf(value) > -1;\n\t\t}\n\n\t\tkeys(): IterableIterator<T> {\n\t\t\treturn new ShimIterator(this._setData);\n\t\t}\n\n\t\tget size(): number {\n\t\t\treturn this._setData.length;\n\t\t}\n\n\t\tvalues(): IterableIterator<T> {\n\t\t\treturn new ShimIterator(this._setData);\n\t\t}\n\n\t\t[Symbol.iterator](): IterableIterator<T> {\n\t\t\treturn new ShimIterator(this._setData);\n\t\t}\n\n\t\t[Symbol.toStringTag]: 'Set' = 'Set';\n\t};\n}\n\nexport default Set;\n","import global from './global';\n`!has('build-elide')`;\nimport 'intersection-observer';\n\nexport default global.IntersectionObserver as typeof IntersectionObserver;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"intersection-observer/infiniteList\",\"bottom\":\"infiniteList-m__bottom__3a6TF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"intersection-observer/app\",\"root\":\"app-m__root__2lj42\",\"title\":\"app-m__title__1xQid\",\"itemRoot\":\"app-m__itemRoot__1d4IF\",\"itemTitle\":\"app-m__itemTitle__txbJp\",\"itemSummary\":\"app-m__itemSummary__16TyJ\"};"],"sourceRoot":""}