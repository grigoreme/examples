{"version":3,"sources":["webpack://realworld_app/./src/utils.ts","webpack://realworld_app/./src/containers/RegisterContainer.ts","webpack://realworld_app/./src/widgets/Register.ts"],"names":["__webpack_require__","d","__webpack_exports__","createInputNode","_dojo_framework_widget_core_d__WEBPACK_IMPORTED_MODULE_0__","value","placeholder","oninput","Object","classes","type","StoreInjector","WidgetBase","[object Object]","target","email","this","properties","onEmailInput","password","onPasswordInput","username","onUsernameInput","event","preventDefault","onRegister","errors","inProgress","Link","to","ErrorList","onsubmit","_onRegister","utils","_onUsernameInput","_onEmailInput","_onPasswordInput","disabled","paths","getProperties","store","get","path","loginProcesses"],"mappings":";;;;;;;;4HAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,IAGO,SAAAG,EAAyBE,EAAeC,EAAqBC,GACnE,OAAOC,OAAAJ,EAAA,EAAAI,CAAE,WAAY,CAAEC,QAAS,cAAgB,CAC/CD,OAAAJ,EAAA,EAAAI,CAAE,QAAS,CACVH,QACAI,QAAS,CAAC,eAAgB,mBAC1BC,KAAM,OACNJ,cACAC,uHCiBYL,EAAA,QAAAM,OAAAG,EAAA,GCPR,cAAuBC,EAAA,EACrBC,eAAgBC,QAAUT,MAAOU,KACxCC,KAAKC,WAAWC,aAAa,CAAEH,UAGxBF,kBAAmBC,QAAUT,MAAOc,KAC3CH,KAAKC,WAAWG,gBAAgB,CAAED,aAG3BN,kBAAmBC,QAAUT,MAAOgB,KAC3CL,KAAKC,WAAWK,gBAAgB,CAAED,aAG3BR,YAAYU,GACnBA,EAAMC,iBACNR,KAAKC,WAAWQ,WAAW,IAIlBZ,SACT,MAAMa,OAAEA,EAAMX,MAAEA,EAAKI,SAAEA,EAAQE,SAAEA,EAAQM,WAAEA,GAAa,GAAUX,KAAKC,WAEvE,OAAOT,OAAAP,EAAA,EAAAO,CAAE,MAAO,CAAEC,QAAS,aAAe,CACzCD,OAAAP,EAAA,EAAAO,CAAE,MAAO,CAAEC,QAAS,CAAC,YAAa,SAAW,CAC5CD,OAAAP,EAAA,EAAAO,CAAE,MAAO,CAAEC,QAAS,OAAS,CAC5BD,OAAAP,EAAA,EAAAO,CAAE,MAAO,CAAEC,QAAS,CAAC,WAAY,cAAe,cAAgB,CAC/DD,OAAAP,EAAA,EAAAO,CAAE,KAAM,CAAEC,QAAS,kBAAoB,CAAC,YACxCD,OAAAP,EAAA,EAAAO,CAAE,IAAK,CAAEC,QAAS,kBAAoB,CAACD,OAAAP,EAAA,EAAAO,CAAEoB,EAAA,EAAM,CAAEC,GAAI,SAAW,CAAC,uBACjEH,EAASlB,OAAAP,EAAA,EAAAO,CAAEsB,EAAA,EAAW,CAAEJ,WAAY,KACpClB,OAAAP,EAAA,EAAAO,CAAE,OAAQ,CAAEuB,SAAUf,KAAKgB,aAAe,CACzCxB,OAAAP,EAAA,EAAAO,CAAE,WAAY,CACbA,OAAAP,EAAA,EAAAO,CAAE,WAAY,CAAEC,QAAS,cAAgB,CACxCD,OAAAyB,EAAA,EAAAzB,CAAgBa,EAAU,WAAYL,KAAKkB,oBAE5C1B,OAAAP,EAAA,EAAAO,CAAE,WAAY,CAAEC,QAAS,cAAgB,CACxCD,OAAAyB,EAAA,EAAAzB,CAAgBO,EAAO,QAASC,KAAKmB,iBAEtC3B,OAAAP,EAAA,EAAAO,CAAE,WAAY,CAAEC,QAAS,cAAgB,CACxCD,OAAAyB,EAAA,EAAAzB,CAAgBW,EAAU,WAAYH,KAAKoB,oBAE5C5B,OAAAP,EAAA,EAAAO,CAAE,SAAU,CACXC,QAAS,CAAC,aAAc,cAAe,iBACvC4B,SAAUV,EACVjB,KAAM,UACJ,CAAC,0BDrC4B,QAAS,CAAE4B,MAAO,CAAC,CAAC,YAAa,CAAC,WAAYC,cAhBtF,SAAuBC,GACtB,MAAMC,IAAEA,EAAGC,KAAEA,GAASF,EAEtB,MAAO,CACNzB,MAAO0B,EAAIC,EAAK,WAAY,UAC5BvB,SAAUsB,EAAIC,EAAK,WAAY,aAC/BrB,SAAUoB,EAAIC,EAAK,WAAY,aAC/BhB,OAAQe,EAAIC,EAAK,WACjBf,WAAYc,EAAIC,EAAK,WAAY,YACjCxB,aAAcV,OAAAmC,EAAA,EAAAnC,CAA0BgC,GACxCpB,gBAAiBZ,OAAAmC,EAAA,EAAAnC,CAA6BgC,GAC9ClB,gBAAiBd,OAAAmC,EAAA,EAAAnC,CAA6BgC,GAC9Cf,WAAYjB,OAAAmC,EAAA,EAAAnC,CAAgBgC","file":"src/containers/RegisterContainer.093ed4f96274335d0996.bundle.js","sourcesContent":["import { v } from '@dojo/framework/widget-core/d';\nimport { WithTarget } from './interfaces';\n\nexport function createInputNode(value: string, placeholder: string, oninput: (event: WithTarget) => void) {\n\treturn v('fieldset', { classes: 'form-group' }, [\n\t\tv('input', {\n\t\t\tvalue,\n\t\t\tclasses: ['form-control', 'form-control-lg'],\n\t\t\ttype: 'text',\n\t\t\tplaceholder,\n\t\t\toninput\n\t\t})\n\t]);\n}\n","import { Store } from '@dojo/framework/stores/Store';\nimport { Register, RegisterProperties } from './../widgets/Register';\nimport {\n\tregisterProcess,\n\tregisterEmailInputProcess,\n\tregisterPasswordInputProcess,\n\tregisterUsernameInputProcess\n} from './../processes/loginProcesses';\nimport { State } from '../interfaces';\nimport { StoreContainer } from '@dojo/framework/stores/StoreInjector';\n\nfunction getProperties(store: Store<State>): RegisterProperties {\n\tconst { get, path } = store;\n\n\treturn {\n\t\temail: get(path('register', 'email')),\n\t\tpassword: get(path('register', 'password')),\n\t\tusername: get(path('register', 'username')),\n\t\terrors: get(path('errors')),\n\t\tinProgress: get(path('register', 'loading')),\n\t\tonEmailInput: registerEmailInputProcess(store),\n\t\tonPasswordInput: registerPasswordInputProcess(store),\n\t\tonUsernameInput: registerUsernameInputProcess(store),\n\t\tonRegister: registerProcess(store)\n\t};\n}\n\nexport default StoreContainer(Register, 'state', { paths: [['register'], ['errors']], getProperties });\n","import { WidgetBase } from '@dojo/framework/widget-core/WidgetBase';\nimport { v, w } from '@dojo/framework/widget-core/d';\nimport { Link } from '@dojo/framework/routing/Link';\nimport { Errors, WithTarget } from '../interfaces';\nimport { ErrorList } from './ErrorList';\nimport { createInputNode } from '../utils';\nimport { PasswordPayload, EmailPayload, UsernamePayload } from '../processes/interfaces';\n\nexport interface RegisterProperties {\n\temail: string;\n\tpassword: string;\n\tusername: string;\n\tinProgress?: boolean;\n\terrors: Errors;\n\tonPasswordInput: (opts: PasswordPayload) => void;\n\tonEmailInput: (opts: EmailPayload) => void;\n\tonUsernameInput: (opts: UsernamePayload) => void;\n\tonRegister: (opts: object) => void;\n}\n\nexport class Register extends WidgetBase<RegisterProperties> {\n\tprivate _onEmailInput({ target: { value: email } }: WithTarget) {\n\t\tthis.properties.onEmailInput({ email });\n\t}\n\n\tprivate _onPasswordInput({ target: { value: password } }: WithTarget) {\n\t\tthis.properties.onPasswordInput({ password });\n\t}\n\n\tprivate _onUsernameInput({ target: { value: username } }: WithTarget) {\n\t\tthis.properties.onUsernameInput({ username });\n\t}\n\n\tprivate _onRegister(event: Event) {\n\t\tevent.preventDefault();\n\t\tthis.properties.onRegister({});\n\t}\n\n\t// prettier-ignore\n\tprotected render() {\n\t\tconst { errors, email, password, username, inProgress = false } = this.properties;\n\n\t\treturn v('div', { classes: 'auth-page' }, [\n\t\t\tv('div', { classes: ['container', 'page'] }, [\n\t\t\t\tv('div', { classes: 'row' }, [\n\t\t\t\t\tv('div', { classes: ['col-md-6', 'offset-md-3', 'col-xs-12'] }, [\n\t\t\t\t\t\tv('h1', { classes: 'text-xs-center' }, ['Sign Up']),\n\t\t\t\t\t\tv('p', { classes: 'text-xs-center' }, [w(Link, { to: 'login' }, ['Have an account?'])]),\n\t\t\t\t\t\terrors ? w(ErrorList, { errors }) : null,\n\t\t\t\t\t\tv('form', { onsubmit: this._onRegister }, [\n\t\t\t\t\t\t\tv('fieldset', [\n\t\t\t\t\t\t\t\tv('fieldset', { classes: 'form-group' }, [\n\t\t\t\t\t\t\t\t\tcreateInputNode(username, 'Username', this._onUsernameInput)\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\tv('fieldset', { classes: 'form-group' }, [\n\t\t\t\t\t\t\t\t\tcreateInputNode(email, 'Email', this._onEmailInput)\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\tv('fieldset', { classes: 'form-group' }, [\n\t\t\t\t\t\t\t\t\tcreateInputNode(password, 'Password', this._onPasswordInput)\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\tv('button', {\n\t\t\t\t\t\t\t\t\tclasses: ['btn btn-lg', 'btn-primary', 'pull-xs-right'],\n\t\t\t\t\t\t\t\t\tdisabled: inProgress,\n\t\t\t\t\t\t\t\t\ttype: 'submit'\n\t\t\t\t\t\t\t\t}, ['Sign Up'])\n\t\t\t\t\t\t\t])\n\t\t\t\t\t\t])\n\t\t\t\t\t])\n\t\t\t\t])\n\t\t\t])\n\t\t]);\n\t}\n}\n"],"sourceRoot":""}