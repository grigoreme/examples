{"version":3,"sources":["webpack://custom_element/string.ts","webpack://custom_element/object.ts","webpack://custom_element/Map.ts","webpack://custom_element/WeakMap.ts","webpack://custom_element/d.ts","webpack://custom_element/Promise.ts","webpack://custom_element/Destroyable.ts","webpack://custom_element/Evented.ts","webpack://custom_element/Registry.ts","webpack://custom_element/diff.ts","webpack://custom_element/RegistryHandler.ts","webpack://custom_element/NodeHandler.ts","webpack://custom_element/WidgetBase.ts","webpack://custom_element/cssTransitions.ts","webpack://custom_element/vdom.ts","webpack://custom_element/handleDecorator.ts","webpack://custom_element/beforeProperties.ts","webpack://custom_element/inject.ts","webpack://custom_element/diffProperty.ts","webpack://custom_element/Themed.ts","webpack://custom_element/number.ts","webpack://custom_element/array.ts","webpack://custom_element/alwaysRender.ts","webpack://custom_element/registerCustomElement.ts","webpack://custom_element/customElement.ts","webpack://custom_element/./src/widgets/Menu.ts","webpack://custom_element/./src/widgets/MenuItem.ts","webpack://custom_element/./src/main.ts","webpack://custom_element/./node_modules/tslib/tslib.js","webpack://custom_element/./src/widgets/styles/menu.m.css","webpack://custom_element/./src/widgets/styles/menuItem.m.css"],"names":["fromCodePoint","raw","codePointAt","endsWith","includes","normalize","repeat","startsWith","padEnd","padStart","global","String","Object","util","prototype","object_assign","getOwnPropertyDescriptor","getOwnPropertyNames","getOwnPropertySymbols","is","keys","getOwnPropertyDescriptors","entries","values","globalObject","assign","Map","shim_Map","WeakMap","shim_WeakMap","WNODE","VNODE","DOMVNODE","isWNode","child","Boolean","type","isVNode","isDomVNode","w","widgetConstructorOrNode","properties","children","widgetConstructor","v","tag","propertiesOrChildren","deferredPropertiesCallback","Array","isArray","classes","styles","newProperties","tslib","_a","nodeClasses","nodeStyles","nodeProperties","originalProperties","ShimPromise","Promise","has","finally","onFinally","this","then","value","resolve","reason","shim_Promise","noop","destroyed","Error","Destroyable_Destroyable","[object Object]","handles","handle","_handles","push","splice","indexOf","destroy","forEach","own","regexMap","Evented_Evented","listenersMap","event","methods","globString","targetString","regex","get","RegExp","replace","set","test","isGlobMatch","method","call","listener","map","_addListener","listeners","WIDGET_BASE_TYPE","isWidgetBaseConstructor","item","_type","Registry_Registry","widgetLabel","emit","action","label","undefined","_widgetRegistry","toString","widgetCtor","emitLoadedEvent","error","injectorFactory","_injectorRegistry","invalidator","injectorItem","injector","promise","hasOwnProperty","default","isWidgetConstructorDefaultExport","hasInjector","widget_core_Registry","isObjectOrArray","reference","previousProperty","newProperty","changed","shallow","validOldProperty","validNewProperty","previousKeys","newKeys","length","some","key","auto","result","ignore","NodeEventType","widget_core_RegistryHandler","super","_registry","_registryWidgetLabelMap","_registryInjectorLabelMap","baseRegistry","delete","base","widget","define","defineInjector","globalPrecedence","_get","getFunctionName","labelMap","registries","i","registry","registeredLabels","on","widget_core_NodeHandler","_nodeMap","element","Widget","Projector","clear","lazyWidgetId","lazyWidgetIdMap","decoratorMap","builtDecoratorMap","widgetInstanceMap","boundAuto","bind","noBind","WidgetBase_WidgetBase","_initialProperties","_changedPropertyKeys","_nodeHandler","_children","_decoratorCache","_properties","_boundRenderFunc","render","_boundInvalidate","invalidate","dirty","onAttach","onDetach","nodeHandler","rendering","inputProperties","_runAfterConstructors","MetaType","_metaMap","cached","changedPropertyKeys","instanceData","_runBeforeProperties","registeredDiffPropertyNames","getDecorator","propertyNames","allProperties","checkedProperties","diffPropertyResults","runReactions","propertyName","_bindFunctionProperty","diffFunctions","reactionFunctions","executedReactions","reaction","propertyChanged","reactionRun","nodes","filteredNodes","convertedNodes","node","id","registryItem","_filterAndConvert","text","_runBeforeRenders","dNode","_runAfterRenders","decoratorKey","decoratorList","constructor","specificDecoratorList","decorators","allDecorators","instanceMap","unshift","getPrototypeOf","buildDecorators","decoratorCache","_buildDecoratorList","property","_bindFunctionPropertyMap","bindInfo","boundFunc","scope","beforeProperties","reduce","beforePropertiesFunction","beforeRenders","beforeRenderFunction","updatedRender","console","warn","afterRenders","afterRenderFunction","meta","afterRender","isDomMeta","afterConstructors","afterConstructor","pop","browserSpecificTransitionEndEventName","browserSpecificAnimationEndEventName","initialize","style","determineBrowserStyleNames","runAndCleanUp","startAnimation","finishAnimation","finished","transitionEnd","removeEventListener","addEventListener","cssTransitions","enter","enterAnimation","activeClass","enterAnimationActive","classList","add","requestAnimationFrame","remove","exit","exitAnimation","removeNode","exitAnimationActive","EMPTY_ARRAY","nodeOperations","NAMESPACE_SVG","NAMESPACE_W3","NAMESPACE_XLINK","isWNodeWrapper","isVNodeWrapper","buildPreviousProperties","domNode","current","next","diffType","attributes","events","propName","attrName","getAttribute","props","same","dnode1","dnode2","instance","findIndexOfChild","sameAs","start","createClassPropValue","filter","className","join","trim","updateAttribute","attrValue","namespace","setAttributeNS","removeAttribute","setAttribute","runEnterAnimation","transitions","runExitAnimation","removeDomNode","parentNode","removeChild","arrayFrom","arr","slice","vdom_renderer","renderer","_renderScheduled","parentInvalidate","_mountOptions","sync","merge","transition","document","body","_invalidationQueue","_processQueue","_applicationQueue","_eventMap","_instanceToWrapperMap","_parentWrapperMap","_wrapperSiblingMap","_insertBeforeMap","_afterRenderCallbacks","_deferredRenderCallbacks","_allMergedNodes","nodeOperation","propValue","previousValue","updateEvent","eventName","currentValue","previousEvent","callback","evt","target","removeOrphanedEvents","previousProperties","onlyEvents","isEvent","substr","eventCallback","renderedToWrapper","rendered","parent","currentParent","requiresInsertBefore","hasPreviousSiblings","depth","wrappedRendered","hasParentWNode","hasCurrentParentChildren","childrenWrappers","insertBefore","previousItem","renderedItem","wrapper","order","hasAnimations","nextParent","findParentWNodeWrapper","currentNode","parentWNodeWrapper","parentWrapper","findParentDomNode","parentDomNode","runDeferredProperties","processProperties","findInsertBefore","searchNode","nextSibling","setValue","domValue","onInputValue","onSelectValue","setProperties","currentProperties","nextWrapper","includesEventsAndAttributes","propNames","propCount","previousClassString","currentClassString","merged","domClasses","split","styleNames","styleCount","j","styleName","newStyleValue","tagName","lastIndexOf","previousAttributes","attrNames","attrCount","updateAttributes","_runInvalidationQueue","invalidationQueue","previouslyRendered","sort","a","b","sibling","_updateWidget","_runProcessQueue","_runDomInstructionQueue","_runCallbacks","_process","reverse","parentElement","inserted","addRoot","attached","callbacks","run","shift","requestIdleCallback","setTimeout","runAfterRenderCallbacks","runDeferredRenderCallbacks","mergeNodes","oldIndex","newIndex","currentLength","nextLength","instructions","currentWrapper","domElement","toUpperCase","mergeNodeIndex","_processMergeNodes","dom","_processOne","childNodes","createElementNS","createElement","createTextNode","_createDom","_schedule","__setProperties__","__setChildren__","__render__","_createWidget","updatedTextNode","ownerDocument","replaceChild","_updateDom","wrappers","_removeDom","_removeWidget","mount","mountOptions","wrapNodes","mergedNode","vdom","handleDecorator","handler","propertyKey","descriptor","addDecorator","registeredInjectorsMap","inject","name","getProperties","getInjector","registeredInjectors","diffProperty","diffFunction","reactionFunction","THEME_KEY","INJECTED_THEME_KEY","Themed_theme","theme","ThemedMixin","Base","Themed","_registeredBaseThemeKeys","_recalculateClasses","_theme","_recalculateThemeClasses","_getThemeClass","extraClasses","themeClassName","_baseThemeClassesReverseLookup","resultClassNames","_classes","classNames","extraClass","_registeredBaseTheme","baseThemes","finalBaseTheme","baseTheme","currentClassNames","baseClass","createThemeClassesLookup","themeKey","computed","Math","pow","from","of","copyWithin","fill","find","findIndex","array_includes","CustomElementChildType","customElement","childType","DOJO","registryFactory","__customElementDescriptor","Menu_Menu","data","_selectedId","onSelected","items","index","_onSelected","selected","menu_m","__decorate","MenuItem_MenuItem","menuItem_m","onclick","_onClick","title","MenuItem_decorate","main_Example","log","main_element","getElementById","__WEBPACK_AMD_DEFINE_RESULT__","__extends","__assign","__rest","__param","__metadata","__awaiter","__generator","__exportStar","__values","__read","__spread","__await","__asyncGenerator","__asyncDelegator","__asyncValues","__makeTemplateObject","factory","root","self","createExporter","exports","previous","create","defineProperty","__esModule","exporter","extendStatics","setPrototypeOf","__proto__","d","p","__","t","s","n","arguments","e","desc","c","r","Reflect","decorate","paramIndex","decorator","metadataKey","metadataValue","metadata","thisArg","_arguments","P","generator","reject","fulfilled","step","rejected","done","apply","f","y","g","_","sent","trys","ops","verb","throw","return","Symbol","iterator","op","TypeError","m","o","ar","concat","asyncIterator","q","resume","fulfill","settle","cooked","module"," _key","menuContainer","home","logo"],"mappings":";;;;;;;;kKAmDO,IAAIA,EASAC,EAWAC,EAOAC,EAUAC,EASAC,EAOAC,EAOAC,EAgBAC,EAcAC,EAGVT,EAAgBU,EAAA,QAAOC,OAAOX,cAC9BC,EAAMS,EAAA,QAAOC,OAAOV,IAEpBC,EAAcU,OAAAC,EAAA,EAAAD,CAAWF,EAAA,QAAOC,OAAOG,UAAUZ,aACjDC,EAAWS,OAAAC,EAAA,EAAAD,CAAWF,EAAA,QAAOC,OAAOG,UAAUX,UAC9CC,EAAWQ,OAAAC,EAAA,EAAAD,CAAWF,EAAA,QAAOC,OAAOG,UAAUV,UAC9CC,EAAYO,OAAAC,EAAA,EAAAD,CAAWF,EAAA,QAAOC,OAAOG,UAAUT,WAC/CC,EAASM,OAAAC,EAAA,EAAAD,CAAWF,EAAA,QAAOC,OAAOG,UAAUR,QAC5CC,EAAaK,OAAAC,EAAA,EAAAD,CAAWF,EAAA,QAAOC,OAAOG,UAAUP,YA+KhDC,EAASI,OAAAC,EAAA,EAAAD,CAAWF,EAAA,QAAOC,OAAOG,UAAUN,QAC5CC,EAAWG,OAAAC,EAAA,EAAAD,CAAWF,EAAA,QAAOC,OAAOG,UAAUL,UC9PxC,IAAIM,EASAC,EAOAC,EAMAC,EAOAC,EAMAC,EAIAC,EAEAC,EAEAC,EAEY,CACtB,MAAMC,EAAed,EAAA,QAAOE,OAC5BG,EAASS,EAAaC,OACtBT,EAA2BQ,EAAaR,yBACxCC,EAAsBO,EAAaP,oBACnCC,EAAwBM,EAAaN,sBACrCC,EAAKK,EAAaL,GAClBC,EAAOI,EAAaJ,KAmDK,CACzB,MAAMI,EAAed,EAAA,QAAOE,OAC5BS,EAA4BG,EAAaH,0BACzCC,EAAUE,EAAaF,QACvBC,EAASC,EAAaD,OCzDhB,IAAIG,EAAsBhB,EAAA,QAAOgB,IA0GzB,IAAAC,EAAA,EC/JR,IAAIC,EAA8BlB,EAAA,QAAOkB,QAuIjC,IAAAC,EAAA,UC1LR,MAAMC,EAAQ,eAKRC,EAAQ,eAKRC,EAAW,kBAKjB,SAAAC,EACNC,GAEA,OAAOC,QAAQD,IAAmB,IAAVA,GAAmC,iBAAVA,GAAsBA,EAAME,OAASN,GAMhF,SAAAO,EAAiBH,GACvB,OAAOC,QACND,IAAmB,IAAVA,GAAmC,iBAAVA,IAAuBA,EAAME,OAASL,GAASG,EAAME,OAASJ,IAO3F,SAAAM,EAAoBJ,GAC1B,OAAOC,QAAQD,IAAmB,IAAVA,GAAmC,iBAAVA,GAAsBA,EAAME,OAASJ,GAqGhF,SAAAO,EACNC,EACAC,EACAC,GAQA,OANIT,EAAQO,KACXC,EAAU7B,OAAAa,OAAA,GAASe,EAAwBC,WAAwBA,GACnEC,EAAWA,GAAsBF,EAAwBE,SACzDF,EAA0BA,EAAwBG,mBAG5C,CACND,SAAUA,GAAY,GACtBC,kBAAmBH,EACnBC,aACAL,KAAMN,GAYD,SAAAc,EACNC,EACAC,EAA8E,GAC9EJ,GAEA,IACIK,EADAN,EAA0DK,EAa9D,GAVIE,MAAMC,QAAQH,KACjBJ,EAAWI,EACXL,EAAa,IAGY,mBAAfA,IACVM,EAA6BN,EAC7BA,EAAa,IAGVJ,EAAQQ,GAAM,CACjB,IAAIK,QAAEA,EAAU,GAAEC,OAAEA,EAAS,IAAyBV,EAArBW,EAAAC,EAAA,OAAAZ,EAAA,sBAC7Ba,EAAAT,EAAAJ,YAAES,QAASK,EAAc,GAAIJ,OAAQK,EAAa,IAAEF,EAAEG,EAAAJ,EAAA,OAAAC,EAAA,sBAC1DC,EAAcP,MAAMC,QAAQM,GAAeA,EAAc,CAACA,GAC1DL,EAAUF,MAAMC,QAAQC,GAAWA,EAAU,CAACA,GAC9CC,EAAMvC,OAAAa,OAAA,GAAQ+B,EAAeL,GAC7BV,EAAU7B,OAAAa,OAAA,GAAQgC,EAAmBL,EAAa,CAAEF,QAAS,IAAIK,KAAgBL,GAAUC,WAC3FT,EAAWA,GAAsBG,EAAIH,SACrCG,EAAMA,EAAIA,IAGX,MAAO,CACNA,MACAE,6BACAW,mBAAoB,GACpBhB,WACAD,aACAL,KAAML,QC/LD,IAAI4B,EAA8BjD,EAAA,QAAOkD,QA+O3ChD,OAAAiD,EAAA,QAAAjD,CAAI,4BACRF,EAAA,QAAOkD,QAAQ9C,UAAUgD,QAAU,SAElCC,GAEA,OAAOC,KAAKC,KACXF,GAAa,CAAEG,GAAaN,QAAQO,QAAQJ,KAAaE,KAAK,IAAMC,IACpEH,GACC,CAAEK,GACDR,QAAQO,QAAQJ,KAAaE,KAAK,KACjC,MAAMG,QAMG,IAAAC,EAAA,ECzQf,SAAAC,IACC,OAAOD,EAAQF,SAAQ,GAMxB,SAAAI,IACC,MAAM,IAAIC,MAAM,iCAGV,MAAMC,EASZC,cACCV,KAAKW,QAAU,GAUhBD,IAAIE,GACH,MAAQD,QAASE,GAAab,KAE9B,OADAa,EAASC,KAAKF,GACP,CACNF,UACCG,EAASE,OAAOF,EAASG,QAAQJ,IACjCA,EAAOK,YAUVP,UACC,OAAO,IAAIL,EAASF,IACnBH,KAAKW,QAAQO,QAASN,IACrBA,GAAUA,EAAOK,SAAWL,EAAOK,YAEpCjB,KAAKiB,QAAUX,EACfN,KAAKmB,IAAMZ,EACXJ,GAAQ,MChEX,MAAMiB,EAAW,IAAIzD,EA4Df,MAAA0D,UAIIZ,EAJVC,kCAYWV,KAAAsB,aAA0D,IAAI3D,EASxE+C,KAAKa,GACJvB,KAAKsB,aAAaJ,QAAQ,CAACM,EAASpD,MA/DhC,SAAsBqD,EAA6BC,GACxD,GAA4B,iBAAjBA,GAAmD,iBAAfD,IAAwD,IAA7BA,EAAWT,QAAQ,KAAa,CACzG,IAAIW,EAOJ,OANIP,EAASvB,IAAI4B,GAChBE,EAAQP,EAASQ,IAAIH,IAErBE,EAAQ,IAAIE,WAAWJ,EAAWK,QAAQ,MAAO,UACjDV,EAASW,IAAIN,EAAYE,IAEnBA,EAAMK,KAAKN,GAElB,OAAOD,IAAeC,GAqDjBO,CAAY7D,EAAamD,EAAMnD,OAClC,IAAIoD,GAASN,QAASgB,IACrBA,EAAOC,KAAKnC,KAAMuB,OA0BtBb,GAAGtC,EAAWgE,GACb,GAAIpD,MAAMC,QAAQmD,GAAW,CAC5B,MAAMzB,EAAUyB,EAASC,IAAKD,GAAapC,KAAKsC,aAAalE,EAAMgE,IACnE,MAAO,CACN1B,UACCC,EAAQO,QAASN,GAAWA,EAAOK,aAItC,OAAOjB,KAAKsC,aAAalE,EAAMgE,GAGxB1B,aAAatC,EAAmBgE,GACvC,MAAMG,EAAYvC,KAAKsB,aAAaM,IAAIxD,IAAS,GAGjD,OAFAmE,EAAUzB,KAAKsB,GACfpC,KAAKsB,aAAaS,IAAI3D,EAAMmE,GACrB,CACNtB,QAAS,KACR,MAAMsB,EAAYvC,KAAKsB,aAAaM,IAAIxD,IAAS,GACjDmE,EAAUxB,OAAOwB,EAAUvB,QAAQoB,GAAW,MChH3C,MAAMI,EAAmB,qBAiE1B,SAAAC,EAAiEC,GACtE,OAAOvE,QAAQuE,GAAQA,EAAKC,QAAUH,GAejC,MAAAI,UAAwBvB,EAWrBX,gBAAgBmC,EAA4BH,GACnD1C,KAAK8C,KAAK,CACT1E,KAAMyE,EACNE,OAAQ,SACRL,SAIKhC,OAAOsC,EAAsBN,GAKnC,QAJ6BO,IAAzBjD,KAAKkD,kBACRlD,KAAKkD,gBAAkB,IAAIvF,GAGxBqC,KAAKkD,gBAAgBrD,IAAImD,GAC5B,MAAM,IAAIxC,iDAAiDwC,EAAMG,eAGlEnD,KAAKkD,gBAAgBnB,IAAIiB,EAAON,GAE5BA,aAAgBrC,EACnBqC,EAAKzC,KACHmD,IACApD,KAAKkD,gBAAiBnB,IAAIiB,EAAOI,GACjCpD,KAAKqD,gBAAgBL,EAAOI,GACrBA,GAEPE,IACA,MAAMA,IAGEb,EAAwBC,IAClC1C,KAAKqD,gBAAgBL,EAAON,GAIvBhC,eAAesC,EAAsBO,GAK3C,QAJ+BN,IAA3BjD,KAAKwD,oBACRxD,KAAKwD,kBAAoB,IAAI7F,GAG1BqC,KAAKwD,kBAAkB3D,IAAImD,GAC9B,MAAM,IAAIxC,mDAAmDwC,EAAMG,eAGpE,MAAMM,EAAc,IAAIpC,EAElBqC,EAA6B,CAClCC,SAAUJ,EAAgB,IAAME,EAAYX,KAAK,CAAE1E,KAAM,gBACzDqF,eAGDzD,KAAKwD,kBAAkBzB,IAAIiB,EAAOU,GAClC1D,KAAKqD,gBAAgBL,EAAOU,GAGtBhD,IAAyDsC,GAC/D,IAAKhD,KAAKkD,kBAAoBlD,KAAKH,IAAImD,GACtC,OAAO,KAGR,MAAMN,EAAO1C,KAAKkD,gBAAgBtB,IAAIoB,GAEtC,GAAIP,EAA2BC,GAC9B,OAAOA,EAGR,GAAIA,aAAgBrC,EACnB,OAAO,KAGR,MAAMuD,EAA0ClB,IAkBhD,OAjBA1C,KAAKkD,gBAAgBnB,IAAIiB,EAAOY,GAEhCA,EAAQ3D,KACNmD,IAjGE,SAA8CV,GACnD,OAAOvE,QACNuE,GACCA,EAAKmB,eAAe,eACpBnB,EAAKmB,eAAe,YACpBpB,EAAwBC,EAAKoB,UA6FxBC,CAAoCX,KACvCA,EAAaA,EAAWU,SAGzB9D,KAAKkD,gBAAiBnB,IAAIiB,EAAOI,GACjCpD,KAAKqD,gBAAgBL,EAAOI,GACrBA,GAEPE,IACA,MAAMA,IAID,KAGD5C,YAAesC,GACrB,OAAKhD,KAAKwD,mBAAsBxD,KAAKgE,YAAYhB,GAI1ChD,KAAKwD,kBAAkB5B,IAAIoB,GAH1B,KAMFtC,IAAIsC,GACV,OAAO7E,QAAQ6B,KAAKkD,iBAAmBlD,KAAKkD,gBAAgBrD,IAAImD,IAG1DtC,YAAYsC,GAClB,OAAO7E,QAAQ6B,KAAKwD,mBAAqBxD,KAAKwD,kBAAkB3D,IAAImD,KAIvD,IAAAiB,EAAA,EC7Nf,SAAAC,EAAyBhE,GACxB,MAAiD,oBAA1CtD,OAAOE,UAAUqG,SAAShB,KAAKjC,IAAgClB,MAAMC,QAAQiB,GAiB9E,SAAAiE,EAAmBC,EAAuBC,GAChD,MAAO,CACNC,QAASF,IAAqBC,EAC9BnE,MAAOmE,GAIF,SAAAE,EAAiBH,EAAuBC,GAC9C,IAAIC,GAAU,EAEd,MAAME,EAAmBJ,GAAoBF,EAAgBE,GACvDK,EAAmBJ,GAAeH,EAAgBG,GAExD,IAAKG,IAAqBC,EACzB,MAAO,CACNH,SAAS,EACTpE,MAAOmE,GAIT,MAAMK,EAAe9H,OAAOQ,KAAKgH,GAC3BO,EAAU/H,OAAOQ,KAAKiH,GAS5B,MAAO,CACNC,QAPAA,EADGI,EAAaE,SAAWD,EAAQC,QAGzBD,EAAQE,KAAMC,GAChBT,EAAYS,KAASV,EAAiBU,IAK9C5E,MAAOmE,GAIF,SAAAU,EAAcX,EAAuBC,GAC3C,IAAIW,EAYJ,OATEA,EAFyB,mBAAhBX,EACNA,EAAY1B,QAAUH,EAChB2B,EAAUC,EAAkBC,GA/CjC,SAAgBD,EAAuBC,GAC7C,MAAO,CACNC,SAAS,EACTpE,MAAOmE,GA8CGY,CAAOb,EAAkBC,GAEzBH,EAAgBG,GACjBE,EAAQH,EAAkBC,GAE1BF,EAAUC,EAAkBC,GC4BxB,ICvFHa,EDuFGC,GAvFT,cAA+B9D,EAMpCX,cACC0E,QANOpF,KAAAqF,UAAY,IAAIzC,EAChB5C,KAAAsF,wBAA0D,IAAI5H,EAC9DsC,KAAAuF,0BAA4D,IAAI7H,EAKvEsC,KAAKmB,IAAInB,KAAKqF,WAQdrF,KAAKmB,IAAI,CAAEF,QAPK,KACXjB,KAAKwF,eACRxF,KAAKsF,wBAAwBG,OAAOzF,KAAKwF,cACzCxF,KAAKuF,0BAA0BE,OAAOzF,KAAKwF,cAC3CxF,KAAKwF,kBAAevC,MAMvByC,SAAgBF,GACXxF,KAAKwF,eACRxF,KAAKsF,wBAAwBG,OAAOzF,KAAKwF,cACzCxF,KAAKuF,0BAA0BE,OAAOzF,KAAKwF,eAE5CxF,KAAKwF,aAAeA,EAGd9E,OAAOsC,EAAsB2C,GACnC3F,KAAKqF,UAAUO,OAAO5C,EAAO2C,GAGvBjF,eAAesC,EAAsBW,GAC3C3D,KAAKqF,UAAUQ,eAAe7C,EAAOW,GAG/BjD,IAAIsC,GACV,OAAOhD,KAAKqF,UAAUxF,IAAImD,IAAU7E,QAAQ6B,KAAKwF,cAAgBxF,KAAKwF,aAAa3F,IAAImD,IAGjFtC,YAAYsC,GAClB,OAAOhD,KAAKqF,UAAUrB,YAAYhB,IAAU7E,QAAQ6B,KAAKwF,cAAgBxF,KAAKwF,aAAaxB,YAAYhB,IAGjGtC,IACNsC,EACA8C,GAA4B,GAE5B,OAAO9F,KAAK+F,KAAK/C,EAAO8C,EAAkB,MAAO9F,KAAKsF,yBAGhD5E,YAAesC,EAAsB8C,GAA4B,GACvE,OAAO9F,KAAK+F,KAAK/C,EAAO8C,EAAkB,cAAe9F,KAAKuF,2BAGvD7E,KACPsC,EACA8C,EACAE,EACAC,GAEA,MAAMC,EAAaJ,EAAmB,CAAC9F,KAAKwF,aAAcxF,KAAKqF,WAAa,CAACrF,KAAKqF,UAAWrF,KAAKwF,cAClG,IAAK,IAAIW,EAAI,EAAGA,EAAID,EAAWtB,OAAQuB,IAAK,CAC3C,MAAMC,EAAgBF,EAAWC,GACjC,IAAKC,EACJ,SAED,MAAM1D,EAAO0D,EAASJ,GAAiBhD,GACjCqD,EAAmBJ,EAASrE,IAAIwE,IAAa,GACnD,GAAI1D,EACH,OAAOA,EACD,IAAyC,IAArC2D,EAAiBrF,QAAQgC,GAAe,CAClD,MAAMpC,EAASwF,EAASE,GAAGtD,EAAQzB,IAEhB,WAAjBA,EAAMwB,QACL/C,KAAagG,GAAiBhD,EAAO8C,KAAsBvE,EAAMmB,MAElE1C,KAAK8C,KAAK,CAAE1E,KAAM,iBAGpB4B,KAAKmB,IAAIP,GACTqF,EAASlE,IAAIqE,EAAU,IAAIC,EAAkBrD,KAG/C,OAAO,QCnFT,SAAYkC,GACXA,EAAA,sBACAA,EAAA,gBAFD,CAAYA,MAAa,KAuCV,IAAAqB,GA7BT,cAA2BlF,EAAjCX,kCACSV,KAAAwG,SAAW,IAAI7I,EAEhB+C,IAAIoE,GACV,OAAO9E,KAAKwG,SAAS5E,IAAIkD,GAGnBpE,IAAIoE,GACV,OAAO9E,KAAKwG,SAAS3G,IAAIiF,GAGnBpE,IAAI+F,EAAkB3B,GAC5B9E,KAAKwG,SAASzE,IAAI+C,EAAK2B,GACvBzG,KAAK8C,KAAK,CAAE1E,KAAM0G,IAGZpE,UACNV,KAAK8C,KAAK,CAAE1E,KAAM8G,EAAcwB,SAG1BhG,eACNV,KAAK8C,KAAK,CAAE1E,KAAM8G,EAAcyB,YAG1BjG,QACNV,KAAKwG,SAASI,UCAhB,IAAIC,GAAe,EACnB,MAAMC,GAAkB,IAAIjJ,EACtBkJ,GAAe,IAAIlJ,EACnBmJ,GAAoB,IAAInJ,EACjBoJ,GAAoB,IAAIpJ,EAI/BqJ,GAAYnC,EAAKoC,KAAK,MAEfC,GAAS,iBAuBhB,MAAAC,GAmDL3G,cArCQV,KAAAsH,oBAAqB,EAUrBtH,KAAAuH,qBAAiC,GAoBjCvH,KAAAwH,aAA4B,IAAIjB,GAEhCvG,KAAAa,SAAqB,GAM5Bb,KAAKyH,UAAY,GACjBzH,KAAK0H,gBAAkB,IAAI/J,EAC3BqC,KAAK2H,YAAc,GACnB3H,KAAK4H,iBAAmB5H,KAAK6H,OAAOV,KAAKnH,MACzCA,KAAK8H,iBAAmB9H,KAAK+H,WAAWZ,KAAKnH,MAE7CiH,GAAkBlF,IAAI/B,KAAM,CAC3BgI,OAAO,EACPC,SAAU,KACTjI,KAAKiI,YAENC,SAAU,KACTlI,KAAKkI,WACLlI,KAAKiB,WAENkH,YAAanI,KAAKwH,aAClBY,WAAW,EACXC,gBAAiB,KAGlBrI,KAAKmB,IAAI,CACRF,QAAS,KACRgG,GAAkBxB,OAAOzF,MACzBA,KAAKwH,aAAaZ,QAClB5G,KAAKwH,aAAavG,aAIpBjB,KAAKsI,wBAGI5H,KAAyB6H,QACZtF,IAAlBjD,KAAKwI,WACRxI,KAAKwI,SAAW,IAAI7K,GAErB,IAAI8K,EAASzI,KAAKwI,SAAS5G,IAAI2G,GAW/B,OAVKE,IACJA,EAAS,IAAIF,EAAS,CACrBR,WAAY/H,KAAK8H,iBACjBK,YAAanI,KAAKwH,aAClBL,KAAMnH,OAEPA,KAAKmB,IAAIsH,GACTzI,KAAKwI,SAASzG,IAAIwG,EAAUE,IAGtBA,EAGE/H,YAIAA,YAIVjC,iBACC,OAAOuB,KAAK2H,YAGbe,0BACC,MAAO,IAAI1I,KAAKuH,sBAGV7G,kBAAkBhB,EAAwCyH,GAChE,MAAMwB,EAAe1B,GAAkBrF,IAAI5B,MACvC2I,IACHA,EAAaN,gBAAkB3I,GAEhC,MAAMjB,EAAauB,KAAK4I,qBAAqBlJ,GACvCmJ,EAA8B7I,KAAK8I,aAAa,0BAChDJ,EAAgC,GAChCK,EAAgBnM,OAAOQ,KAAKqB,GAElC,IAAgC,IAA5BuB,KAAKsH,oBAAuE,IAAvCuB,EAA4BjE,OAAc,CAClF,MAAMoE,EAAgB,IAAID,KAAkBnM,OAAOQ,KAAK4C,KAAK2H,cACvDsB,EAAyC,GACzCC,EAA2B,GACjC,IAAIC,GAAe,EAEnB,IAAK,IAAIhD,EAAI,EAAGA,EAAI6C,EAAcpE,OAAQuB,IAAK,CAC9C,MAAMiD,EAAeJ,EAAc7C,GACnC,IAAiD,IAA7C8C,EAAkBjI,QAAQoI,GAC7B,SAEDH,EAAkBnI,KAAKsI,GACvB,MAAMhF,EAAmBpE,KAAK2H,YAAYyB,GACpC/E,EAAcrE,KAAKqJ,sBAAsB5K,EAAW2K,GAAejC,GACzE,IAA2D,IAAvD0B,EAA4B7H,QAAQoI,GAAsB,CAC7DD,GAAe,EACf,MAAMG,EAAgBtJ,KAAK8I,6BAA6BM,KACxD,IAAK,IAAIjD,EAAI,EAAGA,EAAImD,EAAc1E,OAAQuB,IAAK,CAC9C,MAAMnB,EAASsE,EAAcnD,GAAG/B,EAAkBC,GAC9CW,EAAOV,UAA0D,IAA/CoE,EAAoB1H,QAAQoI,IACjDV,EAAoB5H,KAAKsI,GAEtBA,KAAgB3K,IACnByK,EAAoBE,GAAgBpE,EAAO9E,YAGvC,CACN,MAAM8E,EAASkC,GAAU9C,EAAkBC,GACvCW,EAAOV,UAA0D,IAA/CoE,EAAoB1H,QAAQoI,IACjDV,EAAoB5H,KAAKsI,GAEtBA,KAAgB3K,IACnByK,EAAoBE,GAAgBpE,EAAO9E,QAK9C,GAAIiJ,EAAc,CACjB,MAAMI,EAA8CvJ,KAAK8I,aAAa,gBAChEU,EAAgC,GACtCD,EAAkBrI,QAAQ,EAAGuI,WAAUL,mBACtC,MAAMM,GAAiE,IAA/ChB,EAAoB1H,QAAQoI,GAC9CO,GAAuD,IAAzCH,EAAkBxI,QAAQyI,GAC1CC,IAAoBC,IACvBF,EAAStH,KAAKnC,KAAMA,KAAK2H,YAAauB,GACtCM,EAAkB1I,KAAK2I,MAI1BzJ,KAAK2H,YAAcuB,EACnBlJ,KAAKuH,qBAAuBmB,MACtB,CACN1I,KAAKsH,oBAAqB,EAC1B,IAAK,IAAInB,EAAI,EAAGA,EAAI4C,EAAcnE,OAAQuB,IAAK,CAC9C,MAAMiD,EAAeL,EAAc5C,GACK,mBAA7B1H,EAAW2K,GACrB3K,EAAW2K,GAAgBpJ,KAAKqJ,sBAAsB5K,EAAW2K,GAAejC,GAEhFuB,EAAoB5H,KAAKsI,GAG3BpJ,KAAKuH,qBAAuBmB,EAC5B1I,KAAK2H,YAAW/K,OAAAa,OAAA,GAAQgB,GAGrBuB,KAAKuH,qBAAqB3C,OAAS,GACtC5E,KAAK+H,aAIPrJ,eACC,OAAOsB,KAAKyH,UAGN/G,gBAAgBhC,IAClBsB,KAAKyH,UAAU7C,OAAS,GAAKlG,EAASkG,OAAS,KAClD5E,KAAKyH,UAAY/I,EACjBsB,KAAK+H,cAOCrH,kBAAkBkJ,GACzB,MAAM3K,EAAUD,MAAMC,QAAQ2K,GACxBC,EAAgB7K,MAAMC,QAAQ2K,GAASA,EAAQ,CAACA,GAChDE,EAAoC,GAC1C,IAAK,IAAI3D,EAAI,EAAGA,EAAI0D,EAAcjF,OAAQuB,IAAK,CAC9C,MAAM4D,EAAOF,EAAc1D,GAC3B,GAAK4D,IAAiB,IAATA,EAGb,GAAoB,iBAATA,EAAX,CAIA,GAAI1L,EAAQ0L,IAASA,EAAKhL,2BAA4B,CACrD,MAAMN,EAAasL,EAAKhL,4BAA2B,GACnDgL,EAAKrK,mBAAqBqK,EAAKtL,WAC/BsL,EAAKtL,WAAU7B,OAAAa,OAAA,GAAQgB,EAAesL,EAAKtL,YAE5C,GAAIR,EAAQ8L,KAAUtH,EAAwBsH,EAAKpL,mBAAoB,CACtE,GAAsC,mBAA3BoL,EAAKpL,kBAAkC,CACjD,IAAIqL,EAAKlD,GAAgBlF,IAAImI,EAAKpL,mBAC7BqL,IACJA,mBAAsBnD,OACtBC,GAAgB/E,IAAIgI,EAAKpL,kBAAmBqL,GAC5ChK,KAAKoG,SAASR,OAAOoE,EAAID,EAAKpL,oBAE/BoL,EAAKpL,kBAAoBqL,OACnB,GAzPWtH,EAyPMqH,EAAKpL,kBAxPzBR,QAAQuE,GAAQA,EAAKM,OAwPwB,CAChD,MAAMA,MAAEA,EAAKiH,aAAEA,GAAiBF,EAAKpL,kBAChCqB,KAAKoG,SAASvG,IAAImD,IACtBhD,KAAKoG,SAASR,OAAO5C,EAAOiH,GAE7BF,EAAKpL,kBAAoBqE,EAG1B+G,EAAKpL,kBACJqB,KAAKoG,SAASxE,IAAgBmI,EAAKpL,oBAAsBoL,EAAKpL,kBAE3DoL,EAAK5C,OACT4C,EAAK5C,KAAOnH,MAEb8J,EAAehJ,KAAKiJ,GAChBA,EAAKrL,UAAYqL,EAAKrL,SAASkG,SAClCmF,EAAKrL,SAAWsB,KAAKkK,kBAAkBH,EAAKrL,gBAjC5CoL,EAAehJ,KAjPX,CACNjC,IAAK,GACLJ,WAAY,GACZC,cAAUuE,EACVkH,QA6OkCJ,IA5OlC3L,KAAML,IAIR,IAAsB2E,EA4QpB,OAAOzD,EAAU6K,EAAiBA,EAAe,GAG3CpJ,aACN,MAAMiI,EAAe1B,GAAkBrF,IAAI5B,MACvC2I,IACHA,EAAaX,OAAQ,GAEtB,MAAMH,EAAS7H,KAAKoK,oBACdC,EAAQrK,KAAKkK,kBAAkBlK,KAAKsK,iBAAiBzC,MAE3D,OADA7H,KAAKwH,aAAaZ,QACXyD,EAGD3J,aACN,MAAMiI,EAAe1B,GAAkBrF,IAAI5B,MACvC2I,GAAgBA,EAAaZ,YAChCY,EAAaZ,aAILrH,SACT,OAAO9B,EAAE,MAAO,GAAIoB,KAAKtB,UAShBgC,aAAa6J,EAAsBrK,GAE5C,GADAA,EAAQlB,MAAMC,QAAQiB,GAASA,EAAQ,CAACA,GACpCF,KAAK6D,eAAe,eAAgB,CACvC,IAAI2G,EAAgBzD,GAAanF,IAAI5B,KAAKyK,aACrCD,IACJA,EAAgB,IAAI7M,EACpBoJ,GAAahF,IAAI/B,KAAKyK,YAAaD,IAGpC,IAAIE,EAAwBF,EAAc5I,IAAI2I,GACzCG,IACJA,EAAwB,GACxBF,EAAczI,IAAIwI,EAAcG,IAEjCA,EAAsB5J,QAAQZ,OACxB,CACN,MAAMyK,EAAa3K,KAAK8I,aAAayB,GACrCvK,KAAK0H,gBAAgB3F,IAAIwI,EAAc,IAAII,KAAezK,KAWpDQ,oBAAoB6J,GAC3B,MAAMK,EAAgB,GAEtB,IAAIH,EAAczK,KAAKyK,YAEvB,KAAOA,GAAa,CACnB,MAAMI,EAAc9D,GAAanF,IAAI6I,GACrC,GAAII,EAAa,CAChB,MAAMF,EAAaE,EAAYjJ,IAAI2I,GAE/BI,GACHC,EAAcE,WAAWH,GAI3BF,EAAc7N,OAAOmO,eAAeN,GAGrC,MAAMO,EAAkBhE,GAAkBpF,IAAI5B,KAAKyK,cAAgB,IAAI9M,EAGvE,OAFAqN,EAAgBjJ,IAAIwI,EAAcK,GAClC5D,GAAkBjF,IAAI/B,KAAKyK,YAAaO,GACjCJ,EASElK,aAAa6J,GACtB,IAAIU,EAAiBjE,GAAkBpF,IAAI5B,KAAKyK,aAC5CG,EACH5K,KAAK0H,gBAAgB9F,IAAI2I,IAAkBU,GAAkBA,EAAerJ,IAAI2I,GAEjF,YAAsBtH,IAAlB2H,EACIA,GAGRA,EAAgB5K,KAAKkL,oBAAoBX,GAEzCK,EAAgB,IAAIA,GACpB5K,KAAK0H,gBAAgB3F,IAAIwI,EAAcK,GAChCA,GAQAlK,sBAAsByK,EAAehE,GAC5C,GAAwB,mBAAbgE,IAA4BA,EAAS/D,MAAiD,IAAtC3E,EAAwB0I,GAAqB,MACjElI,IAAlCjD,KAAKoL,2BACRpL,KAAKoL,yBAA2B,IAAIvN,GAKrC,MAAMwN,EAAuCrL,KAAKoL,yBAAyBxJ,IAAIuJ,IAAa,GAC5F,IAAIG,UAAEA,EAASC,MAAEA,GAAUF,EAM3B,YAJkBpI,IAAdqI,GAA2BC,IAAUpE,IACxCmE,EAAYH,EAAShE,KAAKA,GAC1BnH,KAAKoL,yBAAyBrJ,IAAIoJ,EAAU,CAAEG,YAAWC,MAAOpE,KAE1DmE,EAER,OAAOH,EAGR/E,eAMC,YALuBnD,IAAnBjD,KAAKqF,YACRrF,KAAKqF,UAAY,IAAIF,GACrBnF,KAAKmB,IAAInB,KAAKqF,WACdrF,KAAKmB,IAAInB,KAAKqF,UAAUiB,GAAG,aAActG,KAAK8H,oBAExC9H,KAAKqF,UAGL3E,qBAAqBjC,GAC5B,MAAM+M,EAAuCxL,KAAK8I,aAAa,oBAC/D,OAAI0C,EAAiB5G,OAAS,EACtB4G,EAAiBC,OACvB,CAAChN,EAAYiN,IACN9O,OAAAa,OAAA,GAAMgB,EAAeiN,EAAyBvJ,KAAKnC,KAAMvB,IAC/D7B,OAAAa,OAAA,GACIgB,IAGAA,EAMAiC,oBACP,MAAMiL,EAAgB3L,KAAK8I,aAAa,gBAExC,OAAI6C,EAAc/G,OAAS,EACnB+G,EAAcF,OAAO,CAAC5D,EAAgB+D,KAC5C,MAAMC,EAAgBD,EAAqBzJ,KAAKnC,KAAM6H,EAAQ7H,KAAK2H,YAAa3H,KAAKyH,WACrF,OAAKoE,IACJC,QAAQC,KAAK,yEACNlE,IAGN7H,KAAK4H,kBAEF5H,KAAK4H,iBAQLlH,iBAAiB2J,GACxB,MAAM2B,EAAehM,KAAK8I,aAAa,eAcvC,OAZIkD,EAAapH,OAAS,IACzByF,EAAQ2B,EAAaP,OAAO,CAACpB,EAAwB4B,IAC7CA,EAAoB9J,KAAKnC,KAAMqK,GACpCA,SAGkBpH,IAAlBjD,KAAKwI,UACRxI,KAAKwI,SAAStH,QAASgL,KAlc1B,SAAmBA,GAClB,OAAO/N,QAAQ+N,EAAKC,cAkcjBC,CAAUF,IAASA,EAAKC,gBAInB9B,EAGA3J,wBACP,MAAM2L,EAAoBrM,KAAK8I,aAAa,oBAExCuD,EAAkBzH,OAAS,GAC9ByH,EAAkBnL,QAASoL,GAAqBA,EAAiBnK,KAAKnC,OAI9DU,IAAIE,GACbZ,KAAKa,SAASC,KAAKF,GAGVF,UACT,KAAOV,KAAKa,SAAS+D,OAAS,GAAG,CAChC,MAAMhE,EAASZ,KAAKa,SAAS0L,MACzB3L,GACHA,EAAOK,YA/cHoG,GAAA1E,MAAQH,EC/EhB,IAAIgK,GAAwC,GACxCC,GAAuC,GAc3C,SAAAC,GAAoBjG,GAC0B,KAAzCgG,IAbL,SAAoChG,GACnC,GAAI,qBAAsBA,EAAQkG,MACjCH,GAAwC,sBACxCC,GAAuC,yBACjC,MAAI,eAAgBhG,EAAQkG,OAAS,kBAAmBlG,EAAQkG,OAItE,MAAM,IAAInM,MAAM,iCAHhBgM,GAAwC,gBACxCC,GAAuC,gBAQvCG,CAA2BnG,GAI7B,SAAAoG,GAAuBpG,EAAsBqG,EAA4BC,GACxEL,GAAWjG,GAEX,IAAIuG,GAAW,EAEXC,EAAgB,WACdD,IACJA,GAAW,EACXvG,EAAQyG,oBAAoBV,GAAuCS,GACnExG,EAAQyG,oBAAoBT,GAAsCQ,GAElEF,MAIFD,IAEArG,EAAQ0G,iBAAiBV,GAAsCQ,GAC/DxG,EAAQ0G,iBAAiBX,GAAuCS,GAwClD,IAAAG,GAAA,CACdC,MApBD,SAAetD,EAAmBtL,EAA6B6O,GAC9D,MAAMC,EAAc9O,EAAW+O,yBAA2BF,WAE1DT,GACC9C,EACA,KACCA,EAAK0D,UAAUC,IAAIJ,GAEnBK,sBAAsB,WACrB5D,EAAK0D,UAAUC,IAAIH,MAGrB,KACCxD,EAAK0D,UAAUG,OAAON,GACtBvD,EAAK0D,UAAUG,OAAOL,MAOxBM,KAvCD,SAAc9D,EAAmBtL,EAA6BqP,EAAuBC,GACpF,MAAMR,EAAc9O,EAAWuP,wBAA0BF,WAEzDjB,GACC9C,EACA,KACCA,EAAK0D,UAAUC,IAAII,GAEnBH,sBAAsB,WACrB5D,EAAK0D,UAAUC,IAAIH,MAGrB,KACCQ,QCoGH,MAAME,GAA8B,GAC9BC,GAAiB,CAAC,QAAS,OAAQ,iBAAkB,SAErDC,GAAgBC,6BAChBC,GAAkBD,+BAExB,SAAAE,GAAwBpQ,GACvB,OAAOA,GAASD,EAAQC,EAAM6L,MAG/B,SAAAwE,GAAwBrQ,GACvB,QAASA,GAASG,EAAQH,EAAM6L,MAyBjC,SAAAyE,GAAiCC,EAAcC,EAAuBC,GACrE,MACC5E,MAAM6E,SAAEA,EAAQnQ,WAAEA,EAAUoQ,WAAEA,IAC3BH,EACJ,IAAKE,GAAyB,SAAbA,EAChB,MAAO,CACNnQ,WAAYiQ,EAAQ3E,KAAKtL,WACzBoQ,WAAYH,EAAQ3E,KAAK8E,WACzBC,OAAQJ,EAAQ3E,KAAK+E,QAEhB,GAAiB,SAAbF,EACV,MAAO,CAAEnQ,WAAY,GAAIoQ,WAAYH,EAAQ3E,KAAK8E,WAAa,QAAK5L,EAAW6L,OAAQJ,EAAQ3E,KAAK+E,QAErG,IAAI1P,EAAqB,CACxBX,WAAY,IAEb,OAAIoQ,GACHzP,EAAcyP,WAAa,GAC3BzP,EAAc0P,OAASJ,EAAQ3E,KAAK+E,OACpClS,OAAOQ,KAAKqB,GAAYyC,QAAS6N,IAChC3P,EAAcX,WAAWsQ,GAAYN,EAAQM,KAE9CnS,OAAOQ,KAAKyR,GAAY3N,QAAS8N,IAChC5P,EAAcyP,WAAWG,GAAYP,EAAQQ,aAAaD,KAEpD5P,IAERA,EAAcX,WAAa7B,OAAOQ,KAAKqB,GAAYgN,OAClD,CAACyD,EAAO/D,KACP+D,EAAM/D,GAAYsD,EAAQQ,aAAa9D,IAAasD,EAAQtD,GACrD+D,GAER,IAEM9P,GAuCR,SAAA+P,GAAcC,EAAsBC,GACnC,OAAId,GAAea,IAAWb,GAAec,KACxC/Q,EAAW8Q,EAAOrF,QAASzL,EAAW+Q,EAAOtF,OAC5CqF,EAAOrF,KAAK0E,UAAYY,EAAOtF,KAAK0E,WAIrCW,EAAOrF,KAAKlL,MAAQwQ,EAAOtF,KAAKlL,KAGhCuQ,EAAOrF,KAAKtL,WAAWqG,MAAQuK,EAAOtF,KAAKtL,WAAWqG,QAIhDwJ,GAAec,KAAWd,GAAee,YAC3BpM,IAApBmM,EAAOE,UAAmE,iBAAlCD,EAAOtF,KAAKpL,qBAGpDyQ,EAAOrF,KAAKpL,oBAAsB0Q,EAAOtF,KAAKpL,mBAG9CyQ,EAAOrF,KAAKtL,WAAWqG,MAAQuK,EAAOtF,KAAKtL,WAAWqG,MAQ5D,SAAAyK,GAA0B7Q,EAA0B8Q,EAAsBC,GACzE,IAAK,IAAItJ,EAAIsJ,EAAOtJ,EAAIzH,EAASkG,OAAQuB,IACxC,GAAIgJ,GAAKzQ,EAASyH,GAAIqJ,GACrB,OAAOrJ,EAGT,OAAQ,EAGT,SAAAuJ,GAA8BxQ,EAAqD,IAElF,OADAA,EAAUF,MAAMC,QAAQC,GAAWA,EAAU,CAACA,IAE5CyQ,OAAQC,GAAcA,IAA2B,IAAdA,GACnCC,KAAK,KACLC,OAGH,SAAAC,GAAyBtB,EAAkBO,EAAkBgB,EAA+BC,GACvFA,IAAc9B,IAA8B,SAAba,GAAuBgB,EACzDvB,EAAQyB,eAAe7B,GAAiBW,EAAUgB,GAC1B,SAAbhB,GAAqC,KAAdgB,QAAmC/M,IAAd+M,EACvDvB,EAAQ0B,gBAAgBnB,GAExBP,EAAQ2B,aAAapB,EAAUgB,GAIjC,SAAAK,GAA2B1B,EAAoB2B,GAC9C,MAAM7B,QACLA,EACA1E,MAAMtL,WAAEA,GACRsL,MACCtL,YAAY6O,eAAEA,KAEZqB,EACJ,GAAIrB,IAAqC,IAAnBA,EAAyB,CAC9C,GAA8B,mBAAnBA,EACV,OAAOA,EAAemB,EAAoBhQ,GAE3C6R,EAAYjD,MAAMoB,EAAoBhQ,EAAY6O,IAIpD,SAAAiD,GAA0B7B,EAAuB4B,EAAiCxC,GACjF,MAAMW,QACLA,EACA1E,MAAMtL,WAAEA,IACLiQ,EACE8B,EAAgB,KACrB/B,GAAWA,EAAQgC,YAAchC,EAAQgC,WAAWC,YAAYjC,GAChEC,EAAQD,aAAUxL,GAEnB,GAA6B,mBAAlB6K,EACV,OAAOA,EAAcW,EAAoB+B,EAAe/R,GAEzD6R,EAAYzC,KAAKY,EAAoBhQ,EAAYqP,EAAe0C,GAGjE,SAAAG,GAAmBC,GAClB,OAAO5R,MAAMlC,UAAU+T,MAAM1O,KAAKyO,GAe7B,SAAAE,GAAmBC,GACxB,IAeIC,EAGAC,EAlBAC,EAA8B,CACjCC,MAAM,EACNC,OAAO,EACPC,WAAYjE,GACZqB,QAAS/R,EAAA,QAAO4U,SAASC,KACzBnL,SAAU,MAEPoL,EAA8C,GAC9CC,EAAyE,GACzEC,EAA8C,GAC9CC,EAAY,IAAI/T,EAChBgU,EAAwB,IAAIhU,EAC5BiU,EAAoB,IAAIjU,EACxBkU,EAAqB,IAAIlU,EACzBmU,EAA4D,IAAInU,EAEhEoU,EAAoC,GACpCC,EAAuC,GAEvCC,EAA0B,GAE9B,SAAAC,EACCpD,EACAqD,EACAC,EACA5D,GAEA,IAAIzJ,EAASoN,IAAcC,EACF,mBAAdD,IACVpN,EAASoN,MAEK,IAAXpN,GACHgN,EAAsBlR,KAAK,KAC1B2N,EAAQM,OAKX,SAAAuD,EACC7D,EACA8D,EACAC,EACArL,EACAkL,GAEA,GAAIA,EAAe,CAClB,MAAMI,EAAgBd,EAAU/P,IAAIyQ,GACpC5D,EAAQvB,oBAAoBqF,EAAWE,GAGxC,IAAIC,EAAWF,EAAarL,KAAKA,GAEf,UAAdoL,IACHG,EAAW,SAAoBC,GAC9BH,EAAarQ,KAAKnC,KAAM2S,GACvBA,EAAIC,OAAe,iBAAoBD,EAAIC,OAA4B1S,OACvEiH,KAAKA,IAGRsH,EAAQtB,iBAAiBoF,EAAWG,GACpCf,EAAU5P,IAAIyQ,EAAcE,GAG7B,SAAAG,EACCpE,EACAqE,EACArU,EACAsU,GAAsB,GAEtBnW,OAAOQ,KAAK0V,GAAoB5R,QAAS6N,IACxC,MAAMiE,EAAoC,OAA1BjE,EAASkE,OAAO,EAAG,IAAeF,EAC5CR,EAAYQ,EAAahE,EAAWA,EAASkE,OAAO,GAC1D,GAAID,IAAYvU,EAAWsQ,GAAW,CACrC,MAAMmE,EAAgBvB,EAAU/P,IAAIkR,EAAmB/D,IACnDmE,GACHzE,EAAQvB,oBAAoBqF,EAAWW,MAM3C,SAAAC,EACCC,EACAC,EACAC,GAEA,MAAMC,qBAAEA,EAAoBC,oBAAEA,EAAmBvD,UAAEA,EAASwD,MAAEA,GAAUJ,EAClEK,EAAkC,GAClCC,EAAiBrF,GAAe+E,GAEhCO,GADyBrF,GAAe+E,IAAkBA,EAAcO,kBAAqB,IAC5CjP,OAAS,EAC1DkP,GACHP,IAAgD,IAAxBC,IAAkCG,GAC3DC,GAA4BR,EAASxO,OAAS,EAChD,IAAImP,EACJ,IAAK,IAAI5N,EAAI,EAAGA,EAAIiN,EAASxO,OAAQuB,IAAK,CACzC,MAAM6N,EAAeZ,EAASjN,GACxB8N,EAAU,CACflK,KAAMiK,EACNP,MAAOA,EAAQ,EACfS,MAAO/N,EACPoN,qBAAsBO,EACtBH,iBACA1D,UAAWA,GAEZ,GAAI5R,EAAQ2V,IAAiBA,EAAavV,WAAWqP,cAAe,CACnEuF,EAAOc,eAAgB,EACvB,IAAIC,EAAavC,EAAkBjQ,IAAIyR,GACvC,KAAOe,IACFA,EAAWD,eAGfC,EAAWD,eAAgB,EAC3BC,EAAavC,EAAkBjQ,IAAIwS,GAGrCvC,EAAkB9P,IAAIkS,EAASZ,GAC3BU,GACHjC,EAAmB/P,IAAIgS,EAAcE,GAEtCP,EAAgB5S,KAAKmT,GACrBF,EAAeE,EAEhB,OAAOP,EAGR,SAAAW,EAAgCC,GAC/B,IAAIC,EACAC,EAAgB3C,EAAkBjQ,IAAI0S,GAE1C,MAAQC,GAAsBC,IACxBD,GAAsBjG,GAAekG,KACzCD,EAAqBC,GAEtBA,EAAgB3C,EAAkBjQ,IAAI4S,GAEvC,OAAOD,EAGR,SAAAE,EAA2BH,GAC1B,IAAII,EACAF,EAAgB3C,EAAkBjQ,IAAI0S,GAE1C,MAAQI,GAAiBF,IACnBE,GAAiBnG,GAAeiG,IAAkBA,EAAc/F,UACpEiG,EAAgBF,EAAc/F,SAE/B+F,EAAgB3C,EAAkBjQ,IAAI4S,GAEvC,OAAOE,EAGR,SAAAC,EAA+BhG,GAC9B,GAAIA,EAAK5E,KAAKhL,2BAA4B,CACzC,MAAMN,EAAakQ,EAAK5E,KAAKtL,WAC7BkQ,EAAK5E,KAAKtL,WAAU7B,OAAAa,OAAA,GAAQkR,EAAK5E,KAAKhL,4BAA2B,GAAU4P,EAAK5E,KAAKrK,oBACrFsS,EAAsBlR,KAAK,KAC1B8T,EAAkBjG,EAAM,CAAElQ,kBAK7B,SAAAoW,EAA0BlG,GACzB,IAAImF,EAA4B,KAC5BgB,EAAuCnG,EAC3C,MAAQmF,GAAc,CACrB,MAAMiB,EAAcjD,EAAmBlQ,IAAIkT,GAC3C,GAAIC,EAAJ,CACC,GAAIxG,GAAewG,GAAc,CAChC,GAAIA,EAAYtG,SAAWsG,EAAYtG,QAAQgC,WAAY,CAC1DqD,EAAeiB,EAAYtG,QAC3B,MAEDqG,EAAaC,EACb,SAED,GAAIA,EAAYtG,SAAWsG,EAAYtG,QAAQgC,WAAY,CAC1DqD,EAAeiB,EAAYtG,QAC3B,MAEDqG,EAAaC,OAId,KADAD,EAAajD,EAAkBjQ,IAAIkT,KAChBvG,GAAeuG,GACjC,MAGF,OAAOhB,EAGR,SAAAkB,EAAkBvG,EAAc2D,EAAiBC,GAChD,MAAM4C,EAAWxG,EAAQvO,MACnBgV,EAAezG,EAAQ,iBACvB0G,EAAgB1G,EAAQ,gBAE1B0G,GAAiBF,IAAaE,GACjC1G,EAAQvO,MAAQiV,EACZ1G,EAAQvO,QAAUiV,IACrB1G,EAAQ,qBAAkBxL,KAEhBiS,GAAgBD,IAAaC,GAAiB9C,IAAcC,KACvE5D,EAAQvO,MAAQkS,EAChB3D,EAAQ,sBAAmBxL,GAI7B,SAAAmS,EACC3G,EACA4G,EAAqC,GACrCC,EACAC,GAA8B,GAE9B,MAAMC,EAAY5Y,OAAOQ,KAAKkY,EAAYvL,KAAKtL,YACzCgX,EAAYD,EAAU5Q,QACU,IAAlC4Q,EAAUxU,QAAQ,YAAqBqU,EAAkBnW,SAC5DuP,EAAQ0B,gBAAgB,SAGzBoF,GAA+B1C,EAAqBpE,EAAS4G,EAAmBC,EAAYvL,KAAKtL,YAEjG,IAAK,IAAI0H,EAAI,EAAGA,EAAIsP,EAAWtP,IAAK,CACnC,MAAM4I,EAAWyG,EAAUrP,GAC3B,IAAIiM,EAAYkD,EAAYvL,KAAKtL,WAAWsQ,GAC5C,MAAMsD,EAAgBgD,EAAkBtG,GACxC,GAAiB,YAAbA,EAAwB,CAC3B,MAAM2G,EAAsBhG,GAAqB2C,GACjD,IAAIsD,EAAqBjG,GAAqB0C,GAC9C,GAAIsD,IAAwBC,EAC3B,GAAIA,EAAoB,CACvB,GAAIL,EAAYM,OAAQ,CACvB,MAAMC,GAAcpH,EAAQQ,aAAa,UAAY,IAAI6G,MAAM,KAC/D,IAAK,IAAI3P,EAAI,EAAGA,EAAI0P,EAAWjR,OAAQuB,KACa,IAA/CwP,EAAmB3U,QAAQ6U,EAAW1P,MACzCwP,KAAwBE,EAAW1P,MAAMwP,KAI5ClH,EAAQ2B,aAAa,QAASuF,QAE9BlH,EAAQ0B,gBAAgB,cAGpB,IAA0C,IAAtCjC,GAAelN,QAAQ+N,GACjCoD,EAAcpD,EAAUqD,EAAWC,EAAe5D,QAC5C,GAAiB,WAAbM,EAAuB,CACjC,MAAMgH,EAAanZ,OAAOQ,KAAKgV,GACzB4D,EAAaD,EAAWnR,OAC9B,IAAK,IAAIqR,EAAI,EAAGA,EAAID,EAAYC,IAAK,CACpC,MAAMC,EAAYH,EAAWE,GACvBE,EAAgB/D,EAAU8D,GAE5BC,KADkB9D,GAAiBA,EAAc6D,MAIpDzH,EAAQ9B,MAAcuJ,GAAaC,GAAiB,UAMtD,GAHK/D,GAAsC,iBAAlBC,IACxBD,EAAY,IAEI,UAAbrD,EACsC,WAApCN,EAAwB2H,UAC3B3H,EAAgB,gBAAkB2D,GAEpC4C,EAASvG,EAAS2D,EAAWC,QACvB,GAAiB,QAAbtD,GAAsBqD,IAAcC,EAAe,CAC7D,MAAMjU,SAAcgU,EACP,aAAThU,GAAyD,IAAlC2Q,EAASsH,YAAY,KAAM,IAAYd,EACjEjD,EAAY7D,EAASM,EAASkE,OAAO,GAAIb,EAAWkD,EAAYvL,KAAK5C,KAAMkL,GACxD,WAATjU,GAAkC,cAAb2Q,GAA4BwG,EAC3DxF,GAAgBtB,EAASM,EAAUqD,EAAWkD,EAAYrF,WACnC,eAAblB,GAA0C,cAAbA,EAClCN,EAAgBM,KAAcqD,IACjC3D,EAAgBM,GAAYqD,GAG7B3D,EAAgBM,GAAYqD,IAiDlC,SAAAwC,EAA2BjG,EAAoBmE,GAC9C,GAAInE,EAAK5E,KAAK8E,YAAcF,EAAK5E,KAAK+E,OAAQ,EA1gBhD,SACCL,EACA6H,EACAzH,EACAoB,GAEA,MAAMsG,EAAY3Z,OAAOQ,KAAKyR,GACxB2H,EAAYD,EAAU3R,OAC5B,IAAK,IAAIuB,EAAI,EAAGA,EAAIqQ,EAAWrQ,IAAK,CACnC,MAAM6I,EAAWuH,EAAUpQ,GACrB6J,EAAYnB,EAAWG,GAEzBgB,IADsBsG,EAAmBtH,IAE5Ce,GAAgBtB,EAASO,EAAUgB,EAAWC,IA8f9CwG,CACC9H,EAAKF,QACLqE,EAAmBjE,YAAc,GACjCF,EAAK5E,KAAK8E,WACVF,EAAKsB,WAENmF,EAAczG,EAAKF,QAAwBqE,EAAmBrU,WAAYkQ,GAAM,GAChF,MAAMG,EAASH,EAAK5E,KAAK+E,QAAU,GAC/BgE,EAAmBhE,QACtB+D,EACClE,EAAKF,QACLqE,EAAmBhE,QAAU,GAC7BH,EAAK5E,KAAK+E,QACV,GAGFgE,EAAmBhE,OAASgE,EAAmBhE,QAAU,GACzDlS,OAAOQ,KAAK0R,GAAQ5N,QAASK,IAC5B+Q,EACC3D,EAAKF,QACLlN,EACAuN,EAAOvN,GACPoN,EAAK5E,KAAK5C,KACV2L,EAAmBhE,OAAOvN,WAI5B6T,EAAczG,EAAKF,QAAwBqE,EAAmBrU,WAAYkQ,GA6C5E,SAAA+H,IACC1F,OAAmB/N,EACnB,MAAM0T,EAAoB,IAAInF,GACxBoF,EAAqB,GAS3B,IAAIlU,EACJ,IATA8O,EAAqB,GACrBmF,EAAkBE,KAAK,CAACC,EAAGC,KAC1B,IAAI/R,EAAS+R,EAAEtD,MAAQqD,EAAErD,MAIzB,OAHe,IAAXzO,IACHA,EAAS+R,EAAE7C,MAAQ4C,EAAE5C,OAEflP,IAGAtC,EAAOiU,EAAkBpK,OAAQ,CACxC,IAAI+C,SAAEA,GAAa5M,EACnB,IAA8C,IAA1CkU,EAAmB5V,QAAQsO,IAAoBsC,EAAsB/R,IAAIyP,GAAY,CACxFsH,EAAmB9V,KAAKwO,GACxB,MAAMZ,EAAUkD,EAAsBhQ,IAAI0N,GACpC3G,EAAe1B,GAAkBrF,IAAI0N,GACrC+D,EAASxB,EAAkBjQ,IAAI8M,GAC/BsI,EAAUlF,EAAmBlQ,IAAI8M,IACjCjE,YAAEA,EAAW/L,SAAEA,GAAa4Q,EAC5BX,EAAO,CACZ5E,KAAM,CACL3L,KAAMN,EACNa,kBAAmB8L,EACnBhM,WAAYkK,EAAaN,gBACzB3J,SAAUA,EACVyI,KAAMuH,EAAQ3E,KAAK5C,MAEpBmI,WACAmE,MAAO/E,EAAQ+E,MACfS,MAAOxF,EAAQwF,OAGhBb,GAAUxB,EAAkB9P,IAAI4M,EAAM0E,GACtC2D,GAAWlF,EAAmB/P,IAAI4M,EAAMqI,GACxC,MAAMtU,KAAEA,GAASuU,EAAc,CAAEvI,UAASC,SACtCjM,IACH+O,EAAc3Q,KAAK4B,GACnB4M,GAAYsC,EAAsB7P,IAAIuN,EAAUX,GAChDuI,MAIHC,IACAC,IAGD,SAAAF,IACC,IAAIxU,EACJ,KAAQA,EAAO+O,EAAclF,OAC5B,GAAwB7J,EA1oBXtE,KA2oBZsT,EAAkB5Q,KAAK4B,OACjB,CACN,MAAMgM,QAAEA,EAAOC,KAAEA,EAAIzC,KAAEA,GAASxJ,EAChC2U,EAAS3I,GAAWT,GAAaU,GAAQV,GAAa/B,IAKzD,SAAAiL,IAEC,IAAIzU,EACJ,IAFAgP,EAAkB4F,UAEV5U,EAAOgP,EAAkBnF,OAChC,GAAkB,WAAd7J,EAAKtE,KAAmB,CAC3B,MAAMsW,cACLA,EAAa/F,KACbA,EACAA,MAAMF,QACLA,EAAOmH,OACPA,EAAMrC,qBACNA,EACAxJ,MAAMtL,WAAEA,KAENiE,EAIJ,GAFAkS,EAAkBjG,EAAM,CAAElQ,WAAY,KACtCkW,EAAsBhG,IACjBiH,EAAQ,CACZ,IAAI9B,EACAP,EACHO,EAAee,EAAiBlG,GACtBoD,IACV+B,EAAe/B,EAAiBnQ,IAAI+M,IAErC+F,EAAcZ,aAAarF,EAAUqF,GACjCxV,EAAWqQ,EAAK5E,OAAS4E,EAAK5E,KAAK9B,UACtC0G,EAAK5E,KAAK9B,WAG6B,WAApCwG,EAAwB2H,SAAwB3H,EAAS8I,eAC7DvC,EAASvG,EAAS8I,eAEnBlH,GAAkB1B,EAAMuC,EAAcG,YACtC,MAAM1I,EAAe1B,GAAkBrF,IAAI+M,EAAK5E,KAAK5C,MAC/B,MAAlB1I,EAAWqG,KAAe6D,GAC7BA,EAAaR,YAAYuF,IAAIe,KAA2BhQ,EAAWqG,OAEpEpC,EAAKiM,KAAK6I,UAAW,OACf,GAAkB,WAAd9U,EAAKtE,KAAmB,CAClC,MAAMuQ,KACLA,EACAA,MAAMF,QAAEA,EAAO1E,KAAEA,GAAM2E,QACvBA,GACGhM,EACE2Q,EAASxB,EAAkBjQ,IAAI+M,GACrC,GAAI0E,GAAU/E,GAAe+E,IAAWA,EAAO/D,SAAU,CACxD,MAAM3G,EAAe1B,GAAkBrF,IAAIyR,EAAO/D,UAClD3G,GAAgBA,EAAaR,YAAYsP,UAG1C,MAAM3E,EAAqBtE,GAAwBC,EAASC,GACtD/F,EAAe1B,GAAkBrF,IAAI+M,EAAK5E,KAAK5C,MAErDyN,EAAkBjG,EAAMmE,GACxB6B,EAAsBhG,GAElBhG,GAAuC,MAAvBoB,EAAKtL,WAAWqG,KACnC6D,EAAaR,YAAYuF,IAAIiB,EAAKF,WAA2B1E,EAAKtL,WAAWqG,YAExE,GAAkB,WAAdpC,EAAKtE,KAAmB,CAClC,MAAMsQ,QAAEA,GAAYhM,GACdoL,cAAEA,GAAkBY,EAAQ3E,KAAKtL,WACnCqP,IAAmC,IAAlBA,EACpByC,GAAiB7B,EAASwC,EAAcG,WAAYvD,IAEpDY,EAAQD,QAASgC,WAAYC,YAAYhC,EAAQD,SACjDC,EAAQD,aAAUxL,QAEb,GAAkB,WAAdP,EAAKtE,KAAmB,CAClC,MAAMkR,SAAEA,EAAQoI,SAAEA,GAAahV,EACzBiG,EAAe1B,GAAkBrF,IAAI0N,GAC3C3G,EAAaR,YAAYsP,UACzBC,GAAY/O,EAAaV,gBACnB,GAAkB,WAAdvF,EAAKtE,KAAmB,CAClC,GAAIsE,EAAKgM,QAAQY,SAAU,CAC1B,MAAM3G,EAAe1B,GAAkBrF,IAAIc,EAAKgM,QAAQY,UACxD3G,GAAgBA,EAAaT,WAE9BxF,EAAKgM,QAAQD,aAAUxL,EACvBP,EAAKgM,QAAQ3E,KAAK5C,UAAOlE,EACzBP,EAAKgM,QAAQY,cAAWrM,GAK3B,SAAAmU,KApPA,WACC,MAAMjG,KAAEA,GAASD,EACXyG,EAAY3F,EAElB,GADAA,EAAwB,GACpB2F,EAAU/S,OAAQ,CACrB,MAAMgT,EAAM,KACX,IAAIlF,EACJ,KAAQA,EAAWiF,EAAUE,SAC5BnF,KAGEvB,EACHyG,IAEIlb,EAAA,QAAOob,oBACVpb,EAAA,QAAOob,oBAAoBF,GAE3BG,WAAWH,IAoOdI,GAxQD,WACC,MAAM7G,KAAEA,GAASD,EACXyG,EAAY1F,EAElB,GADAA,EAA2B,GACvB0F,EAAU/S,OAAQ,CACrB,MAAMgT,EAAM,KACX,IAAIlF,EACJ,KAAQA,EAAWiF,EAAUE,SAC5BnF,KAGEvB,EACHyG,IAEAlb,EAAA,QAAOiR,sBAAsBiK,IA2P/BK,GAmCD,SAAAZ,EAAkB3I,EAAyBC,EAAsBzC,EAAoB,IACpF,IAAIgM,WAAEA,EAAa,GAAEC,SAAEA,EAAW,EAACC,SAAEA,EAAW,GAAMlM,EACtD,MAAMmM,EAAgB3J,EAAQ9J,OACxB0T,EAAa3J,EAAK/J,OAClB4O,EAAsB6E,EAAgB,GAAMA,EAAgB,GAAKA,EAAgBC,EACjFC,EAA8B,GACpC,GAAIH,EAAWE,EAAY,CAC1B,IAAIE,EAAiBL,EAAWE,EAAgB3J,EAAQyJ,QAAYlV,EACpE,MAAMqS,EAAc3G,EAAKyJ,GACzB9C,EAAY9B,oBAAsBA,EAzCpC,SAA4B7E,EAAoBuJ,GAC/C,MAAM9G,MAAEA,GAAUF,EAClB,GAAIE,GAAS8G,EAAWtT,OACvB,GAAI2J,GAAeI,GAAO,CACzB,IACC5E,MAAMlL,IAAEA,IACL8P,EACJ,IAAK,IAAIxI,EAAI,EAAGA,EAAI+R,EAAWtT,OAAQuB,IAAK,CAC3C,MAAMsS,EAAaP,EAAW/R,GAC9B,GAAItH,EAAI6Z,iBAAmBD,EAAWrC,SAAW,IAAK,CACrD,MAAMuC,EAAiBzG,EAAgBlR,QAAQyX,IACvB,IAApBE,GACHzG,EAAgBnR,OAAO4X,EAAgB,GAExCT,EAAWnX,OAAOoF,EAAG,GACrBwI,EAAKF,QAAUgK,EACf,aAIF9J,EAAKuJ,WAAaA,EAuBnBU,CAAmBtD,EAAa4C,GAE5BM,GAAkBrJ,GAAKqJ,EAAgBlD,IAC1C6C,IACAC,IACI7J,GAAeiK,IAAmBjK,GAAe+G,KACpDA,EAAYkC,SAAWgB,EAAehB,UAEvCe,EAAazX,KAAK,CAAE4N,QAAS8J,EAAgB7J,KAAM2G,KACxCkD,IAA4E,IAA1DjJ,GAAiBb,EAAS4G,EAAa6C,EAAW,IAIX,IAA1D5I,GAAiBZ,EAAM6J,EAAgBJ,EAAW,IAE5DG,EAAazX,KAAK,CAAE4N,QAAS8J,EAAgB7J,UAAM1L,IACnDkV,MAIAI,EAAazX,KAAK,CAAE4N,QAAS8J,EAAgB7J,UAAM1L,IACnDsV,EAAazX,KAAK,CAAE4N,aAASzL,EAAW0L,KAAM2G,IAC9C6C,IACAC,MAZAG,EAAazX,KAAK,CAAE4N,aAASzL,EAAW0L,KAAM2G,IAC9C8C,KAmBF,GAJIA,EAAWE,GACd7G,EAAc3Q,KAAK,CAAE4N,UAASC,OAAMzC,KAAM,CAAEgM,aAAYC,WAAUC,cAG/DC,EAAgBF,GAAYC,GAAYE,EAC3C,IAAK,IAAInS,EAAIgS,EAAUhS,EAAIkS,EAAelS,IAEzCoS,EAAazX,KAAK,CAAE4N,QAASA,EAAQvI,GAAIwI,UAAM1L,IAIjD,IAAK,IAAIkD,EAAI,EAAGA,EAAIoS,EAAa3T,OAAQuB,IAAK,CAC7C,MAAMzD,KAAEA,EAAImW,IAAEA,EAAGlT,OAAEA,GAAWmT,EAAYP,EAAapS,IACvDR,GAAU8L,EAAc3Q,KAAK6E,GAC7BjD,GAAQ+O,EAAc3Q,KAAK4B,GAC3BmW,GAAOnH,EAAkB5Q,KAAK+X,IAIhC,SAAAC,GAAqBpK,QAAEA,EAAOC,KAAEA,IAC/B,GAAID,IAAYC,EAAM,CACrB,IAAKD,GAAWC,EACf,OAAIJ,GAAeI,GA6GtB,UAAoBA,KAAEA,IACrB,IAAIuJ,EAAqB,GACzB,MAAMxD,EAAgBD,EAAkB9F,GACnCA,EAAKF,SAuBLyC,EAAcE,QACjB8G,EAAavH,GAAUhC,EAAKF,QAAQsK,YACpC7G,EAAkB,IAAIA,KAAoBgG,IAE3CvJ,EAAKiH,QAAS,IA1BTjH,EAAK5E,KAAa0E,QACtBE,EAAKF,QAAWE,EAAK5E,KAAa0E,SAEZ,QAAlBE,EAAK5E,KAAKlL,MACb8P,EAAKsB,UAAY9B,IAEdQ,EAAK5E,KAAKlL,IACT8P,EAAKsB,UACRtB,EAAKF,QAAU/R,EAAA,QAAO4U,SAAS0H,gBAAgBrK,EAAKsB,UAAWtB,EAAK5E,KAAKlL,KAEzE8P,EAAKF,QAAU/R,EAAA,QAAO4U,SAAS2H,cAActK,EAAK5E,KAAKlL,KAE5B,MAAlB8P,EAAK5E,KAAKI,OACpBwE,EAAKF,QAAU/R,EAAA,QAAO4U,SAAS4H,eAAevK,EAAK5E,KAAKI,QAGtD4H,GAAoBG,EAAgBtN,QACnC8P,IAAkBxC,EAAgB,GAAGzB,YACxCsB,EAAiBhQ,IAAI4M,EAAMuD,EAAgB,KAU1CvD,EAAKF,SACJE,EAAK5E,KAAKrL,WACbiQ,EAAKkF,iBAAmBV,EAAkBxE,EAAK5E,KAAKrL,SAAUiQ,EAAM,OAGtE,MAAM4F,EAAqBF,EAAuB1F,GAC9C4F,IAAuBA,EAAmB9F,UAC7C8F,EAAmB9F,QAAUE,EAAKF,SAEnC,MAAMoK,EAA8B,CACnClK,KAAMA,EACN+F,cAAeA,EACftW,KAAM,UAEP,GAAIuQ,EAAKkF,iBACR,MAAO,CACNnR,KAAM,CAAEgM,QAAS,GAAIC,KAAMA,EAAKkF,iBAAkB3H,KAAM,CAAEgM,eAC1DW,OAGF,MAAO,CAAEA,OAhKCM,CAAW,CAAExK,SAqBxB,UAAuBA,KAAEA,IACxB,IACC5E,MAAMpL,kBAAEA,IACLgQ,GACAvI,SAAEA,GAAa8K,EACnB,IAAKzO,EAAwB9D,GAC5B,MAAO,GAER,MAAM2Q,EAAW,IAAI3Q,EACjByH,IACHkJ,EAASlJ,SAASV,KAAOU,GAE1B,MAAMuC,EAAe1B,GAAkBrF,IAAI0N,GAC3C3G,EAAaZ,WAAa,MACzBY,EAAaX,OAAQ,GAChBW,EAAaP,WAAawJ,EAAsB/R,IAAIyP,KACxDkC,EAAmB1Q,KAAK,CAAEwO,WAAUmE,MAAO9E,EAAK8E,MAAOS,MAAOvF,EAAKuF,QArStE,WACC,MAAM/C,KAAEA,GAASD,EACbC,EACHuF,IACW1F,IACXA,EAAmBtU,EAAA,QAAOiR,sBAAsB,KAC/C+I,OAgSA0C,MAGFzQ,EAAaP,WAAY,EACzBkH,EAAS+J,kBAAkB1K,EAAK5E,KAAKtL,WAAYkQ,EAAK5E,KAAK5C,MAC3DmI,EAASgK,gBAAgB3K,EAAK5E,KAAKrL,UACnCiQ,EAAKW,SAAWA,EAChB,IAAI8D,EAAW9D,EAASiK,aACxB5Q,EAAaP,WAAY,EACrBgL,IACHA,EAAWpU,MAAMC,QAAQmU,GAAYA,EAAW,CAACA,GACjDzE,EAAKkF,iBAAmBV,EAAkBC,EAAUzE,EAAM,OAEvDA,EAAKW,WACRsC,EAAsB7P,IAAI4M,EAAKW,SAAUX,GACpCsC,GAAsBtC,EAAKW,SAAiBhB,iBAChD2C,EAAmBtC,EAAKW,SAASvH,WAAWZ,KAAKwH,EAAKW,YAGxD,MAAO,CACN5M,KAAM,CAAEiM,KAAMA,EAAKkF,iBAAkB3H,KAAM,CAAEgM,WAAYvJ,EAAKuJ,aAC9DvS,OAAQ,CAAEvH,KAAM,SAAUkR,WAAUoI,UAAU,IAzDrC8B,CAAc,CAAE7K,SAElB,GAAID,GAAWC,EAAM,CAC3B,GAAIJ,GAAeG,IAAYH,GAAeI,GAC7C,OA6JJ,UAAoBD,QAAEA,EAAOC,KAAEA,IAC9B,MAAM+F,EAAgBD,EAAkB/F,GAGxC,GAFAC,EAAKF,QAAUC,EAAQD,QACvBE,EAAKsB,UAAYvB,EAAQuB,UACrBtB,EAAK5E,KAAKI,MAAQwE,EAAK5E,KAAKI,OAASuE,EAAQ3E,KAAKI,KAAM,CAC3D,MAAMsP,EAAkB/E,EAAegF,cAAcR,eAAevK,EAAK5E,KAAKI,MAC9EuK,EAAeiF,aAAaF,EAAiB9K,EAAKF,SAClDE,EAAKF,QAAUgL,OACT,GAAI9K,EAAK5E,KAAKrL,SAAU,CAC9B,MAAMA,EAAWyU,EAAkBxE,EAAK5E,KAAKrL,SAAUiQ,EAAMD,GAC7DC,EAAKkF,iBAAmBnV,EAEzB,MAAO,CACNgE,KAAM,CAAEgM,QAASA,EAAQmF,iBAAkBlF,KAAMA,EAAKkF,iBAAkB3H,KAAM,IAC9E2M,IAAK,CAAEza,KAAM,SAAUuQ,OAAMD,YA3KpBkL,CAAW,CAAElL,UAASC,SACvB,GAAIL,GAAeI,IAAYJ,GAAeK,GACpD,OAAOsI,EAAc,CAAEvI,UAASC,cAE3B,GAAID,IAAYC,EAAM,CAC5B,GAAIJ,GAAeG,GAClB,OAyKJ,UAAoBA,QAAEA,IAIrB,GAHAoD,EAAmBrM,OAAOiJ,GAC1BmD,EAAkBpM,OAAOiJ,GACzBA,EAAQ3E,KAAK5C,UAAOlE,EAChByL,EAAQyF,cACX,MAAO,CACNzR,KAAM,CAAEgM,QAASA,EAAQmF,iBAAkB3H,KAAM,IACjD2M,IAAK,CAAEza,KAAM,SAAUsQ,YAIrBA,EAAQmF,kBACX7B,EAAsBlR,KAAK,KAC1B,IACImT,EADA4F,EAAWnL,EAAQmF,kBAAoB,GAE3C,KAAQI,EAAU4F,EAAStN,OAAQ,CAKlC,GAJI0H,EAAQJ,mBACXgG,EAAS/Y,QAAQmT,EAAQJ,kBACzBI,EAAQJ,sBAAmB5Q,GAExBqL,GAAe2F,GAAU,CAC5B,GAAIA,EAAQ3E,SAAU,CACrBsC,EAAsBnM,OAAOwO,EAAQ3E,UACrC,MAAM3G,EAAe1B,GAAkBrF,IAAIqS,EAAQ3E,UACnD3G,GAAgBA,EAAaT,WAE9B+L,EAAQ3E,cAAWrM,EAEpB6O,EAAmBrM,OAAOwO,GAC1BpC,EAAkBpM,OAAOwO,GACzBA,EAAQxF,aAAUxL,EAClBgR,EAAQlK,KAAK5C,UAAOlE,KAKvB,MAAO,CACN4V,IAAK,CAAEza,KAAM,SAAUsQ,YA9MdoL,CAAW,CAAEpL,YACd,GAAIJ,GAAeI,GACzB,OAkFJ,UAAuBA,QAAEA,IAMxB,OALAA,EAAUA,EAAQY,SAAWsC,EAAsBhQ,IAAI8M,EAAQY,UAAaZ,EAC5EoD,EAAmBrM,OAAOiJ,GAC1BmD,EAAkBpM,OAAOiJ,GACzBkD,EAAsBnM,OAAOiJ,EAAQY,UAE9B,CACN5M,KAAM,CAAEgM,QAASA,EAAQmF,iBAAkB3H,KAAM,IACjDvG,OAAQ,CAAEvH,KAAM,SAAUsQ,YA1FjBqL,CAAc,CAAErL,aAI1B,MAAO,GA6CR,SAAAuI,GAAuBvI,QAAEA,EAAOC,KAAEA,IACjCD,EAAWA,EAAQY,UAAYsC,EAAsBhQ,IAAI8M,EAAQY,WAAcZ,EAC/E,MAAMY,SAAEA,EAAQb,QAAEA,EAAO0F,cAAEA,GAAkBzF,EAC7C,IAAKY,EACJ,MAAO,GAER,MAAM3G,EAAe1B,GAAkBrF,IAAI0N,GAQ3C,GAPAX,EAAKW,SAAWA,EAChBX,EAAKF,QAAUA,EACfE,EAAKwF,cAAgBA,EACrBxL,EAAaP,WAAY,EACzBkH,EAAU+J,kBAAkB1K,EAAK5E,KAAKtL,WAAYkQ,EAAK5E,KAAK5C,MAC5DmI,EAAUgK,gBAAgB3K,EAAK5E,KAAKrL,UACpCkT,EAAsB7P,IAAI4M,EAAKW,SAAWX,GACtChG,EAAaX,MAAO,CACvB,IAAIoL,EAAW9D,EAAUiK,aAMzB,OALA5Q,EAAaP,WAAY,EACrBgL,IACHA,EAAWpU,MAAMC,QAAQmU,GAAYA,EAAW,CAACA,GACjDzE,EAAKkF,iBAAmBV,EAAkBC,EAAUzE,EAAMD,IAEpD,CACNhM,KAAM,CAAEgM,QAASA,EAAQmF,iBAAkBlF,KAAMA,EAAKkF,iBAAkB3H,KAAM,IAC9EvG,OAAQ,CAAEvH,KAAM,SAAUkR,WAAUoI,UAAU,IAKhD,OAFA/O,EAAaP,WAAY,EACzBuG,EAAKkF,iBAAmBnF,EAAQmF,iBACzB,CACNlO,OAAQ,CAAEvH,KAAM,SAAUkR,WAAUoI,UAAU,IAkIhD,MAAO,CACNsC,MA7fD,SAAeC,EAAsC,IACpD/I,EAAatU,OAAAa,OAAA,GAAQyT,EAAkB+I,GACvC,MAAMxL,QAAEA,GAAYyC,EAEdoE,EAAc,CACnBvL,KAFoBxL,EAvXvB,SAAmBwS,GAClB,OAAO,cAAc1J,GAAd3G,kCACCV,KAAAsO,gBAAiB,EAEd5N,SACT,MAAMsE,EAAS+L,IAEf,OADA/Q,KAAKsO,eAAiBrQ,EAAQ+G,GACvBA,IAgXekV,CAAUnJ,GAAW,IAG3CmD,MAAO,EACPT,MAAO,GASR,IAAI0G,EACJ,IARAtI,EAAkB9P,IAAIuT,EAAa,CAAE7B,MAAO,EAAGS,MAAO,EAAGzF,UAAS1E,KAAMnL,EAAE,UAC1E6S,EAAc3Q,KAAK,CAClB4N,QAAS,GACTC,KAAM,CAAC2G,GACPpJ,KAAM,CAAEgM,WAAYvH,GAAUlC,EAAQsK,eAEvC7B,IAEQiD,EAAajI,EAAgB3F,OACpC4N,EAAW1J,YAAc0J,EAAW1J,WAAWC,YAAYyJ,GAE5DhD,IACAjG,EAAcE,OAAQ,EACtBW,OAAmB9O,EACnBmU,KAueArP,WApeD,WACCkJ,GAAoBA,MAueP,IAAAmJ,GAAA,GCntCR,SAAAC,GAAyBC,GAC/B,OAAO,SAAS1H,EAAa2H,EAAsBC,GAC5B,mBAAX5H,EACV0H,EAAQ1H,EAAO9V,eAAWmG,GAE1BqX,EAAQ1H,EAAQ2H,ICJZ,SAAA/O,GAA0BtJ,GAChC,OAAOmY,GAAgB,CAACzH,EAAQ2H,KAC/B3H,EAAO6H,aAAa,mBAAoBF,EAAc3H,EAAO2H,GAAerY,KCF9E,MAAMwY,GAA8D,IAAI7c,EAiCjE,SAAA8c,IAAgBC,KAAEA,EAAIC,cAAEA,IAC9B,OAAOR,GAAgB,CAACzH,EAAQ2H,KAC/B/O,GAAiB,SAA+C/M,GAC/D,MAAMiF,EAAe1D,KAAKoG,SAAS0U,YAAYF,GAC/C,GAAIlX,EAAc,CACjB,MAAMC,SAAEA,EAAQF,YAAEA,GAAgBC,EAC5BqX,EAAsBL,GAAuB9Y,IAAI5B,OAAS,GAYhE,OAXmC,IAA/B+a,EAAoBnW,QACvB8V,GAAuB3Y,IAAI/B,KAAM+a,IAEiB,IAA/CA,EAAoB/Z,QAAQ0C,KAC/B1D,KAAKmB,IACJsC,EAAY6C,GAAG,aAAc,KAC5BtG,KAAK+H,gBAGPgT,EAAoBja,KAAK4C,IAEnBmX,EAAclX,IAAYlF,KAhBnC+M,CAkBGoH,KCnDE,SAAAoI,GACN5R,EACA6R,EAAqClW,EACrCmW,GAEA,OAAOb,GAAgB,CAACzH,EAAQ2H,KAC/B3H,EAAO6H,6BAA6BrR,IAAgB6R,EAAa9T,KAAK,OACtEyL,EAAO6H,aAAa,yBAA0BrR,IAC1C8R,GAAoBX,IACvB3H,EAAO6H,aAAa,eAAgB,CACnCrR,eACAK,SAAU8Q,EAAc3H,EAAO2H,GAAeW,MCmBlD,MAAMC,GAAY,QAELC,GAAqB,mBAc3B,SAASC,GAAMC,GACrB,OAAOjB,GAAiBzH,IACvBA,EAAO6H,aAAa,mBAAoBa,KA6CnC,SAAAC,GACNC,GAWA,IAAeC,EAAf,cAA8BD,EAT9B9a,kCAoBSV,KAAA0b,yBAAqC,GAUrC1b,KAAA2b,qBAAsB,EAUtB3b,KAAA4b,OAAqB,GAItBlb,MAAMxB,GAIZ,OAHIc,KAAK2b,qBACR3b,KAAK6b,2BAEF7c,MAAMC,QAAQC,GACVA,EAAQmD,IAAKuN,GAAc5P,KAAK8b,eAAelM,IAEhD5P,KAAK8b,eAAe5c,GASlBwB,sBACTV,KAAK2b,qBAAsB,EAGpBjb,eAAekP,GACtB,GAAIA,UAA+D,IAAdA,IAAqC,IAAdA,EAC3E,OAAOA,EAGR,MAAMmM,EAAe/b,KAAKvB,WAAWsd,cAAiB,GAChDC,EAAiBhc,KAAKic,+BAAgCrM,GAC5D,IAAIsM,EAA6B,GACjC,IAAKF,EAEJ,OADAlQ,QAAQC,qBAAqB6D,yBACtB,KAGR,GAAI5P,KAAKmc,SAAU,CAClB,MAAMjd,EAAUtC,OAAOQ,KAAK4C,KAAKmc,UAAU1Q,OAC1C,CAACvM,EAAS4F,KACT,MAAMsX,EAAaxf,OAAOQ,KAAK4C,KAAKmc,SAASrX,IAC7C,IAAK,IAAIqB,EAAI,EAAGA,EAAIiW,EAAWxX,OAAQuB,IAAK,CAC3C,MAAMkW,EAAarc,KAAKmc,SAASrX,GAAKsX,EAAWjW,IACjD,GAAIiW,EAAWjW,KAAO6V,GAAkBK,EAAY,CACnDA,EAAWnb,QAAS0O,IACfA,IAA2B,IAAdA,GAChB1Q,EAAQ4B,KAAK8O,KAGf,OAGF,OAAO1Q,GAER,IAGDgd,EAAiBpb,QAAQ5B,GAY1B,OATI6c,EAAaC,IAChBE,EAAiBpb,KAAKib,EAAaC,IAGhChc,KAAK4b,OAAOI,GACfE,EAAiBpb,KAAKd,KAAK4b,OAAOI,IAElCE,EAAiBpb,KAAKd,KAAKsc,qBAAsBN,IAE3CE,EAAiBrM,KAAK,KAGtBnP,2BACP,MAAM4a,MAAEA,EAAQ,GAAEpc,QAAEA,EAAU,IAAOc,KAAKvB,WAC1C,IAAKuB,KAAKsc,qBAAsB,CAC/B,MAAMC,EAAavc,KAAK8I,aAAa,oBACX,IAAtByT,EAAW3X,QACdkH,QAAQC,KACP,sGAGF/L,KAAKsc,qBAAuBC,EAAW9Q,OAAO,CAAC+Q,EAAgBC,KAC9D,MAAQnd,EAAA6b,GAAArW,EAAA2X,EAAAnd,GAAkBJ,EAAAG,EAAA,OAAAod,EAAA,kBAAAnd,MAAA,KAE1B,OADAU,KAAK0b,yBAAyB5a,KAAKgE,GAC7BlI,OAAAa,OAAA,GAAM+e,EAAmBtd,IAC7B,IACHc,KAAKic,+BApKT,SAAkC/c,GACjC,OAAOA,EAAQuM,OACd,CAACiR,EAAmBC,KACnB/f,OAAOQ,KAAKuf,GAAWzb,QAAS4D,IAC/B4X,EAAkBC,EAAU7X,IAAQA,IAE9B4X,GAEI,IA4J4BE,CAAyBL,GAGhEvc,KAAK4b,OAAS5b,KAAK0b,yBAAyBjQ,OAAO,CAACgR,EAAWI,IACxDjgB,OAAAa,OAAA,GAAMgf,EAAcnB,EAAMuB,IAC9B,IAEH7c,KAAKmc,SAAWvf,OAAOQ,KAAK8B,GAASuM,OAAO,CAACqR,EAAUhY,KAClD9E,KAAK0b,yBAAyB1a,QAAQ8D,IAAQ,IACjDgY,EAAQlgB,OAAAa,OAAA,GAAQqf,EAAQ,CAAEpc,CAACoE,GAAM5F,EAAQ4F,MAEnCgY,GACL,IAEH9c,KAAK2b,qBAAsB,IAI7B,OApFCtc,EAAA,YAHC2b,GAAa,QAASzW,GACtByW,GAAa,eAAgBzW,GAC7ByW,GAAa,UAAWzW,4CAlDXkX,EAAMpc,EAAA,YATpBsb,GAAO,CACPC,KAAMQ,GACNP,cAAe,CAACS,EAAc7c,IACxBA,EAAW6c,MAGT,GAFC,CAAEA,YAKGG,GC1GgBsB,KAAKC,IAAI,EAAG,IC4CrC,IAAIC,GAQAC,GAaAC,GAWAC,GAUAC,GAWAC,GAYAC,GAGVN,GAAOvgB,EAAA,QAAOsC,MAAMie,KACpBC,GAAKxgB,EAAA,QAAOsC,MAAMke,GAClBC,GAAavgB,OAAAC,EAAA,EAAAD,CAAWF,EAAA,QAAOsC,MAAMlC,UAAUqgB,YAC/CC,GAAOxgB,OAAAC,EAAA,EAAAD,CAAWF,EAAA,QAAOsC,MAAMlC,UAAUsgB,MACzCC,GAAOzgB,OAAAC,EAAA,EAAAD,CAAWF,EAAA,QAAOsC,MAAMlC,UAAUugB,MACzCC,GAAY1gB,OAAAC,EAAA,EAAAD,CAAWF,EAAA,QAAOsC,MAAMlC,UAAUwgB,WAyL9CC,GAAW3gB,OAAAC,EAAA,EAAAD,CAAWF,EAAA,QAAOsC,MAAMlC,UAAUV,UC5S/B,ICJHohB,IAAZ,SAAYA,GACXA,EAAA,YACAA,EAAA,YACAA,EAAA,YAHD,CAAYA,QAAsB,KC+B3B,SAAAC,IAAoE5e,IAC1EA,EAAGJ,WACHA,EAAa,GAAEoQ,WACfA,EAAa,GAAEC,OACfA,EAAS,GAAE4O,UACXA,EAAYF,GAAuBG,KAAIC,gBACvCA,EAAkB,KAAM,IAAI3Z,KAE5B,OAAO,SAAqC2O,GAC3CA,EAAO9V,UAAU+gB,0BAA4B,CAC5CzH,QAASvX,EACTgQ,aACApQ,aACAqQ,SACA4O,YACAE,oBAKY,aCzCf,IAAaE,GAAb,cAA0BvC,GAAYlU,KAI7B3G,YAAYsJ,EAAY+T,GAC/B/d,KAAKge,YAAchU,EACnBhK,KAAKvB,WAAWwf,WAAWF,GAC3B/d,KAAK+H,aAGNrH,SACC,MAAMwd,EAAQle,KAAKtB,SAAS2D,IAAI,CAACnE,EAAOigB,KACvC,GAAIjgB,EAAO,CACV,MAAMO,EAA2B,CAChCwf,WAAaF,IACZ/d,KAAKoe,YAAYD,EAAOJ,UAGD9a,IAArBjD,KAAKge,cACRvf,EAAW4f,SAAWF,IAAUne,KAAKge,aAEtC9f,EAAMO,WAAU7B,OAAAa,OAAA,GAAQS,EAAMO,WAAeA,GAE9C,OAAOP,IAGR,OAAOU,EAAE,MAAO,CAAEM,QAASc,KAAKsb,MAAMgD,GAAA,OAAa,CAClD1f,EAAE,KAAM,CACPM,QAASc,KAAKsb,MAAMgD,GAAA,gBAClBJ,OA7BOJ,sUAAIS,CAAA,CALhBlD,GAAMiD,IACNb,GAA8B,CAC9B5e,IAAK,YACLiQ,OAAQ,CAAC,iBAEGgP,IAkCE,aC/Bf,IAAaU,GAAb,cAA8BjD,GAAYlU,KAEjC3G,WACPV,KAAKvB,WAAWwf,YAAcje,KAAKvB,WAAWwf,WAAWje,KAAKvB,WAAWsf,MAGhErd,SACT,MAAM2d,SAAEA,GAAare,KAAKvB,WAE1B,OAAOG,EAAE,KAAM,CAAEM,QAASc,KAAKsb,MAAMmD,GAAA,OAAa,CACjD7f,EAAE,OAAQ,CACTM,QAASc,KAAKsb,MAAM,CAAEmD,GAAA,KAAUJ,EAAWI,GAAA,SAAe,OAC1DC,QAAS1e,KAAK2e,UACZ,CAAE3e,KAAKvB,WAAWmgB,YAbXJ,sUAAQK,CAAA,CAPpBpB,GAAkC,CAClC5e,IAAK,iBACLiQ,OAAQ,CAAC,cACTD,WAAY,CAAE,SACdpQ,WAAY,CAAC,OAAQ,cAErB4c,GAAMoD,KACMD,ICfb,MAAMM,WAAgBzX,GAEb3G,YAAYqd,GACnBjS,QAAQiT,IAAIhB,GAGHrd,SACT,OAAOnC,EAAEuf,GAAM,CAAEG,WAAYje,KAAKoe,aAAe,CAChD7f,EAAEigB,GAAU,CAAE1Z,IAAK,IAAK8Z,MAAO,gBAC/BrgB,EAAEigB,GAAU,CAAE1Z,IAAK,IAAK8Z,MAAO,cAAeP,UAAU,IACxD9f,EAAEigB,GAAU,CAAE1Z,IAAK,IAAK8Z,MAAO,mBAKlC,MAAMI,GAAU1N,SAAS2N,eAAe,UAC9B7E,GAAS,IAAM7b,EAAEugB,GAAS,KAClC9E,MAAM,CAAEvL,QAASuQ,0BCvBnB,SAAAtiB,GAAA,IAAAwiB,EAeAC,EACAC,EACAC,EACAd,EACAe,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC;;;;;;;;;;;;;;iFACA,SAAAC,GACA,IAAAC,EAAA,iBAAA1jB,IAAA,iBAAA2jB,UAAA,iBAAArgB,UAAA,GAUA,SAAAsgB,EAAAC,EAAAC,GASA,OARAD,IAAAH,IACA,mBAAAxjB,OAAA6jB,OACA7jB,OAAA8jB,eAAAH,EAAA,cAA8DrgB,OAAA,IAG9DqgB,EAAAI,YAAA,GAGA,SAAA3W,EAAApL,GAAiC,OAAA2hB,EAAAvW,GAAAwW,IAAAxW,EAAApL,WAjBkFqE,KAAhFic,EAAA,SAAEqB,GAoBrC,IAAAK,EACAC,EADAD,EApByDN,EAAAF,EAAAE,EAAAC,IAqBzDM,EAAAjkB,OAAAkkB,gBACA,CAAUC,UAAA,cAAgB/hB,OAAA,SAAAgiB,EAAAjK,GAAsCiK,EAAAD,UAAAhK,IAChE,SAAAiK,EAAAjK,GAAyB,QAAAkK,KAAAlK,IAAAlT,eAAAod,KAAAD,EAAAC,GAAAlK,EAAAkK,KAEzB9B,EAAA,SAAA6B,EAAAjK,GAEA,SAAAmK,IAAuBlhB,KAAAyK,YAAAuW,EADvBH,EAAAG,EAAAjK,GAEAiK,EAAAlkB,UAAA,OAAAia,EAAAna,OAAA6jB,OAAA1J,IAAAmK,EAAApkB,UAAAia,EAAAja,UAAA,IAAAokB,IAGA9B,EAAAxiB,OAAAa,QAAA,SAAA0jB,GACA,QAAAC,EAAAjb,EAAA,EAAAkb,EAAAC,UAAA1c,OAAgDuB,EAAAkb,EAAOlb,IAEvD,QAAA8a,KADAG,EAAAE,UAAAnb,GACAvJ,OAAAE,UAAA+G,eAAA1B,KAAAif,EAAAH,KAAAE,EAAAF,GAAAG,EAAAH,IAEA,OAAAE,GAGA9B,EAAA,SAAA+B,EAAAG,GACA,IAAAJ,EAAA,GACA,QAAAF,KAAAG,EAAAxkB,OAAAE,UAAA+G,eAAA1B,KAAAif,EAAAH,IAAAM,EAAAvgB,QAAAigB,GAAA,IACAE,EAAAF,GAAAG,EAAAH,IACA,SAAAG,GAAA,mBAAAxkB,OAAAM,sBACA,QAAAiJ,EAAA,EAAA8a,EAAArkB,OAAAM,sBAAAkkB,GAAgEjb,EAAA8a,EAAArc,OAAcuB,IAAAob,EAAAvgB,QAAAigB,EAAA9a,IAAA,IAC9Egb,EAAAF,EAAA9a,IAAAib,EAAAH,EAAA9a,KACA,OAAAgb,GAGA5C,EAAA,SAAA5T,EAAAiI,EAAA9N,EAAA0c,GACA,IAAAR,EAAAS,EAAAH,UAAA1c,OAAA8c,EAAAD,EAAA,EAAA7O,EAAA,OAAA4O,IAAA5kB,OAAAI,yBAAA4V,EAAA9N,GAAA0c,EACA,oBAAAG,SAAA,mBAAAA,QAAAC,SAAAF,EAAAC,QAAAC,SAAAjX,EAAAiI,EAAA9N,EAAA0c,QACA,QAAArb,EAAAwE,EAAA/F,OAAA,EAAgDuB,GAAA,EAAQA,KAAA6a,EAAArW,EAAAxE,MAAAub,GAAAD,EAAA,EAAAT,EAAAU,GAAAD,EAAA,EAAAT,EAAApO,EAAA9N,EAAA4c,GAAAV,EAAApO,EAAA9N,KAAA4c,GACxD,OAAAD,EAAA,GAAAC,GAAA9kB,OAAA8jB,eAAA9N,EAAA9N,EAAA4c,MAGApC,EAAA,SAAAuC,EAAAC,GACA,gBAAAlP,EAAA9N,GAAuCgd,EAAAlP,EAAA9N,EAAA+c,KAGvCtC,EAAA,SAAAwC,EAAAC,GACA,oBAAAL,SAAA,mBAAAA,QAAAM,SAAA,OAAAN,QAAAM,SAAAF,EAAAC,IAGAxC,EAAA,SAAA0C,EAAAC,EAAAC,EAAAC,GACA,WAAAD,MAAAxiB,UAAA,SAAAO,EAAAmiB,GACA,SAAAC,EAAAriB,GAAuC,IAAMsiB,EAAAH,EAAA1T,KAAAzO,IAA+B,MAAAqhB,GAAYe,EAAAf,IACxF,SAAAkB,EAAAviB,GAAsC,IAAMsiB,EAAAH,EAAA,MAAAniB,IAAmC,MAAAqhB,GAAYe,EAAAf,IAC3F,SAAAiB,EAAAxd,GAAmCA,EAAA0d,KAAAviB,EAAA6E,EAAA9E,OAAA,IAAAkiB,EAAA,SAAAjiB,GAAiEA,EAAA6E,EAAA9E,SAAyBD,KAAAsiB,EAAAE,GAC7HD,GAAAH,IAAAM,MAAAT,EAAAC,GAAA,KAAAxT,WAIA8Q,EAAA,SAAAyC,EAAA3Q,GACA,IAA4GqR,EAAAC,EAAA1B,EAAA2B,EAA5GC,EAAA,CAAiB/f,MAAA,EAAAggB,KAAA,WAA6B,KAAA7B,EAAA,SAAAA,EAAA,GAA0B,OAAAA,EAAA,IAAe8B,KAAA,GAAAC,IAAA,IACvF,OAAAJ,EAAA,CAAoBnU,KAAAwU,EAAA,GAAAC,MAAAD,EAAA,GAAAE,OAAAF,EAAA,IAAqD,mBAAAG,SAAAR,EAAAQ,OAAAC,UAAA,WAAoE,OAAAvjB,OAAe8iB,EAC5J,SAAAK,EAAA9B,GAA0B,gBAAAziB,GAAsB,OAChD,SAAA4kB,GACA,GAAAZ,EAAA,UAAAa,UAAA,mCACA,KAAAV,GAAA,IACA,GAAAH,EAAA,EAAAC,IAAA1B,EAAA0B,EAAA,EAAAW,EAAA,YAAAA,EAAA,uBAAArC,IAAAhf,KAAA0gB,EAAAW,EAAA,KAAAd,KAAA,OAAAvB,EAEA,OADA0B,EAAA,EAAA1B,IAAAqC,EAAA,GAAArC,EAAAjhB,QACAsjB,EAAA,IACA,cAAArC,EAAAqC,EAA2C,MAC3C,OAAsC,OAAtCT,EAAA/f,QAAsC,CAAS9C,MAAAsjB,EAAA,GAAAd,MAAA,GAC/C,OAAAK,EAAA/f,QAAsC6f,EAAAW,EAAA,GAAWA,EAAA,IAAU,SAC3D,OAAAA,EAAAT,EAAAG,IAAA3W,MAA6CwW,EAAAE,KAAA1W,MAAc,SAC3D,QACA,KAAA4U,KAAA4B,EAAAE,MAAAre,OAAA,GAAAuc,IAAAvc,OAAA,UAAA4e,EAAA,QAAAA,EAAA,KAAiHT,EAAA,EAAO,SACxH,OAAAS,EAAA,MAAArC,GAAAqC,EAAA,GAAArC,EAAA,IAAAqC,EAAA,GAAArC,EAAA,KAAoF4B,EAAA/f,MAAAwgB,EAAA,GAAiB,MACrG,OAAAA,EAAA,IAAAT,EAAA/f,MAAAme,EAAA,IAA4D4B,EAAA/f,MAAAme,EAAA,GAAgBA,EAAAqC,EAAQ,MACpF,GAAArC,GAAA4B,EAAA/f,MAAAme,EAAA,IAAkD4B,EAAA/f,MAAAme,EAAA,GAAgB4B,EAAAG,IAAApiB,KAAA0iB,GAAgB,MAClFrC,EAAA,IAAA4B,EAAAG,IAAA3W,MACAwW,EAAAE,KAAA1W,MAAqC,SAErCiX,EAAAjS,EAAApP,KAAA+f,EAAAa,GACa,MAAAxB,GAAYiC,EAAA,GAAAjC,GAAasB,EAAA,EAAS,QAAUD,EAAAzB,EAAA,EACzD,KAAAqC,EAAA,SAAAA,EAAA,GAAuC,OAAStjB,MAAAsjB,EAAA,GAAAA,EAAA,UAAAd,MAAA,GArBAF,CAAA,CAAAnB,EAAAziB,OAyBhD8gB,EAAA,SAAAgE,EAAAnD,GACA,QAAAU,KAAAyC,EAAAnD,EAAA1c,eAAAod,KAAAV,EAAAU,GAAAyC,EAAAzC,KAGAtB,EAAA,SAAAgE,GACA,IAAAD,EAAA,mBAAAJ,QAAAK,EAAAL,OAAAC,UAAApd,EAAA,EACA,OAAAud,IAAAvhB,KAAAwhB,GACA,CACAhV,KAAA,WAEA,OADAgV,GAAAxd,GAAAwd,EAAA/e,SAAA+e,OAAA,GACA,CAAwBzjB,MAAAyjB,KAAAxd,KAAAuc,MAAAiB,MAKxB/D,EAAA,SAAA+D,EAAAtC,GACA,IAAAqC,EAAA,mBAAAJ,QAAAK,EAAAL,OAAAC,UACA,IAAAG,EAAA,OAAAC,EACA,IAAAjC,EAAAH,EAAApb,EAAAud,EAAAvhB,KAAAwhB,GAAAC,EAAA,GACA,IACA,eAAAvC,QAAA,MAAAK,EAAAvb,EAAAwI,QAAA+T,MAAAkB,EAAA9iB,KAAA4gB,EAAAxhB,OAEA,MAAAoD,GAAuBie,EAAA,CAAMje,SAC7B,QACA,IACAoe,MAAAgB,OAAAgB,EAAAvd,EAAA,SAAAud,EAAAvhB,KAAAgE,GAEA,QAAqB,GAAAob,EAAA,MAAAA,EAAAje,OAErB,OAAAsgB,GAGA/D,EAAA,WACA,QAAA+D,EAAA,GAAAzd,EAAA,EAAgCA,EAAAmb,UAAA1c,OAAsBuB,IACtDyd,IAAAC,OAAAjE,EAAA0B,UAAAnb,KACA,OAAAyd,GAGA9D,EAAA,SAAAlhB,GACA,OAAAoB,gBAAA8f,GAAA9f,KAAApB,IAAAoB,MAAA,IAAA8f,EAAAlhB,IAGAmhB,EAAA,SAAAmC,EAAAC,EAAAE,GACA,IAAAiB,OAAAQ,cAAA,UAAAL,UAAA,wCACA,IAAAtd,EAAA2c,EAAAT,EAAAM,MAAAT,EAAAC,GAAA,IAAA4B,EAAA,GACA,OAAA5d,EAAA,GAAqBgd,EAAA,QAAAA,EAAA,SAAAA,EAAA,UAAAhd,EAAAmd,OAAAQ,eAAA,WAAsF,OAAA9jB,MAAemG,EAC1H,SAAAgd,EAAA9B,GAA0ByB,EAAAzB,KAAAlb,EAAAkb,GAAA,SAAAziB,GAAgC,WAAAgB,QAAA,SAAAkX,EAAAC,GAAqCgN,EAAAjjB,KAAA,CAAAugB,EAAAziB,EAAAkY,EAAAC,IAAA,GAAAiN,EAAA3C,EAAAziB,OAC/F,SAAAolB,EAAA3C,EAAAziB,GAA+B,KAC/B8iB,EADqCoB,EAAAzB,GAAAziB,IACXsB,iBAAA4f,EAAAlgB,QAAAO,QAAAuhB,EAAAxhB,MAAAtB,GAAAqB,KAAAgkB,EAAA3B,GAAA4B,EAAAH,EAAA,MAAArC,GAD4B,MAAAH,GAAY2C,EAAAH,EAAA,MAAAxC,GAClE,IAAAG,EACA,SAAAuC,EAAA/jB,GAAiC8jB,EAAA,OAAA9jB,GACjC,SAAAoiB,EAAApiB,GAAgC8jB,EAAA,QAAA9jB,GAChC,SAAAgkB,EAAAtB,EAAAhkB,GAA+BgkB,EAAAhkB,GAAAmlB,EAAAlM,QAAAkM,EAAAnf,QAAAof,EAAAD,EAAA,MAAAA,EAAA,SAG/B/D,EAAA,SAAA2D,GACA,IAAAxd,EAAA8a,EACA,OAAA9a,EAAA,GAAqBgd,EAAA,QAAAA,EAAA,iBAAA5B,GAA4C,MAAAA,IAAW4B,EAAA,UAAAhd,EAAAmd,OAAAC,UAAA,WAAqD,OAAAvjB,MAAemG,EAChJ,SAAAgd,EAAA9B,EAAAuB,GAA6Be,EAAAtC,KAAAlb,EAAAkb,GAAA,SAAAziB,GAAgC,OAAAqiB,MAAA,CAAoB/gB,MAAA4f,EAAA6D,EAAAtC,GAAAziB,IAAA8jB,KAAA,WAAArB,GAAgDuB,IAAAhkB,SAGjIqhB,EAAA,SAAA0D,GACA,IAAAL,OAAAQ,cAAA,UAAAL,UAAA,wCACA,IAAAC,EAAAC,EAAAL,OAAAQ,eACA,OAAAJ,IAAAvhB,KAAAwhB,GAAAhE,EAAAgE,IAGAzD,EAAA,SAAAiE,EAAAloB,GAEA,OADAW,OAAA8jB,eAAoC9jB,OAAA8jB,eAAAyD,EAAA,OAAuCjkB,MAAAjE,IAAwBkoB,EAAAloB,MACnGkoB,GAGAvD,EAAA,YAAAzB,GACAyB,EAAA,WAAAxB,GACAwB,EAAA,SAAAvB,GACAuB,EAAA,aAAArC,GACAqC,EAAA,UAAAtB,GACAsB,EAAA,aAAArB,GACAqB,EAAA,YAAApB,GACAoB,EAAA,cAAAnB,GACAmB,EAAA,eAAAlB,GACAkB,EAAA,WAAAjB,GACAiB,EAAA,SAAAhB,GACAgB,EAAA,WAAAf,GACAe,EAAA,UAAAd,GACAc,EAAA,mBAAAb,GACAa,EAAA,mBAAAZ,GACAY,EAAA,gBAAAX,GACAW,EAAA,uBAAAV,IA5LmHyC,MAAApC,EAA3F,CAACA,OAA0F6D,EAAA7D,QAAArB,GAHnH,yCC/BAkF,EAAA7D,QAAA,CAAkB8D,QAAA,sBAAAjE,KAAA,sBAAAkE,cAAA,+BAAAC,KAAA,sBAAAC,KAAA,2CCAlBJ,EAAA7D,QAAA,CAAkB8D,QAAA,0BAAAjE,KAAA,0BAAA1d,KAAA,0BAAA2b,SAAA","file":"main.6dc33249742ab7680020.bundle.js","sourcesContent":["import global from './global';\nimport has from '../has/has';\nimport { wrapNative } from './support/util';\n\nexport interface StringNormalize {\n\t/**\n\t * Returns the String value result of normalizing the string into the normalization form\n\t * named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n\t * @param target The target string\n\t * @param form Applicable values: \"NFC\", \"NFD\", \"NFKC\", or \"NFKD\", If not specified default\n\t * is \"NFC\"\n\t */\n\t(target: string, form: 'NFC' | 'NFD' | 'NFKC' | 'NFKD'): string;\n\n\t/**\n\t * Returns the String value result of normalizing the string into the normalization form\n\t * named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n\t * @param target The target string\n\t * @param form Applicable values: \"NFC\", \"NFD\", \"NFKC\", or \"NFKD\", If not specified default\n\t * is \"NFC\"\n\t */\n\t(target: string, form?: string): string;\n}\n\n/**\n * The minimum location of high surrogates\n */\nexport const HIGH_SURROGATE_MIN = 0xd800;\n\n/**\n * The maximum location of high surrogates\n */\nexport const HIGH_SURROGATE_MAX = 0xdbff;\n\n/**\n * The minimum location of low surrogates\n */\nexport const LOW_SURROGATE_MIN = 0xdc00;\n\n/**\n * The maximum location of low surrogates\n */\nexport const LOW_SURROGATE_MAX = 0xdfff;\n\n/* ES6 static methods */\n\n/**\n * Return the String value whose elements are, in order, the elements in the List elements.\n * If length is 0, the empty string is returned.\n * @param codePoints The code points to generate the string\n */\nexport let fromCodePoint: (...codePoints: number[]) => string;\n\n/**\n * `raw` is intended for use as a tag function of a Tagged Template String. When called\n * as such the first argument will be a well formed template call site object and the rest\n * parameter will contain the substitution values.\n * @param template A well-formed template string call site representation.\n * @param substitutions A set of substitution values.\n */\nexport let raw: (template: TemplateStringsArray, ...substitutions: any[]) => string;\n\n/* ES6 instance methods */\n\n/**\n * Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\n * value of the UTF-16 encoded code point starting at the string element at position pos in\n * the String resulting from converting this object to a String.\n * If there is no element at that position, the result is undefined.\n * If a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.\n */\nexport let codePointAt: (target: string, pos?: number) => number | undefined;\n\n/**\n * Returns true if the sequence of elements of searchString converted to a String is the\n * same as the corresponding elements of this object (converted to a String) starting at\n * endPosition – length(this). Otherwise returns false.\n */\nexport let endsWith: (target: string, searchString: string, endPosition?: number) => boolean;\n\n/**\n * Returns true if searchString appears as a substring of the result of converting this\n * object to a String, at one or more positions that are\n * greater than or equal to position; otherwise, returns false.\n * @param target The target string\n * @param searchString search string\n * @param position If position is undefined, 0 is assumed, so as to search all of the String.\n */\nexport let includes: (target: string, searchString: string, position?: number) => boolean;\n\n/**\n * Returns the String value result of normalizing the string into the normalization form\n * named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n * @param target The target string\n * @param form Applicable values: \"NFC\", \"NFD\", \"NFKC\", or \"NFKD\", If not specified default\n * is \"NFC\"\n */\nexport let normalize: StringNormalize;\n\n/**\n * Returns a String value that is made from count copies appended together. If count is 0,\n * T is the empty String is returned.\n * @param count number of copies to append\n */\nexport let repeat: (target: string, count?: number) => string;\n\n/**\n * Returns true if the sequence of elements of searchString converted to a String is the\n * same as the corresponding elements of this object (converted to a String) starting at\n * position. Otherwise returns false.\n */\nexport let startsWith: (target: string, searchString: string, position?: number) => boolean;\n\n/* ES7 instance methods */\n\n/**\n * Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\n * The padding is applied from the end (right) of the current string.\n *\n * @param target The target string\n * @param maxLength The length of the resulting string once the current string has been padded.\n *        If this parameter is smaller than the current string's length, the current string will be returned as it is.\n *\n * @param fillString The string to pad the current string with.\n *        If this string is too long, it will be truncated and the left-most part will be applied.\n *        The default value for this parameter is \" \" (U+0020).\n */\nexport let padEnd: (target: string, maxLength: number, fillString?: string) => string;\n\n/**\n * Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\n * The padding is applied from the start (left) of the current string.\n *\n * @param target The target string\n * @param maxLength The length of the resulting string once the current string has been padded.\n *        If this parameter is smaller than the current string's length, the current string will be returned as it is.\n *\n * @param fillString The string to pad the current string with.\n *        If this string is too long, it will be truncated and the left-most part will be applied.\n *        The default value for this parameter is \" \" (U+0020).\n */\nexport let padStart: (target: string, maxLength: number, fillString?: string) => string;\n\nif (has('es6-string') && has('es6-string-raw')) {\n\tfromCodePoint = global.String.fromCodePoint;\n\traw = global.String.raw;\n\n\tcodePointAt = wrapNative(global.String.prototype.codePointAt);\n\tendsWith = wrapNative(global.String.prototype.endsWith);\n\tincludes = wrapNative(global.String.prototype.includes);\n\tnormalize = wrapNative(global.String.prototype.normalize);\n\trepeat = wrapNative(global.String.prototype.repeat);\n\tstartsWith = wrapNative(global.String.prototype.startsWith);\n} else {\n\t/**\n\t * Validates that text is defined, and normalizes position (based on the given default if the input is NaN).\n\t * Used by startsWith, includes, and endsWith.\n\t *\n\t * @return Normalized position.\n\t */\n\tconst normalizeSubstringArgs = function(\n\t\tname: string,\n\t\ttext: string,\n\t\tsearch: string,\n\t\tposition: number,\n\t\tisEnd: boolean = false\n\t): [string, string, number] {\n\t\tif (text == null) {\n\t\t\tthrow new TypeError('string.' + name + ' requires a valid string to search against.');\n\t\t}\n\n\t\tconst length = text.length;\n\t\tposition = position !== position ? (isEnd ? length : 0) : position;\n\t\treturn [text, String(search), Math.min(Math.max(position, 0), length)];\n\t};\n\n\tfromCodePoint = function fromCodePoint(...codePoints: number[]): string {\n\t\t// Adapted from https://github.com/mathiasbynens/String.fromCodePoint\n\t\tconst length = arguments.length;\n\t\tif (!length) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromCharCode = String.fromCharCode;\n\t\tconst MAX_SIZE = 0x4000;\n\t\tlet codeUnits: number[] = [];\n\t\tlet index = -1;\n\t\tlet result = '';\n\n\t\twhile (++index < length) {\n\t\t\tlet codePoint = Number(arguments[index]);\n\n\t\t\t// Code points must be finite integers within the valid range\n\t\t\tlet isValid =\n\t\t\t\tisFinite(codePoint) && Math.floor(codePoint) === codePoint && codePoint >= 0 && codePoint <= 0x10ffff;\n\t\t\tif (!isValid) {\n\t\t\t\tthrow RangeError('string.fromCodePoint: Invalid code point ' + codePoint);\n\t\t\t}\n\n\t\t\tif (codePoint <= 0xffff) {\n\t\t\t\t// BMP code point\n\t\t\t\tcodeUnits.push(codePoint);\n\t\t\t} else {\n\t\t\t\t// Astral code point; split in surrogate halves\n\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\tcodePoint -= 0x10000;\n\t\t\t\tlet highSurrogate = (codePoint >> 10) + HIGH_SURROGATE_MIN;\n\t\t\t\tlet lowSurrogate = (codePoint % 0x400) + LOW_SURROGATE_MIN;\n\t\t\t\tcodeUnits.push(highSurrogate, lowSurrogate);\n\t\t\t}\n\n\t\t\tif (index + 1 === length || codeUnits.length > MAX_SIZE) {\n\t\t\t\tresult += fromCharCode.apply(null, codeUnits);\n\t\t\t\tcodeUnits.length = 0;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t};\n\n\traw = function raw(callSite: TemplateStringsArray, ...substitutions: any[]): string {\n\t\tlet rawStrings = callSite.raw;\n\t\tlet result = '';\n\t\tlet numSubstitutions = substitutions.length;\n\n\t\tif (callSite == null || callSite.raw == null) {\n\t\t\tthrow new TypeError('string.raw requires a valid callSite object with a raw value');\n\t\t}\n\n\t\tfor (let i = 0, length = rawStrings.length; i < length; i++) {\n\t\t\tresult += rawStrings[i] + (i < numSubstitutions && i < length - 1 ? substitutions[i] : '');\n\t\t}\n\n\t\treturn result;\n\t};\n\n\tcodePointAt = function codePointAt(text: string, position: number = 0): number | undefined {\n\t\t// Adapted from https://github.com/mathiasbynens/String.prototype.codePointAt\n\t\tif (text == null) {\n\t\t\tthrow new TypeError('string.codePointAt requries a valid string.');\n\t\t}\n\t\tconst length = text.length;\n\n\t\tif (position !== position) {\n\t\t\tposition = 0;\n\t\t}\n\t\tif (position < 0 || position >= length) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Get the first code unit\n\t\tconst first = text.charCodeAt(position);\n\t\tif (first >= HIGH_SURROGATE_MIN && first <= HIGH_SURROGATE_MAX && length > position + 1) {\n\t\t\t// Start of a surrogate pair (high surrogate and there is a next code unit); check for low surrogate\n\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\tconst second = text.charCodeAt(position + 1);\n\t\t\tif (second >= LOW_SURROGATE_MIN && second <= LOW_SURROGATE_MAX) {\n\t\t\t\treturn (first - HIGH_SURROGATE_MIN) * 0x400 + second - LOW_SURROGATE_MIN + 0x10000;\n\t\t\t}\n\t\t}\n\t\treturn first;\n\t};\n\n\tendsWith = function endsWith(text: string, search: string, endPosition?: number): boolean {\n\t\tif (search === '') {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (typeof endPosition === 'undefined') {\n\t\t\tendPosition = text.length;\n\t\t} else if (endPosition === null || isNaN(endPosition)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t[text, search, endPosition] = normalizeSubstringArgs('endsWith', text, search, endPosition, true);\n\n\t\tconst start = endPosition - search.length;\n\t\tif (start < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn text.slice(start, endPosition) === search;\n\t};\n\n\tincludes = function includes(text: string, search: string, position: number = 0): boolean {\n\t\t[text, search, position] = normalizeSubstringArgs('includes', text, search, position);\n\t\treturn text.indexOf(search, position) !== -1;\n\t};\n\n\trepeat = function repeat(text: string, count: number = 0): string {\n\t\t// Adapted from https://github.com/mathiasbynens/String.prototype.repeat\n\t\tif (text == null) {\n\t\t\tthrow new TypeError('string.repeat requires a valid string.');\n\t\t}\n\t\tif (count !== count) {\n\t\t\tcount = 0;\n\t\t}\n\t\tif (count < 0 || count === Infinity) {\n\t\t\tthrow new RangeError('string.repeat requires a non-negative finite count.');\n\t\t}\n\n\t\tlet result = '';\n\t\twhile (count) {\n\t\t\tif (count % 2) {\n\t\t\t\tresult += text;\n\t\t\t}\n\t\t\tif (count > 1) {\n\t\t\t\ttext += text;\n\t\t\t}\n\t\t\tcount >>= 1;\n\t\t}\n\t\treturn result;\n\t};\n\n\tstartsWith = function startsWith(text: string, search: string, position: number = 0): boolean {\n\t\tsearch = String(search);\n\t\t[text, search, position] = normalizeSubstringArgs('startsWith', text, search, position);\n\n\t\tconst end = position + search.length;\n\t\tif (end > text.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn text.slice(position, end) === search;\n\t};\n}\n\nif (has('es2017-string')) {\n\tpadEnd = wrapNative(global.String.prototype.padEnd);\n\tpadStart = wrapNative(global.String.prototype.padStart);\n} else {\n\tpadEnd = function padEnd(text: string, maxLength: number, fillString: string = ' '): string {\n\t\tif (text === null || text === undefined) {\n\t\t\tthrow new TypeError('string.repeat requires a valid string.');\n\t\t}\n\n\t\tif (maxLength === Infinity) {\n\t\t\tthrow new RangeError('string.padEnd requires a non-negative finite count.');\n\t\t}\n\n\t\tif (maxLength === null || maxLength === undefined || maxLength < 0) {\n\t\t\tmaxLength = 0;\n\t\t}\n\n\t\tlet strText = String(text);\n\t\tconst padding = maxLength - strText.length;\n\n\t\tif (padding > 0) {\n\t\t\tstrText +=\n\t\t\t\trepeat(fillString, Math.floor(padding / fillString.length)) +\n\t\t\t\tfillString.slice(0, padding % fillString.length);\n\t\t}\n\n\t\treturn strText;\n\t};\n\n\tpadStart = function padStart(text: string, maxLength: number, fillString: string = ' '): string {\n\t\tif (text === null || text === undefined) {\n\t\t\tthrow new TypeError('string.repeat requires a valid string.');\n\t\t}\n\n\t\tif (maxLength === Infinity) {\n\t\t\tthrow new RangeError('string.padStart requires a non-negative finite count.');\n\t\t}\n\n\t\tif (maxLength === null || maxLength === undefined || maxLength < 0) {\n\t\t\tmaxLength = 0;\n\t\t}\n\n\t\tlet strText = String(text);\n\t\tconst padding = maxLength - strText.length;\n\n\t\tif (padding > 0) {\n\t\t\tstrText =\n\t\t\t\trepeat(fillString, Math.floor(padding / fillString.length)) +\n\t\t\t\tfillString.slice(0, padding % fillString.length) +\n\t\t\t\tstrText;\n\t\t}\n\n\t\treturn strText;\n\t};\n}\n","import global from './global';\nimport has from '../has/has';\nimport { isSymbol } from './Symbol';\n\nexport interface ObjectAssign {\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param source The source object from which to copy properties.\n\t */\n\t<T, U>(target: T, source: U): T & U;\n\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param source1 The first source object from which to copy properties.\n\t * @param source2 The second source object from which to copy properties.\n\t */\n\t<T, U, V>(target: T, source1: U, source2: V): T & U & V;\n\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param source1 The first source object from which to copy properties.\n\t * @param source2 The second source object from which to copy properties.\n\t * @param source3 The third source object from which to copy properties.\n\t */\n\t<T, U, V, W>(target: T, source1: U, source2: V, source3: W): T & U & V & W;\n\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param sources One or more source objects from which to copy properties\n\t */\n\t(target: object, ...sources: any[]): any;\n}\n\nexport interface ObjectEnteries {\n\t/**\n\t * Returns an array of key/values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t<T extends { [key: string]: any }, K extends keyof T>(o: T): [keyof T, T[K]][];\n\n\t/**\n\t * Returns an array of key/values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t(o: object): [string, any][];\n}\n\nexport interface ObjectGetOwnPropertyDescriptors {\n\t<T>(o: T): { [K in keyof T]: PropertyDescriptor };\n\t(o: any): { [key: string]: PropertyDescriptor };\n}\n\nexport interface ObjectValues {\n\t/**\n\t * Returns an array of values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t<T>(o: { [s: string]: T }): T[];\n\n\t/**\n\t * Returns an array of values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t(o: object): any[];\n}\n\nexport let assign: ObjectAssign;\n\n/**\n * Gets the own property descriptor of the specified object.\n * An own property descriptor is one that is defined directly on the object and is not\n * inherited from the object's prototype.\n * @param o Object that contains the property.\n * @param p Name of the property.\n */\nexport let getOwnPropertyDescriptor: <T, K extends keyof T>(o: T, propertyKey: K) => PropertyDescriptor | undefined;\n\n/**\n * Returns the names of the own properties of an object. The own properties of an object are those that are defined directly\n * on that object, and are not inherited from the object's prototype. The properties of an object include both fields (objects) and functions.\n * @param o Object that contains the own properties.\n */\nexport let getOwnPropertyNames: (o: any) => string[];\n\n/**\n * Returns an array of all symbol properties found directly on object o.\n * @param o Object to retrieve the symbols from.\n */\nexport let getOwnPropertySymbols: (o: any) => symbol[];\n\n/**\n * Returns true if the values are the same value, false otherwise.\n * @param value1 The first value.\n * @param value2 The second value.\n */\nexport let is: (value1: any, value2: any) => boolean;\n\n/**\n * Returns the names of the enumerable properties and methods of an object.\n * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n */\nexport let keys: (o: object) => string[];\n\n/* ES7 Object static methods */\n\nexport let getOwnPropertyDescriptors: ObjectGetOwnPropertyDescriptors;\n\nexport let entries: ObjectEnteries;\n\nexport let values: ObjectValues;\n\nif (has('es6-object')) {\n\tconst globalObject = global.Object;\n\tassign = globalObject.assign;\n\tgetOwnPropertyDescriptor = globalObject.getOwnPropertyDescriptor;\n\tgetOwnPropertyNames = globalObject.getOwnPropertyNames;\n\tgetOwnPropertySymbols = globalObject.getOwnPropertySymbols;\n\tis = globalObject.is;\n\tkeys = globalObject.keys;\n} else {\n\tkeys = function symbolAwareKeys(o: object): string[] {\n\t\treturn Object.keys(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n\t};\n\n\tassign = function assign(target: any, ...sources: any[]) {\n\t\tif (target == null) {\n\t\t\t// TypeError if undefined or null\n\t\t\tthrow new TypeError('Cannot convert undefined or null to object');\n\t\t}\n\n\t\tconst to = Object(target);\n\t\tsources.forEach((nextSource) => {\n\t\t\tif (nextSource) {\n\t\t\t\t// Skip over if undefined or null\n\t\t\t\tkeys(nextSource).forEach((nextKey) => {\n\t\t\t\t\tto[nextKey] = nextSource[nextKey];\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn to;\n\t};\n\n\tgetOwnPropertyDescriptor = function<T, K extends keyof T>(o: T, prop: K): PropertyDescriptor | undefined {\n\t\tif (isSymbol(prop)) {\n\t\t\treturn Object.getOwnPropertyDescriptor(o, prop);\n\t\t} else {\n\t\t\treturn Object.getOwnPropertyDescriptor(o, prop);\n\t\t}\n\t};\n\n\tgetOwnPropertyNames = function getOwnPropertyNames(o: any): string[] {\n\t\treturn Object.getOwnPropertyNames(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n\t};\n\n\tgetOwnPropertySymbols = function getOwnPropertySymbols(o: any): symbol[] {\n\t\treturn Object.getOwnPropertyNames(o)\n\t\t\t.filter((key) => Boolean(key.match(/^@@.+/)))\n\t\t\t.map((key) => Symbol.for(key.substring(2)));\n\t};\n\n\tis = function is(value1: any, value2: any): boolean {\n\t\tif (value1 === value2) {\n\t\t\treturn value1 !== 0 || 1 / value1 === 1 / value2; // -0\n\t\t}\n\t\treturn value1 !== value1 && value2 !== value2; // NaN\n\t};\n}\n\nif (has('es2017-object')) {\n\tconst globalObject = global.Object;\n\tgetOwnPropertyDescriptors = globalObject.getOwnPropertyDescriptors;\n\tentries = globalObject.entries;\n\tvalues = globalObject.values;\n} else {\n\tgetOwnPropertyDescriptors = function getOwnPropertyDescriptors(o: any) {\n\t\treturn getOwnPropertyNames(o).reduce(\n\t\t\t(previous, key) => {\n\t\t\t\tprevious[key] = getOwnPropertyDescriptor(o, key)!;\n\t\t\t\treturn previous;\n\t\t\t},\n\t\t\t{} as { [key: string]: PropertyDescriptor }\n\t\t);\n\t};\n\n\tentries = function entries(o: any): [string, any][] {\n\t\treturn keys(o).map((key) => [key, o[key]] as [string, any]);\n\t};\n\n\tvalues = function values(o: any): any[] {\n\t\treturn keys(o).map((key) => o[key]);\n\t};\n}\n","import { isArrayLike, Iterable, IterableIterator, ShimIterator } from './iterator';\nimport global from './global';\nimport { is as objectIs } from './object';\nimport has from '../has/has';\nimport './Symbol';\n\nexport interface Map<K, V> {\n\t/**\n\t * Deletes all keys and their associated values.\n\t */\n\tclear(): void;\n\n\t/**\n\t * Deletes a given key and its associated value.\n\t *\n\t * @param key The key to delete\n\t * @return true if the key exists, false if it does not\n\t */\n\tdelete(key: K): boolean;\n\n\t/**\n\t * Returns an iterator that yields each key/value pair as an array.\n\t *\n\t * @return An iterator for each key/value pair in the instance.\n\t */\n\tentries(): IterableIterator<[K, V]>;\n\n\t/**\n\t * Executes a given function for each map entry. The function\n\t * is invoked with three arguments: the element value, the\n\t * element key, and the associated Map instance.\n\t *\n\t * @param callbackfn The function to execute for each map entry,\n\t * @param thisArg The value to use for `this` for each execution of the calback\n\t */\n\tforEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void;\n\n\t/**\n\t * Returns the value associated with a given key.\n\t *\n\t * @param key The key to look up\n\t * @return The value if one exists or undefined\n\t */\n\tget(key: K): V | undefined;\n\n\t/**\n\t * Returns an iterator that yields each key in the map.\n\t *\n\t * @return An iterator containing the instance's keys.\n\t */\n\tkeys(): IterableIterator<K>;\n\n\t/**\n\t * Checks for the presence of a given key.\n\t *\n\t * @param key The key to check for\n\t * @return true if the key exists, false if it does not\n\t */\n\thas(key: K): boolean;\n\n\t/**\n\t * Sets the value associated with a given key.\n\t *\n\t * @param key The key to define a value to\n\t * @param value The value to assign\n\t * @return The Map instance\n\t */\n\tset(key: K, value: V): this;\n\n\t/**\n\t * Returns the number of key / value pairs in the Map.\n\t */\n\treadonly size: number;\n\n\t/**\n\t * Returns an iterator that yields each value in the map.\n\t *\n\t * @return An iterator containing the instance's values.\n\t */\n\tvalues(): IterableIterator<V>;\n\n\t/** Returns an iterable of entries in the map. */\n\t[Symbol.iterator](): IterableIterator<[K, V]>;\n\n\treadonly [Symbol.toStringTag]: string;\n}\n\nexport interface MapConstructor {\n\t/**\n\t * Creates a new Map\n\t *\n\t * @constructor\n\t */\n\tnew (): Map<any, any>;\n\n\t/**\n\t * Creates a new Map\n\t *\n\t * @constructor\n\t *\n\t * @param iterator\n\t * Array or iterator containing two-item tuples used to initially populate the map.\n\t * The first item in each tuple corresponds to the key of the map entry.\n\t * The second item corresponds to the value of the map entry.\n\t */\n\tnew <K, V>(iterator?: [K, V][]): Map<K, V>;\n\n\t/**\n\t * Creates a new Map\n\t *\n\t * @constructor\n\t *\n\t * @param iterator\n\t * Array or iterator containing two-item tuples used to initially populate the map.\n\t * The first item in each tuple corresponds to the key of the map entry.\n\t * The second item corresponds to the value of the map entry.\n\t */\n\tnew <K, V>(iterator: Iterable<[K, V]>): Map<K, V>;\n\n\treadonly prototype: Map<any, any>;\n\n\treadonly [Symbol.species]: MapConstructor;\n}\n\nexport let Map: MapConstructor = global.Map;\n\nif (!has('es6-map')) {\n\tMap = class Map<K, V> {\n\t\tprotected readonly _keys: K[] = [];\n\t\tprotected readonly _values: V[] = [];\n\n\t\t/**\n\t\t * An alternative to Array.prototype.indexOf using Object.is\n\t\t * to check for equality. See http://mzl.la/1zuKO2V\n\t\t */\n\t\tprotected _indexOfKey(keys: K[], key: K): number {\n\t\t\tfor (let i = 0, length = keys.length; i < length; i++) {\n\t\t\t\tif (objectIs(keys[i], key)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t}\n\n\t\tstatic [Symbol.species] = Map;\n\n\t\tconstructor(iterable?: ArrayLike<[K, V]> | Iterable<[K, V]>) {\n\t\t\tif (iterable) {\n\t\t\t\tif (isArrayLike(iterable)) {\n\t\t\t\t\tfor (let i = 0; i < iterable.length; i++) {\n\t\t\t\t\t\tconst value = iterable[i];\n\t\t\t\t\t\tthis.set(value[0], value[1]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (const value of iterable) {\n\t\t\t\t\t\tthis.set(value[0], value[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tget size(): number {\n\t\t\treturn this._keys.length;\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis._keys.length = this._values.length = 0;\n\t\t}\n\n\t\tdelete(key: K): boolean {\n\t\t\tconst index = this._indexOfKey(this._keys, key);\n\t\t\tif (index < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis._keys.splice(index, 1);\n\t\t\tthis._values.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\n\t\tentries(): IterableIterator<[K, V]> {\n\t\t\tconst values = this._keys.map(\n\t\t\t\t(key: K, i: number): [K, V] => {\n\t\t\t\t\treturn [key, this._values[i]];\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn new ShimIterator(values);\n\t\t}\n\n\t\tforEach(callback: (value: V, key: K, mapInstance: Map<K, V>) => any, context?: {}) {\n\t\t\tconst keys = this._keys;\n\t\t\tconst values = this._values;\n\t\t\tfor (let i = 0, length = keys.length; i < length; i++) {\n\t\t\t\tcallback.call(context, values[i], keys[i], this);\n\t\t\t}\n\t\t}\n\n\t\tget(key: K): V | undefined {\n\t\t\tconst index = this._indexOfKey(this._keys, key);\n\t\t\treturn index < 0 ? undefined : this._values[index];\n\t\t}\n\n\t\thas(key: K): boolean {\n\t\t\treturn this._indexOfKey(this._keys, key) > -1;\n\t\t}\n\n\t\tkeys(): IterableIterator<K> {\n\t\t\treturn new ShimIterator(this._keys);\n\t\t}\n\n\t\tset(key: K, value: V): Map<K, V> {\n\t\t\tlet index = this._indexOfKey(this._keys, key);\n\t\t\tindex = index < 0 ? this._keys.length : index;\n\t\t\tthis._keys[index] = key;\n\t\t\tthis._values[index] = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tvalues(): IterableIterator<V> {\n\t\t\treturn new ShimIterator(this._values);\n\t\t}\n\n\t\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\t\treturn this.entries();\n\t\t}\n\n\t\t[Symbol.toStringTag]: 'Map' = 'Map';\n\t};\n}\n\nexport default Map;\n","import global from './global';\nimport { isArrayLike, Iterable } from './iterator';\nimport has from '../has/has';\nimport './Symbol';\n\nexport interface WeakMap<K extends object, V> {\n\t/**\n\t * Remove a `key` from the map\n\t *\n\t * @param key The key to remove\n\t * @return `true` if the value was removed, otherwise `false`\n\t */\n\tdelete(key: K): boolean;\n\n\t/**\n\t * Retrieve the value, based on the supplied `key`\n\t *\n\t * @param key The key to retrieve the `value` for\n\t * @return the `value` based on the `key` if found, otherwise `false`\n\t */\n\tget(key: K): V | undefined;\n\n\t/**\n\t * Determines if a `key` is present in the map\n\t *\n\t * @param key The `key` to check\n\t * @return `true` if the key is part of the map, otherwise `false`.\n\t */\n\thas(key: K): boolean;\n\n\t/**\n\t * Set a `value` for a particular `key`.\n\t *\n\t * @param key The `key` to set the `value` for\n\t * @param value The `value` to set\n\t * @return the instances\n\t */\n\tset(key: K, value: V): this;\n\n\treadonly [Symbol.toStringTag]: 'WeakMap';\n}\n\nexport interface WeakMapConstructor {\n\t/**\n\t * Create a new instance of a `WeakMap`\n\t *\n\t * @constructor\n\t */\n\tnew (): WeakMap<object, any>;\n\n\t/**\n\t * Create a new instance of a `WeakMap`\n\t *\n\t * @constructor\n\t *\n\t * @param iterable An iterable that contains yields up key/value pair entries\n\t */\n\tnew <K extends object, V>(iterable?: [K, V][]): WeakMap<K, V>;\n\n\t/**\n\t * Create a new instance of a `WeakMap`\n\t *\n\t * @constructor\n\t *\n\t * @param iterable An iterable that contains yields up key/value pair entries\n\t */\n\tnew <K extends object, V>(iterable: Iterable<[K, V]>): WeakMap<K, V>;\n\n\treadonly prototype: WeakMap<object, any>;\n}\n\nexport let WeakMap: WeakMapConstructor = global.WeakMap;\n\ninterface Entry<K, V> {\n\tkey: K;\n\tvalue: V;\n}\n\nif (!has('es6-weakmap')) {\n\tconst DELETED: any = {};\n\n\tconst getUID = function getUID(): number {\n\t\treturn Math.floor(Math.random() * 100000000);\n\t};\n\n\tconst generateName = (function() {\n\t\tlet startId = Math.floor(Date.now() % 100000000);\n\n\t\treturn function generateName(): string {\n\t\t\treturn '__wm' + getUID() + (startId++ + '__');\n\t\t};\n\t})();\n\n\tWeakMap = class WeakMap<K, V> {\n\t\tprivate readonly _name: string;\n\t\tprivate readonly _frozenEntries: Entry<K, V>[];\n\n\t\tconstructor(iterable?: ArrayLike<[K, V]> | Iterable<[K, V]>) {\n\t\t\tthis._name = generateName();\n\n\t\t\tthis._frozenEntries = [];\n\n\t\t\tif (iterable) {\n\t\t\t\tif (isArrayLike(iterable)) {\n\t\t\t\t\tfor (let i = 0; i < iterable.length; i++) {\n\t\t\t\t\t\tconst item = iterable[i];\n\t\t\t\t\t\tthis.set(item[0], item[1]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (const [key, value] of iterable) {\n\t\t\t\t\t\tthis.set(key, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprivate _getFrozenEntryIndex(key: any): number {\n\t\t\tfor (let i = 0; i < this._frozenEntries.length; i++) {\n\t\t\t\tif (this._frozenEntries[i].key === key) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn -1;\n\t\t}\n\n\t\tdelete(key: any): boolean {\n\t\t\tif (key === undefined || key === null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst entry: Entry<K, V> = key[this._name];\n\t\t\tif (entry && entry.key === key && entry.value !== DELETED) {\n\t\t\t\tentry.value = DELETED;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst frozenIndex = this._getFrozenEntryIndex(key);\n\t\t\tif (frozenIndex >= 0) {\n\t\t\t\tthis._frozenEntries.splice(frozenIndex, 1);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tget(key: any): V | undefined {\n\t\t\tif (key === undefined || key === null) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst entry: Entry<K, V> = key[this._name];\n\t\t\tif (entry && entry.key === key && entry.value !== DELETED) {\n\t\t\t\treturn entry.value;\n\t\t\t}\n\n\t\t\tconst frozenIndex = this._getFrozenEntryIndex(key);\n\t\t\tif (frozenIndex >= 0) {\n\t\t\t\treturn this._frozenEntries[frozenIndex].value;\n\t\t\t}\n\t\t}\n\n\t\thas(key: any): boolean {\n\t\t\tif (key === undefined || key === null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst entry: Entry<K, V> = key[this._name];\n\t\t\tif (Boolean(entry && entry.key === key && entry.value !== DELETED)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst frozenIndex = this._getFrozenEntryIndex(key);\n\t\t\tif (frozenIndex >= 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tset(key: any, value?: any): this {\n\t\t\tif (!key || (typeof key !== 'object' && typeof key !== 'function')) {\n\t\t\t\tthrow new TypeError('Invalid value used as weak map key');\n\t\t\t}\n\t\t\tlet entry: Entry<K, V> = key[this._name];\n\t\t\tif (!entry || entry.key !== key) {\n\t\t\t\tentry = Object.create(null, {\n\t\t\t\t\tkey: { value: key }\n\t\t\t\t});\n\n\t\t\t\tif (Object.isFrozen(key)) {\n\t\t\t\t\tthis._frozenEntries.push(entry);\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty(key, this._name, {\n\t\t\t\t\t\tvalue: entry\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tentry.value = value;\n\t\t\treturn this;\n\t\t}\n\n\t\t[Symbol.toStringTag]: 'WeakMap' = 'WeakMap';\n\t};\n}\n\nexport default WeakMap;\n","import {\n\tConstructor,\n\tDefaultWidgetBaseInterface,\n\tDeferredVirtualProperties,\n\tDNode,\n\tVNode,\n\tRegistryLabel,\n\tVNodeProperties,\n\tWidgetBaseInterface,\n\tWNode,\n\tDomOptions,\n\tRenderResult,\n\tDomVNode,\n\tLazyWidget,\n\tLazyDefine\n} from './interfaces';\n\n/**\n * The identifier for a WNode type\n */\nexport const WNODE = '__WNODE_TYPE';\n\n/**\n * The identifier for a VNode type\n */\nexport const VNODE = '__VNODE_TYPE';\n\n/**\n * The identifier for a VNode type created using dom()\n */\nexport const DOMVNODE = '__DOMVNODE_TYPE';\n\n/**\n * Helper function that returns true if the `DNode` is a `WNode` using the `type` property\n */\nexport function isWNode<W extends WidgetBaseInterface = DefaultWidgetBaseInterface>(\n\tchild: DNode<W> | any\n): child is WNode<W> {\n\treturn Boolean(child && child !== true && typeof child !== 'string' && child.type === WNODE);\n}\n\n/**\n * Helper function that returns true if the `DNode` is a `VNode` using the `type` property\n */\nexport function isVNode(child: DNode): child is VNode {\n\treturn Boolean(\n\t\tchild && child !== true && typeof child !== 'string' && (child.type === VNODE || child.type === DOMVNODE)\n\t);\n}\n\n/**\n * Helper function that returns true if the `DNode` is a `VNode` created with `dom()` using the `type` property\n */\nexport function isDomVNode(child: DNode): child is DomVNode {\n\treturn Boolean(child && child !== true && typeof child !== 'string' && child.type === DOMVNODE);\n}\n\nexport function isElementNode(value: any): value is Element {\n\treturn !!value.tagName;\n}\n\n/**\n * Interface for the decorate modifier\n */\nexport interface Modifier<T extends DNode> {\n\t(dNode: T, breaker: () => void): void;\n}\n\n/**\n * The predicate function for decorate\n */\nexport interface Predicate<T extends DNode> {\n\t(dNode: DNode): dNode is T;\n}\n\n/**\n * Decorator options\n */\nexport interface DecorateOptions<T extends DNode> {\n\tmodifier: Modifier<T>;\n\tpredicate?: Predicate<T>;\n\tshallow?: boolean;\n}\n\n/**\n * Generic decorate function for DNodes. The nodes are modified in place based on the provided predicate\n * and modifier functions.\n *\n * The children of each node are flattened and added to the array for decoration.\n *\n * If no predicate is supplied then the modifier will be executed on all nodes. A `breaker` function is passed to the\n * modifier which will drain the nodes array and exit the decoration.\n *\n * When the `shallow` options is set to `true` the only the top node or nodes will be decorated (only supported using\n * `DecorateOptions`).\n */\nexport function decorate<T extends DNode>(dNodes: DNode, options: DecorateOptions<T>): DNode;\nexport function decorate<T extends DNode>(dNodes: DNode[], options: DecorateOptions<T>): DNode[];\nexport function decorate<T extends DNode>(dNodes: DNode | DNode[], options: DecorateOptions<T>): DNode | DNode[];\nexport function decorate<T extends DNode>(dNodes: DNode, modifier: Modifier<T>, predicate: Predicate<T>): DNode;\nexport function decorate<T extends DNode>(dNodes: DNode[], modifier: Modifier<T>, predicate: Predicate<T>): DNode[];\nexport function decorate<T extends DNode>(\n\tdNodes: RenderResult,\n\tmodifier: Modifier<T>,\n\tpredicate: Predicate<T>\n): RenderResult;\nexport function decorate(dNodes: DNode, modifier: Modifier<DNode>): DNode;\nexport function decorate(dNodes: DNode[], modifier: Modifier<DNode>): DNode[];\nexport function decorate(dNodes: RenderResult, modifier: Modifier<DNode>): RenderResult;\nexport function decorate(\n\tdNodes: DNode | DNode[],\n\toptionsOrModifier: Modifier<DNode> | DecorateOptions<DNode>,\n\tpredicate?: Predicate<DNode>\n): DNode | DNode[] {\n\tlet shallow = false;\n\tlet modifier;\n\tif (typeof optionsOrModifier === 'function') {\n\t\tmodifier = optionsOrModifier;\n\t} else {\n\t\tmodifier = optionsOrModifier.modifier;\n\t\tpredicate = optionsOrModifier.predicate;\n\t\tshallow = optionsOrModifier.shallow || false;\n\t}\n\n\tlet nodes = Array.isArray(dNodes) ? [...dNodes] : [dNodes];\n\tfunction breaker() {\n\t\tnodes = [];\n\t}\n\twhile (nodes.length) {\n\t\tconst node = nodes.shift();\n\t\tif (node && node !== true) {\n\t\t\tif (!shallow && (isWNode(node) || isVNode(node)) && node.children) {\n\t\t\t\tnodes = [...nodes, ...node.children];\n\t\t\t}\n\t\t\tif (!predicate || predicate(node)) {\n\t\t\t\tmodifier(node, breaker);\n\t\t\t}\n\t\t}\n\t}\n\treturn dNodes;\n}\n\n/**\n * Wrapper function for calls to create a widget.\n */\nexport function w<W extends WidgetBaseInterface>(\n\tnode: WNode<W>,\n\tproperties: Partial<W['properties']>,\n\tchildren?: W['children']\n): WNode<W>;\nexport function w<W extends WidgetBaseInterface>(\n\twidgetConstructor: Constructor<W> | RegistryLabel | LazyWidget<W> | LazyDefine<W>,\n\tproperties: W['properties'],\n\tchildren?: W['children']\n): WNode<W>;\nexport function w<W extends WidgetBaseInterface>(\n\twidgetConstructorOrNode: Constructor<W> | RegistryLabel | WNode<W> | LazyWidget<W> | LazyDefine<W>,\n\tproperties: W['properties'],\n\tchildren?: W['children']\n): WNode<W> {\n\tif (isWNode(widgetConstructorOrNode)) {\n\t\tproperties = { ...(widgetConstructorOrNode.properties as any), ...(properties as any) };\n\t\tchildren = children ? children : widgetConstructorOrNode.children;\n\t\twidgetConstructorOrNode = widgetConstructorOrNode.widgetConstructor;\n\t}\n\n\treturn {\n\t\tchildren: children || [],\n\t\twidgetConstructor: widgetConstructorOrNode,\n\t\tproperties,\n\t\ttype: WNODE\n\t};\n}\n\n/**\n * Wrapper function for calls to create VNodes.\n */\nexport function v(node: VNode, properties: VNodeProperties, children: undefined | DNode[]): VNode;\nexport function v(node: VNode, properties: VNodeProperties): VNode;\nexport function v(tag: string, children: undefined | DNode[]): VNode;\nexport function v(tag: string, properties: DeferredVirtualProperties | VNodeProperties, children?: DNode[]): VNode;\nexport function v(tag: string): VNode;\nexport function v(\n\ttag: string | VNode,\n\tpropertiesOrChildren: VNodeProperties | DeferredVirtualProperties | DNode[] = {},\n\tchildren: undefined | DNode[] = undefined\n): VNode {\n\tlet properties: VNodeProperties | DeferredVirtualProperties = propertiesOrChildren;\n\tlet deferredPropertiesCallback;\n\n\tif (Array.isArray(propertiesOrChildren)) {\n\t\tchildren = propertiesOrChildren;\n\t\tproperties = {};\n\t}\n\n\tif (typeof properties === 'function') {\n\t\tdeferredPropertiesCallback = properties;\n\t\tproperties = {};\n\t}\n\n\tif (isVNode(tag)) {\n\t\tlet { classes = [], styles = {}, ...newProperties } = properties;\n\t\tlet { classes: nodeClasses = [], styles: nodeStyles = {}, ...nodeProperties } = tag.properties;\n\t\tnodeClasses = Array.isArray(nodeClasses) ? nodeClasses : [nodeClasses];\n\t\tclasses = Array.isArray(classes) ? classes : [classes];\n\t\tstyles = { ...nodeStyles, ...styles };\n\t\tproperties = { ...nodeProperties, ...newProperties, classes: [...nodeClasses, ...classes], styles };\n\t\tchildren = children ? children : tag.children;\n\t\ttag = tag.tag;\n\t}\n\n\treturn {\n\t\ttag,\n\t\tdeferredPropertiesCallback,\n\t\toriginalProperties: {},\n\t\tchildren,\n\t\tproperties,\n\t\ttype: VNODE\n\t};\n}\n\n/**\n * Create a VNode for an existing DOM Node.\n */\nexport function dom(\n\t{ node, attrs = {}, props = {}, on = {}, diffType = 'none', onAttach }: DomOptions,\n\tchildren?: DNode[]\n): DomVNode {\n\treturn {\n\t\ttag: isElementNode(node) ? node.tagName.toLowerCase() : '',\n\t\tproperties: props,\n\t\tattributes: attrs,\n\t\tevents: on,\n\t\tchildren,\n\t\ttype: DOMVNODE,\n\t\tdomNode: node,\n\t\ttext: isElementNode(node) ? undefined : node.data,\n\t\tdiffType,\n\t\tonAttach\n\t};\n}\n","import { Thenable } from './interfaces';\nimport global from './global';\nimport { queueMicroTask } from './support/queue';\nimport { Iterable } from './iterator';\nimport './Symbol';\nimport has from '../has/has';\n\n/**\n * Executor is the interface for functions used to initialize a Promise.\n */\nexport interface Executor<T> {\n\t/**\n\t * The executor for the promise\n\t *\n\t * @param resolve The resolver callback of the promise\n\t * @param reject The rejector callback of the promise\n\t */\n\t(resolve: (value?: T | PromiseLike<T>) => void, reject: (reason?: any) => void): void;\n}\n\ndeclare global {\n\tinterface Promise<T> {\n\t\tfinally(onfinally?: (() => void) | undefined | null): Promise<T>;\n\t}\n}\n\nexport let ShimPromise: typeof Promise = global.Promise;\n\nexport const isThenable = function isThenable<T>(value: any): value is PromiseLike<T> {\n\treturn value && typeof value.then === 'function';\n};\n\nif (!has('es6-promise')) {\n\tconst enum State {\n\t\tFulfilled,\n\t\tPending,\n\t\tRejected\n\t}\n\n\tglobal.Promise = ShimPromise = class Promise<T> implements Thenable<T> {\n\t\tstatic all(iterable: Iterable<any | PromiseLike<any>> | (any | PromiseLike<any>)[]): Promise<any> {\n\t\t\treturn new this(function(resolve, reject) {\n\t\t\t\tconst values: any[] = [];\n\t\t\t\tlet complete = 0;\n\t\t\t\tlet total = 0;\n\t\t\t\tlet populating = true;\n\n\t\t\t\tfunction fulfill(index: number, value: any): void {\n\t\t\t\t\tvalues[index] = value;\n\t\t\t\t\t++complete;\n\t\t\t\t\tfinish();\n\t\t\t\t}\n\n\t\t\t\tfunction finish(): void {\n\t\t\t\t\tif (populating || complete < total) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tresolve(values);\n\t\t\t\t}\n\n\t\t\t\tfunction processItem(index: number, item: any): void {\n\t\t\t\t\t++total;\n\t\t\t\t\tif (isThenable(item)) {\n\t\t\t\t\t\t// If an item Promise rejects, this Promise is immediately rejected with the item\n\t\t\t\t\t\t// Promise's rejection error.\n\t\t\t\t\t\titem.then(fulfill.bind(null, index), reject);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tPromise.resolve(item).then(fulfill.bind(null, index));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet i = 0;\n\t\t\t\tfor (const value of iterable) {\n\t\t\t\t\tprocessItem(i, value);\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\tpopulating = false;\n\n\t\t\t\tfinish();\n\t\t\t});\n\t\t}\n\n\t\tstatic race<T>(iterable: Iterable<T | PromiseLike<T>> | (T | PromiseLike<T>)[]): Promise<T[]> {\n\t\t\treturn new this(function(resolve: (value?: any) => void, reject) {\n\t\t\t\tfor (const item of iterable) {\n\t\t\t\t\tif (item instanceof Promise) {\n\t\t\t\t\t\t// If a Promise item rejects, this Promise is immediately rejected with the item\n\t\t\t\t\t\t// Promise's rejection error.\n\t\t\t\t\t\titem.then(resolve, reject);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tPromise.resolve(item).then(resolve);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tstatic reject(reason?: any): Promise<never> {\n\t\t\treturn new this(function(resolve, reject) {\n\t\t\t\treject(reason);\n\t\t\t});\n\t\t}\n\n\t\tstatic resolve(): Promise<void>;\n\t\tstatic resolve<T>(value: T | PromiseLike<T>): Promise<T>;\n\t\tstatic resolve<T>(value?: any): Promise<T> {\n\t\t\treturn new this(function(resolve) {\n\t\t\t\tresolve(<T>value);\n\t\t\t});\n\t\t}\n\n\t\tstatic [Symbol.species]: PromiseConstructor = ShimPromise as PromiseConstructor;\n\n\t\t/**\n\t\t * Creates a new Promise.\n\t\t *\n\t\t * @constructor\n\t\t *\n\t\t * @param executor\n\t\t * The executor function is called immediately when the Promise is instantiated. It is responsible for\n\t\t * starting the asynchronous operation when it is invoked.\n\t\t *\n\t\t * The executor must call either the passed `resolve` function when the asynchronous operation has completed\n\t\t * successfully, or the `reject` function when the operation fails.\n\t\t */\n\t\tconstructor(executor: Executor<T>) {\n\t\t\t/**\n\t\t\t * If true, the resolution of this promise is chained (\"locked in\") to another promise.\n\t\t\t */\n\t\t\tlet isChained = false;\n\n\t\t\t/**\n\t\t\t * Whether or not this promise is in a resolved state.\n\t\t\t */\n\t\t\tconst isResolved = (): boolean => {\n\t\t\t\treturn this.state !== State.Pending || isChained;\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Callbacks that should be invoked once the asynchronous operation has completed.\n\t\t\t */\n\t\t\tlet callbacks: null | (Array<() => void>) = [];\n\n\t\t\t/**\n\t\t\t * Initially pushes callbacks onto a queue for execution once this promise settles. After the promise settles,\n\t\t\t * enqueues callbacks for execution on the next event loop turn.\n\t\t\t */\n\t\t\tlet whenFinished = function(callback: () => void): void {\n\t\t\t\tif (callbacks) {\n\t\t\t\t\tcallbacks.push(callback);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Settles this promise.\n\t\t\t *\n\t\t\t * @param newState The resolved state for this promise.\n\t\t\t * @param {T|any} value The resolved value for this promise.\n\t\t\t */\n\t\t\tconst settle = (newState: State, value: any): void => {\n\t\t\t\t// A promise can only be settled once.\n\t\t\t\tif (this.state !== State.Pending) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.state = newState;\n\t\t\t\tthis.resolvedValue = value;\n\t\t\t\twhenFinished = queueMicroTask;\n\n\t\t\t\t// Only enqueue a callback runner if there are callbacks so that initially fulfilled Promises don't have to\n\t\t\t\t// wait an extra turn.\n\t\t\t\tif (callbacks && callbacks.length > 0) {\n\t\t\t\t\tqueueMicroTask(function(): void {\n\t\t\t\t\t\tif (callbacks) {\n\t\t\t\t\t\t\tlet count = callbacks.length;\n\t\t\t\t\t\t\tfor (let i = 0; i < count; ++i) {\n\t\t\t\t\t\t\t\tcallbacks[i].call(null);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcallbacks = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Resolves this promise.\n\t\t\t *\n\t\t\t * @param newState The resolved state for this promise.\n\t\t\t * @param {T|any} value The resolved value for this promise.\n\t\t\t */\n\t\t\tconst resolve = (newState: State, value: any): void => {\n\t\t\t\tif (isResolved()) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (isThenable(value)) {\n\t\t\t\t\tvalue.then(settle.bind(null, State.Fulfilled), settle.bind(null, State.Rejected));\n\t\t\t\t\tisChained = true;\n\t\t\t\t} else {\n\t\t\t\t\tsettle(newState, value);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.then = <TResult1 = T, TResult2 = never>(\n\t\t\t\tonFulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,\n\t\t\t\tonRejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null\n\t\t\t): Promise<TResult1 | TResult2> => {\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\t// whenFinished initially queues up callbacks for execution after the promise has settled. Once the\n\t\t\t\t\t// promise has settled, whenFinished will schedule callbacks for execution on the next turn through the\n\t\t\t\t\t// event loop.\n\t\t\t\t\twhenFinished(() => {\n\t\t\t\t\t\tconst callback: ((value?: any) => any) | undefined | null =\n\t\t\t\t\t\t\tthis.state === State.Rejected ? onRejected : onFulfilled;\n\n\t\t\t\t\t\tif (typeof callback === 'function') {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tresolve(callback(this.resolvedValue));\n\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (this.state === State.Rejected) {\n\t\t\t\t\t\t\treject(this.resolvedValue);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresolve(this.resolvedValue);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\texecutor(resolve.bind(null, State.Fulfilled), resolve.bind(null, State.Rejected));\n\t\t\t} catch (error) {\n\t\t\t\tsettle(State.Rejected, error);\n\t\t\t}\n\t\t}\n\n\t\tcatch<TResult = never>(\n\t\t\tonRejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null\n\t\t): Promise<T | TResult> {\n\t\t\treturn this.then(undefined, onRejected);\n\t\t}\n\n\t\t/**\n\t\t * The current state of this promise.\n\t\t */\n\t\tprivate state = State.Pending;\n\n\t\t/**\n\t\t * The resolved value for this promise.\n\t\t *\n\t\t * @type {T|any}\n\t\t */\n\t\tprivate resolvedValue: any;\n\n\t\tthen: <TResult1 = T, TResult2 = never>(\n\t\t\tonfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,\n\t\t\tonrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null\n\t\t) => Promise<TResult1 | TResult2>;\n\n\t\t[Symbol.toStringTag]: 'Promise' = 'Promise';\n\t} as any;\n\t// this cast is needed in order to omit finally in the class declaration; this was done so the finally code\n\t// is not duplicated and always added in the conditional below\n}\n\nif (!has('es2018-promise-finally')) {\n\tglobal.Promise.prototype.finally = function<T>(\n\t\tthis: Promise<T>,\n\t\tonFinally: (() => any) | undefined | null\n\t): Promise<any> {\n\t\treturn this.then(\n\t\t\tonFinally && ((value: T) => Promise.resolve(onFinally()).then(() => value)),\n\t\t\tonFinally &&\n\t\t\t\t((reason: any) =>\n\t\t\t\t\tPromise.resolve(onFinally()).then(() => {\n\t\t\t\t\t\tthrow reason;\n\t\t\t\t\t}))\n\t\t);\n\t};\n}\n\nexport default ShimPromise;\n","import Promise from '../shim/Promise';\n\n/**\n * Used through the toolkit as a consistent API to manage how callers can \"cleanup\"\n * when doing a function.\n */\nexport interface Handle {\n\t/**\n\t * Perform the destruction/cleanup logic associated with this Handle\n\t */\n\tdestroy(): void;\n}\n\n/**\n * No op function used to replace a Destroyable instance's `destroy` method, once the instance has been destroyed\n */\nfunction noop(): Promise<boolean> {\n\treturn Promise.resolve(false);\n}\n\n/**\n * No op function used to replace a Destroyable instance's `own` method, once the instance has been destroyed\n */\nfunction destroyed(): never {\n\tthrow new Error('Call made to destroyed method');\n}\n\nexport class Destroyable {\n\t/**\n\t * The instance's handles\n\t */\n\tprivate handles: Handle[];\n\n\t/**\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tthis.handles = [];\n\t}\n\n\t/**\n\t * Register handles for the instance that will be destroyed when `this.destroy` is called\n\t *\n\t * @param {Handle} handle The handle to add for the instance\n\t * @returns {Handle} A wrapper Handle. When the wrapper Handle's `destroy` method is invoked, the original handle is\n\t *                   removed from the instance, and its `destroy` method is invoked.\n\t */\n\town(handle: Handle): Handle {\n\t\tconst { handles: _handles } = this;\n\t\t_handles.push(handle);\n\t\treturn {\n\t\t\tdestroy() {\n\t\t\t\t_handles.splice(_handles.indexOf(handle));\n\t\t\t\thandle.destroy();\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Destroys all handlers registered for the instance\n\t *\n\t * @returns {Promise<any} A Promise that resolves once all handles have been destroyed\n\t */\n\tdestroy(): Promise<any> {\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.handles.forEach((handle) => {\n\t\t\t\thandle && handle.destroy && handle.destroy();\n\t\t\t});\n\t\t\tthis.destroy = noop;\n\t\t\tthis.own = destroyed;\n\t\t\tresolve(true);\n\t\t});\n\t}\n}\n\nexport default Destroyable;\n","import Map from '../shim/Map';\nimport { Destroyable, Handle } from './Destroyable';\n\n/**\n * Map of computed regular expressions, keyed by string\n */\nconst regexMap = new Map<string, RegExp>();\n\nexport type EventType = string | symbol;\n\n/**\n * The base event object, which provides a `type` property\n */\nexport interface EventObject<T = EventType> {\n\t/**\n\t * The type of the event\n\t */\n\treadonly type: T;\n}\n\n/**\n * Determines if the event type glob has been matched\n *\n * @returns boolean that indicates if the glob is matched\n */\nexport function isGlobMatch(globString: string | symbol, targetString: string | symbol): boolean {\n\tif (typeof targetString === 'string' && typeof globString === 'string' && globString.indexOf('*') !== -1) {\n\t\tlet regex: RegExp;\n\t\tif (regexMap.has(globString)) {\n\t\t\tregex = regexMap.get(globString)!;\n\t\t} else {\n\t\t\tregex = new RegExp(`^${globString.replace(/\\*/g, '.*')}$`);\n\t\t\tregexMap.set(globString, regex);\n\t\t}\n\t\treturn regex.test(targetString);\n\t} else {\n\t\treturn globString === targetString;\n\t}\n}\n\nexport type EventedCallback<T = EventType, E extends EventObject<T> = EventObject<T>> = {\n\t/**\n\t * A callback that takes an `event` argument\n\t *\n\t * @param event The event object\n\t */\n\n\t(event: E): boolean | void;\n};\n\nexport interface CustomEventTypes<T extends EventObject<any> = EventObject<any>> {\n\t[index: string]: T;\n}\n\n/**\n * A type which is either a targeted event listener or an array of listeners\n * @template T The type of target for the events\n * @template E The event type for the events\n */\nexport type EventedCallbackOrArray<T = EventType, E extends EventObject<T> = EventObject<T>> =\n\t| EventedCallback<T, E>\n\t| EventedCallback<T, E>[];\n\n/**\n * Event Class\n */\nexport class Evented<\n\tM extends CustomEventTypes = {},\n\tT = EventType,\n\tO extends EventObject<T> = EventObject<T>\n> extends Destroyable {\n\t// The following member is purely so TypeScript remembers the type of `M` when extending so\n\t// that the utilities in `on.ts` will work https://github.com/Microsoft/TypeScript/issues/20348\n\t// tslint:disable-next-line\n\tprotected __typeMap__?: M;\n\t/**\n\t * map of listeners keyed by event type\n\t */\n\tprotected listenersMap: Map<T | keyof M, EventedCallback<T, O>[]> = new Map();\n\n\t/**\n\t * Emits the event object for the specified type\n\t *\n\t * @param event the event to emit\n\t */\n\temit<K extends keyof M>(event: M[K]): void;\n\temit(event: O): void;\n\temit(event: any): void {\n\t\tthis.listenersMap.forEach((methods, type) => {\n\t\t\tif (isGlobMatch(type as any, event.type)) {\n\t\t\t\t[...methods].forEach((method) => {\n\t\t\t\t\tmethod.call(this, event);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Catch all handler for various call signatures. The signatures are defined in\n\t * `BaseEventedEvents`.  You can add your own event type -> handler types by extending\n\t * `BaseEventedEvents`.  See example for details.\n\t *\n\t * @param args\n\t *\n\t * @example\n\t *\n\t * interface WidgetBaseEvents extends BaseEventedEvents {\n\t *     (type: 'properties:changed', handler: PropertiesChangedHandler): Handle;\n\t * }\n\t * class WidgetBase extends Evented {\n\t *    on: WidgetBaseEvents;\n\t * }\n\t *\n\t * @return {any}\n\t */\n\ton<K extends keyof M>(type: K, listener: EventedCallbackOrArray<K, M[K]>): Handle;\n\ton(type: T, listener: EventedCallbackOrArray<T, O>): Handle;\n\ton(type: any, listener: EventedCallbackOrArray<any, any>): Handle {\n\t\tif (Array.isArray(listener)) {\n\t\t\tconst handles = listener.map((listener) => this._addListener(type, listener));\n\t\t\treturn {\n\t\t\t\tdestroy() {\n\t\t\t\t\thandles.forEach((handle) => handle.destroy());\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\treturn this._addListener(type, listener);\n\t}\n\n\tprivate _addListener(type: T | keyof M, listener: EventedCallback<T, O>) {\n\t\tconst listeners = this.listenersMap.get(type) || [];\n\t\tlisteners.push(listener);\n\t\tthis.listenersMap.set(type, listeners);\n\t\treturn {\n\t\t\tdestroy: () => {\n\t\t\t\tconst listeners = this.listenersMap.get(type) || [];\n\t\t\t\tlisteners.splice(listeners.indexOf(listener), 1);\n\t\t\t}\n\t\t};\n\t}\n}\n\nexport default Evented;\n","import Promise from '../shim/Promise';\nimport Map from '../shim/Map';\nimport { Evented, EventObject } from '../core/Evented';\nimport {\n\tConstructor,\n\tInjectorFactory,\n\tInjectorItem,\n\tRegistryLabel,\n\tWidgetBaseConstructor,\n\tWidgetBaseInterface,\n\tESMDefaultWidgetBase,\n\tWidgetBaseConstructorFunction,\n\tESMDefaultWidgetBaseFunction\n} from './interfaces';\n\nexport type RegistryItem =\n\t| WidgetBaseConstructor\n\t| Promise<WidgetBaseConstructor>\n\t| WidgetBaseConstructorFunction\n\t| ESMDefaultWidgetBaseFunction;\n\n/**\n * Widget base type\n */\nexport const WIDGET_BASE_TYPE = '__widget_base_type';\n\nexport interface RegistryEventObject extends EventObject<RegistryLabel> {\n\taction: string;\n\titem: WidgetBaseConstructor | InjectorItem;\n}\n/**\n * Widget Registry Interface\n */\nexport interface RegistryInterface {\n\t/**\n\t * Define a WidgetRegistryItem against a label\n\t *\n\t * @param label The label of the widget to register\n\t * @param registryItem The registry item to define\n\t */\n\tdefine(label: RegistryLabel, registryItem: RegistryItem): void;\n\n\t/**\n\t * Return a RegistryItem for the given label, null if an entry doesn't exist\n\t *\n\t * @param widgetLabel The label of the widget to return\n\t * @returns The RegistryItem for the widgetLabel, `null` if no entry exists\n\t */\n\tget<T extends WidgetBaseInterface = WidgetBaseInterface>(label: RegistryLabel): Constructor<T> | null;\n\n\t/**\n\t * Returns a boolean if an entry for the label exists\n\t *\n\t * @param widgetLabel The label to search for\n\t * @returns boolean indicating if a widget registry item exists\n\t */\n\thas(label: RegistryLabel): boolean;\n\n\t/**\n\t * Define an Injector against a label\n\t *\n\t * @param label The label of the injector to register\n\t * @param registryItem The injector factory\n\t */\n\tdefineInjector(label: RegistryLabel, injectorFactory: InjectorFactory): void;\n\n\t/**\n\t * Return an Injector registry item for the given label, null if an entry doesn't exist\n\t *\n\t * @param label The label of the injector to return\n\t * @returns The RegistryItem for the widgetLabel, `null` if no entry exists\n\t */\n\tgetInjector<T>(label: RegistryLabel): InjectorItem<T> | null;\n\n\t/**\n\t * Returns a boolean if an injector for the label exists\n\t *\n\t * @param widgetLabel The label to search for\n\t * @returns boolean indicating if a injector registry item exists\n\t */\n\thasInjector(label: RegistryLabel): boolean;\n}\n\n/**\n * Checks is the item is a subclass of WidgetBase (or a WidgetBase)\n *\n * @param item the item to check\n * @returns true/false indicating if the item is a WidgetBaseConstructor\n */\nexport function isWidgetBaseConstructor<T extends WidgetBaseInterface>(item: any): item is Constructor<T> {\n\treturn Boolean(item && item._type === WIDGET_BASE_TYPE);\n}\n\nexport function isWidgetConstructorDefaultExport<T>(item: any): item is ESMDefaultWidgetBase<T> {\n\treturn Boolean(\n\t\titem &&\n\t\t\titem.hasOwnProperty('__esModule') &&\n\t\t\titem.hasOwnProperty('default') &&\n\t\t\tisWidgetBaseConstructor(item.default)\n\t);\n}\n\n/**\n * The Registry implementation\n */\nexport class Registry extends Evented<{}, RegistryLabel, RegistryEventObject> implements RegistryInterface {\n\t/**\n\t * internal map of labels and RegistryItem\n\t */\n\tprivate _widgetRegistry: Map<RegistryLabel, RegistryItem> | undefined;\n\n\tprivate _injectorRegistry: Map<RegistryLabel, InjectorItem> | undefined;\n\n\t/**\n\t * Emit loaded event for registry label\n\t */\n\tprivate emitLoadedEvent(widgetLabel: RegistryLabel, item: WidgetBaseConstructor | InjectorItem): void {\n\t\tthis.emit({\n\t\t\ttype: widgetLabel,\n\t\t\taction: 'loaded',\n\t\t\titem\n\t\t});\n\t}\n\n\tpublic define(label: RegistryLabel, item: RegistryItem): void {\n\t\tif (this._widgetRegistry === undefined) {\n\t\t\tthis._widgetRegistry = new Map();\n\t\t}\n\n\t\tif (this._widgetRegistry.has(label)) {\n\t\t\tthrow new Error(`widget has already been registered for '${label.toString()}'`);\n\t\t}\n\n\t\tthis._widgetRegistry.set(label, item);\n\n\t\tif (item instanceof Promise) {\n\t\t\titem.then(\n\t\t\t\t(widgetCtor) => {\n\t\t\t\t\tthis._widgetRegistry!.set(label, widgetCtor);\n\t\t\t\t\tthis.emitLoadedEvent(label, widgetCtor);\n\t\t\t\t\treturn widgetCtor;\n\t\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t);\n\t\t} else if (isWidgetBaseConstructor(item)) {\n\t\t\tthis.emitLoadedEvent(label, item);\n\t\t}\n\t}\n\n\tpublic defineInjector(label: RegistryLabel, injectorFactory: InjectorFactory): void {\n\t\tif (this._injectorRegistry === undefined) {\n\t\t\tthis._injectorRegistry = new Map();\n\t\t}\n\n\t\tif (this._injectorRegistry.has(label)) {\n\t\t\tthrow new Error(`injector has already been registered for '${label.toString()}'`);\n\t\t}\n\n\t\tconst invalidator = new Evented();\n\n\t\tconst injectorItem: InjectorItem = {\n\t\t\tinjector: injectorFactory(() => invalidator.emit({ type: 'invalidate' })),\n\t\t\tinvalidator\n\t\t};\n\n\t\tthis._injectorRegistry.set(label, injectorItem);\n\t\tthis.emitLoadedEvent(label, injectorItem);\n\t}\n\n\tpublic get<T extends WidgetBaseInterface = WidgetBaseInterface>(label: RegistryLabel): Constructor<T> | null {\n\t\tif (!this._widgetRegistry || !this.has(label)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst item = this._widgetRegistry.get(label);\n\n\t\tif (isWidgetBaseConstructor<T>(item)) {\n\t\t\treturn item;\n\t\t}\n\n\t\tif (item instanceof Promise) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst promise = (<WidgetBaseConstructorFunction>item)();\n\t\tthis._widgetRegistry.set(label, promise);\n\n\t\tpromise.then(\n\t\t\t(widgetCtor) => {\n\t\t\t\tif (isWidgetConstructorDefaultExport<T>(widgetCtor)) {\n\t\t\t\t\twidgetCtor = widgetCtor.default;\n\t\t\t\t}\n\n\t\t\t\tthis._widgetRegistry!.set(label, widgetCtor);\n\t\t\t\tthis.emitLoadedEvent(label, widgetCtor);\n\t\t\t\treturn widgetCtor;\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t);\n\n\t\treturn null;\n\t}\n\n\tpublic getInjector<T>(label: RegistryLabel): InjectorItem<T> | null {\n\t\tif (!this._injectorRegistry || !this.hasInjector(label)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this._injectorRegistry.get(label)!;\n\t}\n\n\tpublic has(label: RegistryLabel): boolean {\n\t\treturn Boolean(this._widgetRegistry && this._widgetRegistry.has(label));\n\t}\n\n\tpublic hasInjector(label: RegistryLabel): boolean {\n\t\treturn Boolean(this._injectorRegistry && this._injectorRegistry.has(label));\n\t}\n}\n\nexport default Registry;\n","import { PropertyChangeRecord } from './interfaces';\nimport { WIDGET_BASE_TYPE } from './Registry';\n\nfunction isObjectOrArray(value: any): boolean {\n\treturn Object.prototype.toString.call(value) === '[object Object]' || Array.isArray(value);\n}\n\nexport function always(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\treturn {\n\t\tchanged: true,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function ignore(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\treturn {\n\t\tchanged: false,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function reference(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\treturn {\n\t\tchanged: previousProperty !== newProperty,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function shallow(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\tlet changed = false;\n\n\tconst validOldProperty = previousProperty && isObjectOrArray(previousProperty);\n\tconst validNewProperty = newProperty && isObjectOrArray(newProperty);\n\n\tif (!validOldProperty || !validNewProperty) {\n\t\treturn {\n\t\t\tchanged: true,\n\t\t\tvalue: newProperty\n\t\t};\n\t}\n\n\tconst previousKeys = Object.keys(previousProperty);\n\tconst newKeys = Object.keys(newProperty);\n\n\tif (previousKeys.length !== newKeys.length) {\n\t\tchanged = true;\n\t} else {\n\t\tchanged = newKeys.some((key) => {\n\t\t\treturn newProperty[key] !== previousProperty[key];\n\t\t});\n\t}\n\treturn {\n\t\tchanged,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function auto(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\tlet result;\n\tif (typeof newProperty === 'function') {\n\t\tif (newProperty._type === WIDGET_BASE_TYPE) {\n\t\t\tresult = reference(previousProperty, newProperty);\n\t\t} else {\n\t\t\tresult = ignore(previousProperty, newProperty);\n\t\t}\n\t} else if (isObjectOrArray(newProperty)) {\n\t\tresult = shallow(previousProperty, newProperty);\n\t} else {\n\t\tresult = reference(previousProperty, newProperty);\n\t}\n\treturn result;\n}\n","import { Map } from '../shim/Map';\nimport { Evented, EventObject } from '../core/Evented';\nimport { Constructor, InjectorFactory, InjectorItem, RegistryLabel, WidgetBaseInterface } from './interfaces';\nimport { Registry, RegistryEventObject, RegistryItem } from './Registry';\n\nexport type RegistryHandlerEventMap = {\n\tinvalidate: EventObject<'invalidate'>;\n};\n\nexport class RegistryHandler extends Evented<RegistryHandlerEventMap> {\n\tprivate _registry = new Registry();\n\tprivate _registryWidgetLabelMap: Map<Registry, RegistryLabel[]> = new Map();\n\tprivate _registryInjectorLabelMap: Map<Registry, RegistryLabel[]> = new Map();\n\tprotected baseRegistry?: Registry;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.own(this._registry);\n\t\tconst destroy = () => {\n\t\t\tif (this.baseRegistry) {\n\t\t\t\tthis._registryWidgetLabelMap.delete(this.baseRegistry);\n\t\t\t\tthis._registryInjectorLabelMap.delete(this.baseRegistry);\n\t\t\t\tthis.baseRegistry = undefined;\n\t\t\t}\n\t\t};\n\t\tthis.own({ destroy });\n\t}\n\n\tpublic set base(baseRegistry: Registry) {\n\t\tif (this.baseRegistry) {\n\t\t\tthis._registryWidgetLabelMap.delete(this.baseRegistry);\n\t\t\tthis._registryInjectorLabelMap.delete(this.baseRegistry);\n\t\t}\n\t\tthis.baseRegistry = baseRegistry;\n\t}\n\n\tpublic define(label: RegistryLabel, widget: RegistryItem): void {\n\t\tthis._registry.define(label, widget);\n\t}\n\n\tpublic defineInjector(label: RegistryLabel, injector: InjectorFactory): void {\n\t\tthis._registry.defineInjector(label, injector);\n\t}\n\n\tpublic has(label: RegistryLabel): boolean {\n\t\treturn this._registry.has(label) || Boolean(this.baseRegistry && this.baseRegistry.has(label));\n\t}\n\n\tpublic hasInjector(label: RegistryLabel): boolean {\n\t\treturn this._registry.hasInjector(label) || Boolean(this.baseRegistry && this.baseRegistry.hasInjector(label));\n\t}\n\n\tpublic get<T extends WidgetBaseInterface = WidgetBaseInterface>(\n\t\tlabel: RegistryLabel,\n\t\tglobalPrecedence: boolean = false\n\t): Constructor<T> | null {\n\t\treturn this._get(label, globalPrecedence, 'get', this._registryWidgetLabelMap);\n\t}\n\n\tpublic getInjector<T>(label: RegistryLabel, globalPrecedence: boolean = false): InjectorItem<T> | null {\n\t\treturn this._get(label, globalPrecedence, 'getInjector', this._registryInjectorLabelMap);\n\t}\n\n\tprivate _get(\n\t\tlabel: RegistryLabel,\n\t\tglobalPrecedence: boolean,\n\t\tgetFunctionName: 'getInjector' | 'get',\n\t\tlabelMap: Map<Registry, RegistryLabel[]>\n\t): any {\n\t\tconst registries = globalPrecedence ? [this.baseRegistry, this._registry] : [this._registry, this.baseRegistry];\n\t\tfor (let i = 0; i < registries.length; i++) {\n\t\t\tconst registry: any = registries[i];\n\t\t\tif (!registry) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst item = registry[getFunctionName](label);\n\t\t\tconst registeredLabels = labelMap.get(registry) || [];\n\t\t\tif (item) {\n\t\t\t\treturn item;\n\t\t\t} else if (registeredLabels.indexOf(label) === -1) {\n\t\t\t\tconst handle = registry.on(label, (event: RegistryEventObject) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tevent.action === 'loaded' &&\n\t\t\t\t\t\t(this as any)[getFunctionName](label, globalPrecedence) === event.item\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.emit({ type: 'invalidate' });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.own(handle);\n\t\t\t\tlabelMap.set(registry, [...registeredLabels, label]);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n}\n\nexport default RegistryHandler;\n","import { Evented, EventObject } from '../core/Evented';\nimport Map from '../shim/Map';\nimport { NodeHandlerInterface } from './interfaces';\n\n/**\n * Enum to identify the type of event.\n * Listening to 'Projector' will notify when projector is created or updated\n * Listening to 'Widget' will notify when widget root is created or updated\n */\nexport enum NodeEventType {\n\tProjector = 'Projector',\n\tWidget = 'Widget'\n}\n\nexport type NodeHandlerEventMap = {\n\tProjector: EventObject<NodeEventType.Projector>;\n\tWidget: EventObject<NodeEventType.Widget>;\n};\n\nexport class NodeHandler extends Evented<NodeHandlerEventMap> implements NodeHandlerInterface {\n\tprivate _nodeMap = new Map<string, Element>();\n\n\tpublic get(key: string): Element | undefined {\n\t\treturn this._nodeMap.get(key);\n\t}\n\n\tpublic has(key: string): boolean {\n\t\treturn this._nodeMap.has(key);\n\t}\n\n\tpublic add(element: Element, key: string): void {\n\t\tthis._nodeMap.set(key, element);\n\t\tthis.emit({ type: key });\n\t}\n\n\tpublic addRoot(): void {\n\t\tthis.emit({ type: NodeEventType.Widget });\n\t}\n\n\tpublic addProjector(): void {\n\t\tthis.emit({ type: NodeEventType.Projector });\n\t}\n\n\tpublic clear(): void {\n\t\tthis._nodeMap.clear();\n\t}\n}\n\nexport default NodeHandler;\n","import Map from '../shim/Map';\nimport WeakMap from '../shim/WeakMap';\nimport { v, VNODE, isVNode, isWNode } from './d';\nimport { auto } from './diff';\nimport {\n\tAfterRender,\n\tBeforeProperties,\n\tBeforeRender,\n\tDiffPropertyReaction,\n\tDNode,\n\tDefaultWidgetBaseInterface,\n\tLazyWidget,\n\tRender,\n\tWidgetMetaConstructor,\n\tWidgetBaseInterface,\n\tWidgetProperties,\n\tWNode,\n\tVNode,\n\tLazyDefine,\n\tMetaBase\n} from './interfaces';\nimport RegistryHandler from './RegistryHandler';\nimport NodeHandler from './NodeHandler';\nimport { isWidgetBaseConstructor, WIDGET_BASE_TYPE } from './Registry';\nimport { Handle } from '../core/Destroyable';\nimport { Base } from './meta/Base';\n\ninterface ReactionFunctionConfig {\n\tpropertyName: string;\n\treaction: DiffPropertyReaction;\n}\n\nexport interface WidgetData {\n\tonDetach: () => void;\n\tonAttach: () => void;\n\tdirty: boolean;\n\tnodeHandler: NodeHandler;\n\tinvalidate?: Function;\n\trendering: boolean;\n\tinputProperties: any;\n}\n\nexport type BoundFunctionData = { boundFunc: (...args: any[]) => any; scope: any };\n\nlet lazyWidgetId = 0;\nconst lazyWidgetIdMap = new WeakMap<LazyWidget, string>();\nconst decoratorMap = new WeakMap<Function, Map<string, any[]>>();\nconst builtDecoratorMap = new WeakMap<Function, Map<string, any[]>>();\nexport const widgetInstanceMap = new WeakMap<\n\tWidgetBase<WidgetProperties, DNode<DefaultWidgetBaseInterface>>,\n\tWidgetData\n>();\nconst boundAuto = auto.bind(null);\n\nexport const noBind = '__dojo_no_bind';\n\nfunction toTextVNode(data: any): VNode {\n\treturn {\n\t\ttag: '',\n\t\tproperties: {},\n\t\tchildren: undefined,\n\t\ttext: `${data}`,\n\t\ttype: VNODE\n\t};\n}\n\nfunction isLazyDefine(item: any): item is LazyDefine {\n\treturn Boolean(item && item.label);\n}\n\nfunction isDomMeta(meta: any): meta is Base {\n\treturn Boolean(meta.afterRender);\n}\n\n/**\n * Main widget base for all widgets to extend\n */\nexport class WidgetBase<P = WidgetProperties, C extends DNode = DNode> implements WidgetBaseInterface<P, C> {\n\t/**\n\t * static identifier\n\t */\n\tstatic _type = WIDGET_BASE_TYPE;\n\n\t/**\n\t * children array\n\t */\n\tprivate _children: (C | null)[];\n\n\t/**\n\t * Indicates if it is the initial set properties cycle\n\t */\n\tprivate _initialProperties = true;\n\n\t/**\n\t * internal widget properties\n\t */\n\tprivate _properties: P & WidgetProperties & { [index: string]: any };\n\n\t/**\n\t * Array of property keys considered changed from the previous set properties\n\t */\n\tprivate _changedPropertyKeys: string[] = [];\n\n\t/**\n\t * map of decorators that are applied to this widget\n\t */\n\tprivate _decoratorCache: Map<string, any[]>;\n\n\tprivate _registry: RegistryHandler | undefined;\n\n\t/**\n\t * Map of functions properties for the bound function\n\t */\n\tprivate _bindFunctionPropertyMap: WeakMap<(...args: any[]) => any, BoundFunctionData> | undefined;\n\n\tprivate _metaMap: Map<WidgetMetaConstructor<any>, MetaBase> | undefined;\n\n\tprivate _boundRenderFunc: Render;\n\n\tprivate _boundInvalidate: () => void;\n\n\tprivate _nodeHandler: NodeHandler = new NodeHandler();\n\n\tprivate _handles: Handle[] = [];\n\n\t/**\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tthis._children = [];\n\t\tthis._decoratorCache = new Map<string, any[]>();\n\t\tthis._properties = {} as P;\n\t\tthis._boundRenderFunc = this.render.bind(this);\n\t\tthis._boundInvalidate = this.invalidate.bind(this);\n\n\t\twidgetInstanceMap.set(this, {\n\t\t\tdirty: true,\n\t\t\tonAttach: (): void => {\n\t\t\t\tthis.onAttach();\n\t\t\t},\n\t\t\tonDetach: (): void => {\n\t\t\t\tthis.onDetach();\n\t\t\t\tthis.destroy();\n\t\t\t},\n\t\t\tnodeHandler: this._nodeHandler,\n\t\t\trendering: false,\n\t\t\tinputProperties: {}\n\t\t});\n\n\t\tthis.own({\n\t\t\tdestroy: () => {\n\t\t\t\twidgetInstanceMap.delete(this);\n\t\t\t\tthis._nodeHandler.clear();\n\t\t\t\tthis._nodeHandler.destroy();\n\t\t\t}\n\t\t});\n\n\t\tthis._runAfterConstructors();\n\t}\n\n\tprotected meta<T extends MetaBase>(MetaType: WidgetMetaConstructor<T>): T {\n\t\tif (this._metaMap === undefined) {\n\t\t\tthis._metaMap = new Map<WidgetMetaConstructor<any>, MetaBase>();\n\t\t}\n\t\tlet cached = this._metaMap.get(MetaType);\n\t\tif (!cached) {\n\t\t\tcached = new MetaType({\n\t\t\t\tinvalidate: this._boundInvalidate,\n\t\t\t\tnodeHandler: this._nodeHandler,\n\t\t\t\tbind: this\n\t\t\t});\n\t\t\tthis.own(cached);\n\t\t\tthis._metaMap.set(MetaType, cached);\n\t\t}\n\n\t\treturn cached as T;\n\t}\n\n\tprotected onAttach(): void {\n\t\t// Do nothing by default.\n\t}\n\n\tprotected onDetach(): void {\n\t\t// Do nothing by default.\n\t}\n\n\tpublic get properties(): Readonly<P> & Readonly<WidgetProperties> {\n\t\treturn this._properties;\n\t}\n\n\tpublic get changedPropertyKeys(): string[] {\n\t\treturn [...this._changedPropertyKeys];\n\t}\n\n\tpublic __setProperties__(originalProperties: this['properties'], bind?: WidgetBaseInterface): void {\n\t\tconst instanceData = widgetInstanceMap.get(this);\n\t\tif (instanceData) {\n\t\t\tinstanceData.inputProperties = originalProperties;\n\t\t}\n\t\tconst properties = this._runBeforeProperties(originalProperties);\n\t\tconst registeredDiffPropertyNames = this.getDecorator('registeredDiffProperty');\n\t\tconst changedPropertyKeys: string[] = [];\n\t\tconst propertyNames = Object.keys(properties);\n\n\t\tif (this._initialProperties === false || registeredDiffPropertyNames.length !== 0) {\n\t\t\tconst allProperties = [...propertyNames, ...Object.keys(this._properties)];\n\t\t\tconst checkedProperties: (string | number)[] = [];\n\t\t\tconst diffPropertyResults: any = {};\n\t\t\tlet runReactions = false;\n\n\t\t\tfor (let i = 0; i < allProperties.length; i++) {\n\t\t\t\tconst propertyName = allProperties[i];\n\t\t\t\tif (checkedProperties.indexOf(propertyName) !== -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tcheckedProperties.push(propertyName);\n\t\t\t\tconst previousProperty = this._properties[propertyName];\n\t\t\t\tconst newProperty = this._bindFunctionProperty(properties[propertyName], bind);\n\t\t\t\tif (registeredDiffPropertyNames.indexOf(propertyName) !== -1) {\n\t\t\t\t\trunReactions = true;\n\t\t\t\t\tconst diffFunctions = this.getDecorator(`diffProperty:${propertyName}`);\n\t\t\t\t\tfor (let i = 0; i < diffFunctions.length; i++) {\n\t\t\t\t\t\tconst result = diffFunctions[i](previousProperty, newProperty);\n\t\t\t\t\t\tif (result.changed && changedPropertyKeys.indexOf(propertyName) === -1) {\n\t\t\t\t\t\t\tchangedPropertyKeys.push(propertyName);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (propertyName in properties) {\n\t\t\t\t\t\t\tdiffPropertyResults[propertyName] = result.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst result = boundAuto(previousProperty, newProperty);\n\t\t\t\t\tif (result.changed && changedPropertyKeys.indexOf(propertyName) === -1) {\n\t\t\t\t\t\tchangedPropertyKeys.push(propertyName);\n\t\t\t\t\t}\n\t\t\t\t\tif (propertyName in properties) {\n\t\t\t\t\t\tdiffPropertyResults[propertyName] = result.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (runReactions) {\n\t\t\t\tconst reactionFunctions: ReactionFunctionConfig[] = this.getDecorator('diffReaction');\n\t\t\t\tconst executedReactions: Function[] = [];\n\t\t\t\treactionFunctions.forEach(({ reaction, propertyName }) => {\n\t\t\t\t\tconst propertyChanged = changedPropertyKeys.indexOf(propertyName) !== -1;\n\t\t\t\t\tconst reactionRun = executedReactions.indexOf(reaction) !== -1;\n\t\t\t\t\tif (propertyChanged && !reactionRun) {\n\t\t\t\t\t\treaction.call(this, this._properties, diffPropertyResults);\n\t\t\t\t\t\texecutedReactions.push(reaction);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._properties = diffPropertyResults;\n\t\t\tthis._changedPropertyKeys = changedPropertyKeys;\n\t\t} else {\n\t\t\tthis._initialProperties = false;\n\t\t\tfor (let i = 0; i < propertyNames.length; i++) {\n\t\t\t\tconst propertyName = propertyNames[i];\n\t\t\t\tif (typeof properties[propertyName] === 'function') {\n\t\t\t\t\tproperties[propertyName] = this._bindFunctionProperty(properties[propertyName], bind);\n\t\t\t\t} else {\n\t\t\t\t\tchangedPropertyKeys.push(propertyName);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._changedPropertyKeys = changedPropertyKeys;\n\t\t\tthis._properties = { ...properties };\n\t\t}\n\n\t\tif (this._changedPropertyKeys.length > 0) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tpublic get children(): (C | null)[] {\n\t\treturn this._children;\n\t}\n\n\tpublic __setChildren__(children: (C | null)[]): void {\n\t\tif (this._children.length > 0 || children.length > 0) {\n\t\t\tthis._children = children;\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tprivate _filterAndConvert(nodes: DNode[]): (WNode | VNode)[];\n\tprivate _filterAndConvert(nodes: DNode): WNode | VNode;\n\tprivate _filterAndConvert(nodes: DNode | DNode[]): (WNode | VNode) | (WNode | VNode)[];\n\tprivate _filterAndConvert(nodes: DNode | DNode[]): (WNode | VNode) | (WNode | VNode)[] {\n\t\tconst isArray = Array.isArray(nodes);\n\t\tconst filteredNodes = Array.isArray(nodes) ? nodes : [nodes];\n\t\tconst convertedNodes: (WNode | VNode)[] = [];\n\t\tfor (let i = 0; i < filteredNodes.length; i++) {\n\t\t\tconst node = filteredNodes[i];\n\t\t\tif (!node || node === true) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (typeof node === 'string') {\n\t\t\t\tconvertedNodes.push(toTextVNode(node));\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (isVNode(node) && node.deferredPropertiesCallback) {\n\t\t\t\tconst properties = node.deferredPropertiesCallback(false);\n\t\t\t\tnode.originalProperties = node.properties;\n\t\t\t\tnode.properties = { ...properties, ...node.properties };\n\t\t\t}\n\t\t\tif (isWNode(node) && !isWidgetBaseConstructor(node.widgetConstructor)) {\n\t\t\t\tif (typeof node.widgetConstructor === 'function') {\n\t\t\t\t\tlet id = lazyWidgetIdMap.get(node.widgetConstructor);\n\t\t\t\t\tif (!id) {\n\t\t\t\t\t\tid = `__lazy_widget_${lazyWidgetId++}`;\n\t\t\t\t\t\tlazyWidgetIdMap.set(node.widgetConstructor, id);\n\t\t\t\t\t\tthis.registry.define(id, node.widgetConstructor);\n\t\t\t\t\t}\n\t\t\t\t\tnode.widgetConstructor = id;\n\t\t\t\t} else if (isLazyDefine(node.widgetConstructor)) {\n\t\t\t\t\tconst { label, registryItem } = node.widgetConstructor;\n\t\t\t\t\tif (!this.registry.has(label)) {\n\t\t\t\t\t\tthis.registry.define(label, registryItem);\n\t\t\t\t\t}\n\t\t\t\t\tnode.widgetConstructor = label;\n\t\t\t\t}\n\n\t\t\t\tnode.widgetConstructor =\n\t\t\t\t\tthis.registry.get<WidgetBase>(node.widgetConstructor) || node.widgetConstructor;\n\t\t\t}\n\t\t\tif (!node.bind) {\n\t\t\t\tnode.bind = this;\n\t\t\t}\n\t\t\tconvertedNodes.push(node);\n\t\t\tif (node.children && node.children.length) {\n\t\t\t\tnode.children = this._filterAndConvert(node.children);\n\t\t\t}\n\t\t}\n\t\treturn isArray ? convertedNodes : convertedNodes[0];\n\t}\n\n\tpublic __render__(): (WNode | VNode) | (WNode | VNode)[] {\n\t\tconst instanceData = widgetInstanceMap.get(this);\n\t\tif (instanceData) {\n\t\t\tinstanceData.dirty = false;\n\t\t}\n\t\tconst render = this._runBeforeRenders();\n\t\tconst dNode = this._filterAndConvert(this._runAfterRenders(render()));\n\t\tthis._nodeHandler.clear();\n\t\treturn dNode;\n\t}\n\n\tpublic invalidate(): void {\n\t\tconst instanceData = widgetInstanceMap.get(this);\n\t\tif (instanceData && instanceData.invalidate) {\n\t\t\tinstanceData.invalidate();\n\t\t}\n\t}\n\n\tprotected render(): DNode | DNode[] {\n\t\treturn v('div', {}, this.children);\n\t}\n\n\t/**\n\t * Function to add decorators to WidgetBase\n\t *\n\t * @param decoratorKey The key of the decorator\n\t * @param value The value of the decorator\n\t */\n\tprotected addDecorator(decoratorKey: string, value: any): void {\n\t\tvalue = Array.isArray(value) ? value : [value];\n\t\tif (this.hasOwnProperty('constructor')) {\n\t\t\tlet decoratorList = decoratorMap.get(this.constructor);\n\t\t\tif (!decoratorList) {\n\t\t\t\tdecoratorList = new Map<string, any[]>();\n\t\t\t\tdecoratorMap.set(this.constructor, decoratorList);\n\t\t\t}\n\n\t\t\tlet specificDecoratorList = decoratorList.get(decoratorKey);\n\t\t\tif (!specificDecoratorList) {\n\t\t\t\tspecificDecoratorList = [];\n\t\t\t\tdecoratorList.set(decoratorKey, specificDecoratorList);\n\t\t\t}\n\t\t\tspecificDecoratorList.push(...value);\n\t\t} else {\n\t\t\tconst decorators = this.getDecorator(decoratorKey);\n\t\t\tthis._decoratorCache.set(decoratorKey, [...decorators, ...value]);\n\t\t}\n\t}\n\n\t/**\n\t * Function to build the list of decorators from the global decorator map.\n\t *\n\t * @param decoratorKey  The key of the decorator\n\t * @return An array of decorator values\n\t * @private\n\t */\n\tprivate _buildDecoratorList(decoratorKey: string): any[] {\n\t\tconst allDecorators = [];\n\n\t\tlet constructor = this.constructor;\n\n\t\twhile (constructor) {\n\t\t\tconst instanceMap = decoratorMap.get(constructor);\n\t\t\tif (instanceMap) {\n\t\t\t\tconst decorators = instanceMap.get(decoratorKey);\n\n\t\t\t\tif (decorators) {\n\t\t\t\t\tallDecorators.unshift(...decorators);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconstructor = Object.getPrototypeOf(constructor);\n\t\t}\n\n\t\tconst buildDecorators = builtDecoratorMap.get(this.constructor) || new Map();\n\t\tbuildDecorators.set(decoratorKey, allDecorators);\n\t\tbuiltDecoratorMap.set(this.constructor, buildDecorators);\n\t\treturn allDecorators;\n\t}\n\n\t/**\n\t * Function to retrieve decorator values\n\t *\n\t * @param decoratorKey The key of the decorator\n\t * @returns An array of decorator values\n\t */\n\tprotected getDecorator(decoratorKey: string): any[] {\n\t\tlet decoratorCache = builtDecoratorMap.get(this.constructor);\n\t\tlet allDecorators =\n\t\t\tthis._decoratorCache.get(decoratorKey) || (decoratorCache && decoratorCache.get(decoratorKey));\n\n\t\tif (allDecorators !== undefined) {\n\t\t\treturn allDecorators;\n\t\t}\n\n\t\tallDecorators = this._buildDecoratorList(decoratorKey);\n\n\t\tallDecorators = [...allDecorators];\n\t\tthis._decoratorCache.set(decoratorKey, allDecorators);\n\t\treturn allDecorators;\n\t}\n\n\t/**\n\t * Binds unbound property functions to the specified `bind` property\n\t *\n\t * @param properties properties to check for functions\n\t */\n\tprivate _bindFunctionProperty(property: any, bind: any): any {\n\t\tif (typeof property === 'function' && !property[noBind] && isWidgetBaseConstructor(property) === false) {\n\t\t\tif (this._bindFunctionPropertyMap === undefined) {\n\t\t\t\tthis._bindFunctionPropertyMap = new WeakMap<\n\t\t\t\t\t(...args: any[]) => any,\n\t\t\t\t\t{ boundFunc: (...args: any[]) => any; scope: any }\n\t\t\t\t>();\n\t\t\t}\n\t\t\tconst bindInfo: Partial<BoundFunctionData> = this._bindFunctionPropertyMap.get(property) || {};\n\t\t\tlet { boundFunc, scope } = bindInfo;\n\n\t\t\tif (boundFunc === undefined || scope !== bind) {\n\t\t\t\tboundFunc = property.bind(bind) as (...args: any[]) => any;\n\t\t\t\tthis._bindFunctionPropertyMap.set(property, { boundFunc, scope: bind });\n\t\t\t}\n\t\t\treturn boundFunc;\n\t\t}\n\t\treturn property;\n\t}\n\n\tpublic get registry(): RegistryHandler {\n\t\tif (this._registry === undefined) {\n\t\t\tthis._registry = new RegistryHandler();\n\t\t\tthis.own(this._registry);\n\t\t\tthis.own(this._registry.on('invalidate', this._boundInvalidate));\n\t\t}\n\t\treturn this._registry;\n\t}\n\n\tprivate _runBeforeProperties(properties: any) {\n\t\tconst beforeProperties: BeforeProperties[] = this.getDecorator('beforeProperties');\n\t\tif (beforeProperties.length > 0) {\n\t\t\treturn beforeProperties.reduce(\n\t\t\t\t(properties, beforePropertiesFunction) => {\n\t\t\t\t\treturn { ...properties, ...beforePropertiesFunction.call(this, properties) };\n\t\t\t\t},\n\t\t\t\t{ ...properties }\n\t\t\t);\n\t\t}\n\t\treturn properties;\n\t}\n\n\t/**\n\t * Run all registered before renders and return the updated render method\n\t */\n\tprivate _runBeforeRenders(): Render {\n\t\tconst beforeRenders = this.getDecorator('beforeRender');\n\n\t\tif (beforeRenders.length > 0) {\n\t\t\treturn beforeRenders.reduce((render: Render, beforeRenderFunction: BeforeRender) => {\n\t\t\t\tconst updatedRender = beforeRenderFunction.call(this, render, this._properties, this._children);\n\t\t\t\tif (!updatedRender) {\n\t\t\t\t\tconsole.warn('Render function not returned from beforeRender, using previous render');\n\t\t\t\t\treturn render;\n\t\t\t\t}\n\t\t\t\treturn updatedRender;\n\t\t\t}, this._boundRenderFunc);\n\t\t}\n\t\treturn this._boundRenderFunc;\n\t}\n\n\t/**\n\t * Run all registered after renders and return the decorated DNodes\n\t *\n\t * @param dNode The DNodes to run through the after renders\n\t */\n\tprivate _runAfterRenders(dNode: DNode | DNode[]): DNode | DNode[] {\n\t\tconst afterRenders = this.getDecorator('afterRender');\n\n\t\tif (afterRenders.length > 0) {\n\t\t\tdNode = afterRenders.reduce((dNode: DNode | DNode[], afterRenderFunction: AfterRender) => {\n\t\t\t\treturn afterRenderFunction.call(this, dNode);\n\t\t\t}, dNode);\n\t\t}\n\n\t\tif (this._metaMap !== undefined) {\n\t\t\tthis._metaMap.forEach((meta) => {\n\t\t\t\tisDomMeta(meta) && meta.afterRender();\n\t\t\t});\n\t\t}\n\n\t\treturn dNode;\n\t}\n\n\tprivate _runAfterConstructors(): void {\n\t\tconst afterConstructors = this.getDecorator('afterConstructor');\n\n\t\tif (afterConstructors.length > 0) {\n\t\t\tafterConstructors.forEach((afterConstructor) => afterConstructor.call(this));\n\t\t}\n\t}\n\n\tprotected own(handle: Handle): void {\n\t\tthis._handles.push(handle);\n\t}\n\n\tprotected destroy() {\n\t\twhile (this._handles.length > 0) {\n\t\t\tconst handle = this._handles.pop();\n\t\t\tif (handle) {\n\t\t\t\thandle.destroy();\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default WidgetBase;\n","import { VNodeProperties } from './../interfaces';\n\nlet browserSpecificTransitionEndEventName = '';\nlet browserSpecificAnimationEndEventName = '';\n\nfunction determineBrowserStyleNames(element: HTMLElement) {\n\tif ('WebkitTransition' in element.style) {\n\t\tbrowserSpecificTransitionEndEventName = 'webkitTransitionEnd';\n\t\tbrowserSpecificAnimationEndEventName = 'webkitAnimationEnd';\n\t} else if ('transition' in element.style || 'MozTransition' in element.style) {\n\t\tbrowserSpecificTransitionEndEventName = 'transitionend';\n\t\tbrowserSpecificAnimationEndEventName = 'animationend';\n\t} else {\n\t\tthrow new Error('Your browser is not supported');\n\t}\n}\n\nfunction initialize(element: HTMLElement) {\n\tif (browserSpecificAnimationEndEventName === '') {\n\t\tdetermineBrowserStyleNames(element);\n\t}\n}\n\nfunction runAndCleanUp(element: HTMLElement, startAnimation: () => void, finishAnimation: () => void) {\n\tinitialize(element);\n\n\tlet finished = false;\n\n\tlet transitionEnd = function() {\n\t\tif (!finished) {\n\t\t\tfinished = true;\n\t\t\telement.removeEventListener(browserSpecificTransitionEndEventName, transitionEnd);\n\t\t\telement.removeEventListener(browserSpecificAnimationEndEventName, transitionEnd);\n\n\t\t\tfinishAnimation();\n\t\t}\n\t};\n\n\tstartAnimation();\n\n\telement.addEventListener(browserSpecificAnimationEndEventName, transitionEnd);\n\telement.addEventListener(browserSpecificTransitionEndEventName, transitionEnd);\n}\n\nfunction exit(node: HTMLElement, properties: VNodeProperties, exitAnimation: string, removeNode: () => void) {\n\tconst activeClass = properties.exitAnimationActive || `${exitAnimation}-active`;\n\n\trunAndCleanUp(\n\t\tnode,\n\t\t() => {\n\t\t\tnode.classList.add(exitAnimation);\n\n\t\t\trequestAnimationFrame(function() {\n\t\t\t\tnode.classList.add(activeClass);\n\t\t\t});\n\t\t},\n\t\t() => {\n\t\t\tremoveNode();\n\t\t}\n\t);\n}\n\nfunction enter(node: HTMLElement, properties: VNodeProperties, enterAnimation: string) {\n\tconst activeClass = properties.enterAnimationActive || `${enterAnimation}-active`;\n\n\trunAndCleanUp(\n\t\tnode,\n\t\t() => {\n\t\t\tnode.classList.add(enterAnimation);\n\n\t\t\trequestAnimationFrame(function() {\n\t\t\t\tnode.classList.add(activeClass);\n\t\t\t});\n\t\t},\n\t\t() => {\n\t\t\tnode.classList.remove(enterAnimation);\n\t\t\tnode.classList.remove(activeClass);\n\t\t}\n\t);\n}\n\nexport default {\n\tenter,\n\texit\n};\n","import global from '../shim/global';\nimport has from '../has/has';\nimport { WeakMap } from '../shim/WeakMap';\nimport {\n\tWNode,\n\tVNode,\n\tDNode,\n\tVNodeProperties,\n\tWidgetBaseConstructor,\n\tTransitionStrategy,\n\tSupportedClassName,\n\tDomVNode\n} from './interfaces';\nimport transitionStrategy from './animations/cssTransitions';\nimport { isVNode, isWNode, WNODE, v, isDomVNode, w } from './d';\nimport { Registry, isWidgetBaseConstructor } from './Registry';\nimport { WidgetBase, widgetInstanceMap } from './WidgetBase';\n\nexport interface BaseNodeWrapper {\n\tnode: WNode | VNode;\n\tdomNode?: Node;\n\tchildrenWrappers?: DNodeWrapper[];\n\tdepth: number;\n\torder: number;\n\trequiresInsertBefore?: boolean;\n\thasPreviousSiblings?: boolean;\n\thasParentWNode?: boolean;\n\tnamespace?: string;\n\thasAnimations?: boolean;\n}\n\nexport interface WNodeWrapper extends BaseNodeWrapper {\n\tnode: WNode;\n\tinstance?: WidgetBase;\n\tmergeNodes?: Node[];\n\tnodeHandlerCalled?: boolean;\n}\n\nexport interface VNodeWrapper extends BaseNodeWrapper {\n\tnode: VNode | DomVNode;\n\tmerged?: boolean;\n\tdecoratedDeferredProperties?: VNodeProperties;\n\tinserted?: boolean;\n}\n\nexport type DNodeWrapper = VNodeWrapper | WNodeWrapper;\n\nexport interface MountOptions {\n\tsync: boolean;\n\tmerge: boolean;\n\ttransition: TransitionStrategy;\n\tdomNode: HTMLElement;\n\tregistry: Registry | null;\n}\n\nexport interface Renderer {\n\tinvalidate(): void;\n\tmount(mountOptions?: Partial<MountOptions>): void;\n}\n\ninterface ProcessItem {\n\tcurrent?: (WNodeWrapper | VNodeWrapper)[];\n\tnext?: (WNodeWrapper | VNodeWrapper)[];\n\tmeta: ProcessMeta;\n}\n\ninterface ProcessResult {\n\titem?: ProcessItem;\n\twidget?: AttachApplication | DetachApplication;\n\tdom?: ApplicationInstruction;\n}\n\ninterface ProcessMeta {\n\tmergeNodes?: Node[];\n\toldIndex?: number;\n\tnewIndex?: number;\n}\n\ninterface InvalidationQueueItem {\n\tinstance: WidgetBase;\n\tdepth: number;\n\torder: number;\n}\n\ninterface Instruction {\n\tcurrent: undefined | DNodeWrapper;\n\tnext: undefined | DNodeWrapper;\n}\n\ninterface CreateWidgetInstruction {\n\tnext: WNodeWrapper;\n}\n\ninterface UpdateWidgetInstruction {\n\tcurrent: WNodeWrapper;\n\tnext: WNodeWrapper;\n}\n\ninterface RemoveWidgetInstruction {\n\tcurrent: WNodeWrapper;\n}\n\ninterface CreateDomInstruction {\n\tnext: VNodeWrapper;\n}\n\ninterface UpdateDomInstruction {\n\tcurrent: VNodeWrapper;\n\tnext: VNodeWrapper;\n}\n\ninterface RemoveDomInstruction {\n\tcurrent: VNodeWrapper;\n}\n\ninterface AttachApplication {\n\ttype: 'attach';\n\tinstance: WidgetBase;\n\tattached: boolean;\n}\n\ninterface DetachApplication {\n\ttype: 'detach';\n\tcurrent: WNodeWrapper;\n}\n\ninterface CreateDomApplication {\n\ttype: 'create';\n\tcurrent?: VNodeWrapper;\n\tnext: VNodeWrapper;\n\tparentDomNode: Node;\n}\n\ninterface DeleteDomApplication {\n\ttype: 'delete';\n\tcurrent: VNodeWrapper;\n}\n\ninterface UpdateDomApplication {\n\ttype: 'update';\n\tcurrent: VNodeWrapper;\n\tnext: VNodeWrapper;\n}\n\ninterface PreviousProperties {\n\tproperties: any;\n\tattributes?: any;\n\tevents?: any;\n}\n\ntype ApplicationInstruction =\n\t| CreateDomApplication\n\t| UpdateDomApplication\n\t| DeleteDomApplication\n\t| AttachApplication\n\t| DetachApplication;\n\nconst EMPTY_ARRAY: DNodeWrapper[] = [];\nconst nodeOperations = ['focus', 'blur', 'scrollIntoView', 'click'];\nconst NAMESPACE_W3 = 'http://www.w3.org/';\nconst NAMESPACE_SVG = NAMESPACE_W3 + '2000/svg';\nconst NAMESPACE_XLINK = NAMESPACE_W3 + '1999/xlink';\n\nfunction isWNodeWrapper(child: DNodeWrapper): child is WNodeWrapper {\n\treturn child && isWNode(child.node);\n}\n\nfunction isVNodeWrapper(child?: DNodeWrapper | null): child is VNodeWrapper {\n\treturn !!child && isVNode(child.node);\n}\n\nfunction isAttachApplication(value: any): value is AttachApplication | DetachApplication {\n\treturn !!value.type;\n}\n\nfunction updateAttributes(\n\tdomNode: Element,\n\tpreviousAttributes: { [index: string]: string | undefined },\n\tattributes: { [index: string]: string | undefined },\n\tnamespace?: string\n) {\n\tconst attrNames = Object.keys(attributes);\n\tconst attrCount = attrNames.length;\n\tfor (let i = 0; i < attrCount; i++) {\n\t\tconst attrName = attrNames[i];\n\t\tconst attrValue = attributes[attrName];\n\t\tconst previousAttrValue = previousAttributes[attrName];\n\t\tif (attrValue !== previousAttrValue) {\n\t\t\tupdateAttribute(domNode, attrName, attrValue, namespace);\n\t\t}\n\t}\n}\n\nfunction buildPreviousProperties(domNode: any, current: VNodeWrapper, next: VNodeWrapper) {\n\tconst {\n\t\tnode: { diffType, properties, attributes }\n\t} = current;\n\tif (!diffType || diffType === 'vdom') {\n\t\treturn {\n\t\t\tproperties: current.node.properties,\n\t\t\tattributes: current.node.attributes,\n\t\t\tevents: current.node.events\n\t\t};\n\t} else if (diffType === 'none') {\n\t\treturn { properties: {}, attributes: current.node.attributes ? {} : undefined, events: current.node.events };\n\t}\n\tlet newProperties: any = {\n\t\tproperties: {}\n\t};\n\tif (attributes) {\n\t\tnewProperties.attributes = {};\n\t\tnewProperties.events = current.node.events;\n\t\tObject.keys(properties).forEach((propName) => {\n\t\t\tnewProperties.properties[propName] = domNode[propName];\n\t\t});\n\t\tObject.keys(attributes).forEach((attrName) => {\n\t\t\tnewProperties.attributes[attrName] = domNode.getAttribute(attrName);\n\t\t});\n\t\treturn newProperties;\n\t}\n\tnewProperties.properties = Object.keys(properties).reduce(\n\t\t(props, property) => {\n\t\t\tprops[property] = domNode.getAttribute(property) || domNode[property];\n\t\t\treturn props;\n\t\t},\n\t\t{} as any\n\t);\n\treturn newProperties;\n}\n\nfunction checkDistinguishable(wrappers: DNodeWrapper[], index: number, parentWNodeWrapper?: WNodeWrapper) {\n\tconst wrapperToCheck = wrappers[index];\n\tif (isVNodeWrapper(wrapperToCheck) && !wrapperToCheck.node.tag) {\n\t\treturn;\n\t}\n\tconst { key } = wrapperToCheck.node.properties;\n\tlet parentName = 'unknown';\n\tif (parentWNodeWrapper) {\n\t\tconst {\n\t\t\tnode: { widgetConstructor }\n\t\t} = parentWNodeWrapper;\n\t\tparentName = (widgetConstructor as any).name || 'unknown';\n\t}\n\n\tif (key === undefined || key === null) {\n\t\tfor (let i = 0; i < wrappers.length; i++) {\n\t\t\tif (i !== index) {\n\t\t\t\tconst wrapper = wrappers[i];\n\t\t\t\tif (same(wrapper, wrapperToCheck)) {\n\t\t\t\t\tlet nodeIdentifier: string;\n\t\t\t\t\tif (isWNodeWrapper(wrapper)) {\n\t\t\t\t\t\tnodeIdentifier = (wrapper.node.widgetConstructor as any).name || 'unknown';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnodeIdentifier = wrapper.node.tag;\n\t\t\t\t\t}\n\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`A widget (${parentName}) has had a child added or removed, but they were not able to uniquely identified. It is recommended to provide a unique 'key' property when using the same widget or element (${nodeIdentifier}) multiple times as siblings`\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction same(dnode1: DNodeWrapper, dnode2: DNodeWrapper): boolean {\n\tif (isVNodeWrapper(dnode1) && isVNodeWrapper(dnode2)) {\n\t\tif (isDomVNode(dnode1.node) && isDomVNode(dnode2.node)) {\n\t\t\tif (dnode1.node.domNode !== dnode2.node.domNode) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (dnode1.node.tag !== dnode2.node.tag) {\n\t\t\treturn false;\n\t\t}\n\t\tif (dnode1.node.properties.key !== dnode2.node.properties.key) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t} else if (isWNodeWrapper(dnode1) && isWNodeWrapper(dnode2)) {\n\t\tif (dnode1.instance === undefined && typeof dnode2.node.widgetConstructor === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\tif (dnode1.node.widgetConstructor !== dnode2.node.widgetConstructor) {\n\t\t\treturn false;\n\t\t}\n\t\tif (dnode1.node.properties.key !== dnode2.node.properties.key) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction findIndexOfChild(children: DNodeWrapper[], sameAs: DNodeWrapper, start: number) {\n\tfor (let i = start; i < children.length; i++) {\n\t\tif (same(children[i], sameAs)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction createClassPropValue(classes: SupportedClassName | SupportedClassName[] = []) {\n\tclasses = Array.isArray(classes) ? classes : [classes];\n\treturn classes\n\t\t.filter((className) => className && className !== true)\n\t\t.join(' ')\n\t\t.trim();\n}\n\nfunction updateAttribute(domNode: Element, attrName: string, attrValue: string | undefined, namespace?: string) {\n\tif (namespace === NAMESPACE_SVG && attrName === 'href' && attrValue) {\n\t\tdomNode.setAttributeNS(NAMESPACE_XLINK, attrName, attrValue);\n\t} else if ((attrName === 'role' && attrValue === '') || attrValue === undefined) {\n\t\tdomNode.removeAttribute(attrName);\n\t} else {\n\t\tdomNode.setAttribute(attrName, attrValue);\n\t}\n}\n\nfunction runEnterAnimation(next: VNodeWrapper, transitions: TransitionStrategy) {\n\tconst {\n\t\tdomNode,\n\t\tnode: { properties },\n\t\tnode: {\n\t\t\tproperties: { enterAnimation }\n\t\t}\n\t} = next;\n\tif (enterAnimation && enterAnimation !== true) {\n\t\tif (typeof enterAnimation === 'function') {\n\t\t\treturn enterAnimation(domNode as Element, properties);\n\t\t}\n\t\ttransitions.enter(domNode as Element, properties, enterAnimation);\n\t}\n}\n\nfunction runExitAnimation(current: VNodeWrapper, transitions: TransitionStrategy, exitAnimation: string | Function) {\n\tconst {\n\t\tdomNode,\n\t\tnode: { properties }\n\t} = current;\n\tconst removeDomNode = () => {\n\t\tdomNode && domNode.parentNode && domNode.parentNode.removeChild(domNode);\n\t\tcurrent.domNode = undefined;\n\t};\n\tif (typeof exitAnimation === 'function') {\n\t\treturn exitAnimation(domNode as Element, removeDomNode, properties);\n\t}\n\ttransitions.exit(domNode as Element, properties, exitAnimation, removeDomNode);\n}\n\nfunction arrayFrom(arr: any) {\n\treturn Array.prototype.slice.call(arr);\n}\n\nfunction wrapNodes(renderer: () => DNode) {\n\treturn class extends WidgetBase {\n\t\tpublic isWNodeWrapper = true;\n\n\t\tprotected render() {\n\t\t\tconst result = renderer();\n\t\t\tthis.isWNodeWrapper = isWNode(result);\n\t\t\treturn result;\n\t\t}\n\t};\n}\n\nexport function renderer(renderer: () => WNode | VNode): Renderer {\n\tlet _mountOptions: MountOptions = {\n\t\tsync: false,\n\t\tmerge: true,\n\t\ttransition: transitionStrategy,\n\t\tdomNode: global.document.body,\n\t\tregistry: null\n\t};\n\tlet _invalidationQueue: InvalidationQueueItem[] = [];\n\tlet _processQueue: (ProcessItem | DetachApplication | AttachApplication)[] = [];\n\tlet _applicationQueue: ApplicationInstruction[] = [];\n\tlet _eventMap = new WeakMap<Function, EventListener>();\n\tlet _instanceToWrapperMap = new WeakMap<WidgetBase, WNodeWrapper>();\n\tlet _parentWrapperMap = new WeakMap<DNodeWrapper, DNodeWrapper>();\n\tlet _wrapperSiblingMap = new WeakMap<DNodeWrapper, DNodeWrapper>();\n\tlet _insertBeforeMap: undefined | WeakMap<DNodeWrapper, Node> = new WeakMap<DNodeWrapper, Node>();\n\tlet _renderScheduled: number | undefined;\n\tlet _afterRenderCallbacks: Function[] = [];\n\tlet _deferredRenderCallbacks: Function[] = [];\n\tlet parentInvalidate: () => void;\n\tlet _allMergedNodes: Node[] = [];\n\n\tfunction nodeOperation(\n\t\tpropName: string,\n\t\tpropValue: (() => boolean) | boolean,\n\t\tpreviousValue: boolean,\n\t\tdomNode: HTMLElement & { [index: string]: any }\n\t): void {\n\t\tlet result = propValue && !previousValue;\n\t\tif (typeof propValue === 'function') {\n\t\t\tresult = propValue();\n\t\t}\n\t\tif (result === true) {\n\t\t\t_afterRenderCallbacks.push(() => {\n\t\t\t\tdomNode[propName]();\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction updateEvent(\n\t\tdomNode: Node,\n\t\teventName: string,\n\t\tcurrentValue: Function,\n\t\tbind: any,\n\t\tpreviousValue?: Function\n\t) {\n\t\tif (previousValue) {\n\t\t\tconst previousEvent = _eventMap.get(previousValue);\n\t\t\tdomNode.removeEventListener(eventName, previousEvent);\n\t\t}\n\n\t\tlet callback = currentValue.bind(bind);\n\n\t\tif (eventName === 'input') {\n\t\t\tcallback = function(this: any, evt: Event) {\n\t\t\t\tcurrentValue.call(this, evt);\n\t\t\t\t(evt.target as any)['oninput-value'] = (evt.target as HTMLInputElement).value;\n\t\t\t}.bind(bind);\n\t\t}\n\n\t\tdomNode.addEventListener(eventName, callback);\n\t\t_eventMap.set(currentValue, callback);\n\t}\n\n\tfunction removeOrphanedEvents(\n\t\tdomNode: Element,\n\t\tpreviousProperties: VNodeProperties,\n\t\tproperties: VNodeProperties,\n\t\tonlyEvents: boolean = false\n\t) {\n\t\tObject.keys(previousProperties).forEach((propName) => {\n\t\t\tconst isEvent = propName.substr(0, 2) === 'on' || onlyEvents;\n\t\t\tconst eventName = onlyEvents ? propName : propName.substr(2);\n\t\t\tif (isEvent && !properties[propName]) {\n\t\t\t\tconst eventCallback = _eventMap.get(previousProperties[propName]);\n\t\t\t\tif (eventCallback) {\n\t\t\t\t\tdomNode.removeEventListener(eventName, eventCallback);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction renderedToWrapper(\n\t\trendered: DNode[],\n\t\tparent: DNodeWrapper,\n\t\tcurrentParent: DNodeWrapper | null\n\t): DNodeWrapper[] {\n\t\tconst { requiresInsertBefore, hasPreviousSiblings, namespace, depth } = parent;\n\t\tconst wrappedRendered: DNodeWrapper[] = [];\n\t\tconst hasParentWNode = isWNodeWrapper(parent);\n\t\tconst currentParentChildren = (isVNodeWrapper(currentParent) && currentParent.childrenWrappers) || [];\n\t\tconst hasCurrentParentChildren = currentParentChildren.length > 0;\n\t\tconst insertBefore =\n\t\t\t((requiresInsertBefore || hasPreviousSiblings !== false) && hasParentWNode) ||\n\t\t\t(hasCurrentParentChildren && rendered.length > 1);\n\t\tlet previousItem: DNodeWrapper | undefined;\n\t\tfor (let i = 0; i < rendered.length; i++) {\n\t\t\tconst renderedItem = rendered[i];\n\t\t\tconst wrapper = {\n\t\t\t\tnode: renderedItem,\n\t\t\t\tdepth: depth + 1,\n\t\t\t\torder: i,\n\t\t\t\trequiresInsertBefore: insertBefore,\n\t\t\t\thasParentWNode,\n\t\t\t\tnamespace: namespace\n\t\t\t} as DNodeWrapper;\n\t\t\tif (isVNode(renderedItem) && renderedItem.properties.exitAnimation) {\n\t\t\t\tparent.hasAnimations = true;\n\t\t\t\tlet nextParent = _parentWrapperMap.get(parent);\n\t\t\t\twhile (nextParent) {\n\t\t\t\t\tif (nextParent.hasAnimations) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tnextParent.hasAnimations = true;\n\t\t\t\t\tnextParent = _parentWrapperMap.get(nextParent);\n\t\t\t\t}\n\t\t\t}\n\t\t\t_parentWrapperMap.set(wrapper, parent);\n\t\t\tif (previousItem) {\n\t\t\t\t_wrapperSiblingMap.set(previousItem, wrapper);\n\t\t\t}\n\t\t\twrappedRendered.push(wrapper);\n\t\t\tpreviousItem = wrapper;\n\t\t}\n\t\treturn wrappedRendered;\n\t}\n\n\tfunction findParentWNodeWrapper(currentNode: DNodeWrapper): WNodeWrapper | undefined {\n\t\tlet parentWNodeWrapper: WNodeWrapper | undefined;\n\t\tlet parentWrapper = _parentWrapperMap.get(currentNode);\n\n\t\twhile (!parentWNodeWrapper && parentWrapper) {\n\t\t\tif (!parentWNodeWrapper && isWNodeWrapper(parentWrapper)) {\n\t\t\t\tparentWNodeWrapper = parentWrapper;\n\t\t\t}\n\t\t\tparentWrapper = _parentWrapperMap.get(parentWrapper);\n\t\t}\n\t\treturn parentWNodeWrapper;\n\t}\n\n\tfunction findParentDomNode(currentNode: DNodeWrapper): Node | undefined {\n\t\tlet parentDomNode: Node | undefined;\n\t\tlet parentWrapper = _parentWrapperMap.get(currentNode);\n\n\t\twhile (!parentDomNode && parentWrapper) {\n\t\t\tif (!parentDomNode && isVNodeWrapper(parentWrapper) && parentWrapper.domNode) {\n\t\t\t\tparentDomNode = parentWrapper.domNode;\n\t\t\t}\n\t\t\tparentWrapper = _parentWrapperMap.get(parentWrapper);\n\t\t}\n\t\treturn parentDomNode;\n\t}\n\n\tfunction runDeferredProperties(next: VNodeWrapper) {\n\t\tif (next.node.deferredPropertiesCallback) {\n\t\t\tconst properties = next.node.properties;\n\t\t\tnext.node.properties = { ...next.node.deferredPropertiesCallback(true), ...next.node.originalProperties };\n\t\t\t_afterRenderCallbacks.push(() => {\n\t\t\t\tprocessProperties(next, { properties });\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction findInsertBefore(next: DNodeWrapper) {\n\t\tlet insertBefore: Node | null = null;\n\t\tlet searchNode: DNodeWrapper | undefined = next;\n\t\twhile (!insertBefore) {\n\t\t\tconst nextSibling = _wrapperSiblingMap.get(searchNode);\n\t\t\tif (nextSibling) {\n\t\t\t\tif (isVNodeWrapper(nextSibling)) {\n\t\t\t\t\tif (nextSibling.domNode && nextSibling.domNode.parentNode) {\n\t\t\t\t\t\tinsertBefore = nextSibling.domNode;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tsearchNode = nextSibling;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (nextSibling.domNode && nextSibling.domNode.parentNode) {\n\t\t\t\t\tinsertBefore = nextSibling.domNode;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tsearchNode = nextSibling;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsearchNode = _parentWrapperMap.get(searchNode);\n\t\t\tif (!searchNode || isVNodeWrapper(searchNode)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn insertBefore;\n\t}\n\n\tfunction setValue(domNode: any, propValue?: any, previousValue?: any) {\n\t\tconst domValue = domNode.value;\n\t\tconst onInputValue = domNode['oninput-value'];\n\t\tconst onSelectValue = domNode['select-value'];\n\n\t\tif (onSelectValue && domValue !== onSelectValue) {\n\t\t\tdomNode.value = onSelectValue;\n\t\t\tif (domNode.value === onSelectValue) {\n\t\t\t\tdomNode['select-value'] = undefined;\n\t\t\t}\n\t\t} else if ((onInputValue && domValue === onInputValue) || propValue !== previousValue) {\n\t\t\tdomNode.value = propValue;\n\t\t\tdomNode['oninput-value'] = undefined;\n\t\t}\n\t}\n\n\tfunction setProperties(\n\t\tdomNode: HTMLElement,\n\t\tcurrentProperties: VNodeProperties = {},\n\t\tnextWrapper: VNodeWrapper,\n\t\tincludesEventsAndAttributes = true\n\t): void {\n\t\tconst propNames = Object.keys(nextWrapper.node.properties);\n\t\tconst propCount = propNames.length;\n\t\tif (propNames.indexOf('classes') === -1 && currentProperties.classes) {\n\t\t\tdomNode.removeAttribute('class');\n\t\t}\n\n\t\tincludesEventsAndAttributes && removeOrphanedEvents(domNode, currentProperties, nextWrapper.node.properties);\n\n\t\tfor (let i = 0; i < propCount; i++) {\n\t\t\tconst propName = propNames[i];\n\t\t\tlet propValue = nextWrapper.node.properties[propName];\n\t\t\tconst previousValue = currentProperties[propName];\n\t\t\tif (propName === 'classes') {\n\t\t\t\tconst previousClassString = createClassPropValue(previousValue);\n\t\t\t\tlet currentClassString = createClassPropValue(propValue);\n\t\t\t\tif (previousClassString !== currentClassString) {\n\t\t\t\t\tif (currentClassString) {\n\t\t\t\t\t\tif (nextWrapper.merged) {\n\t\t\t\t\t\t\tconst domClasses = (domNode.getAttribute('class') || '').split(' ');\n\t\t\t\t\t\t\tfor (let i = 0; i < domClasses.length; i++) {\n\t\t\t\t\t\t\t\tif (currentClassString.indexOf(domClasses[i]) === -1) {\n\t\t\t\t\t\t\t\t\tcurrentClassString = `${domClasses[i]} ${currentClassString}`;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdomNode.setAttribute('class', currentClassString);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdomNode.removeAttribute('class');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (nodeOperations.indexOf(propName) !== -1) {\n\t\t\t\tnodeOperation(propName, propValue, previousValue, domNode);\n\t\t\t} else if (propName === 'styles') {\n\t\t\t\tconst styleNames = Object.keys(propValue);\n\t\t\t\tconst styleCount = styleNames.length;\n\t\t\t\tfor (let j = 0; j < styleCount; j++) {\n\t\t\t\t\tconst styleName = styleNames[j];\n\t\t\t\t\tconst newStyleValue = propValue[styleName];\n\t\t\t\t\tconst oldStyleValue = previousValue && previousValue[styleName];\n\t\t\t\t\tif (newStyleValue === oldStyleValue) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t(domNode.style as any)[styleName] = newStyleValue || '';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!propValue && typeof previousValue === 'string') {\n\t\t\t\t\tpropValue = '';\n\t\t\t\t}\n\t\t\t\tif (propName === 'value') {\n\t\t\t\t\tif ((domNode as HTMLElement).tagName === 'SELECT') {\n\t\t\t\t\t\t(domNode as any)['select-value'] = propValue;\n\t\t\t\t\t}\n\t\t\t\t\tsetValue(domNode, propValue, previousValue);\n\t\t\t\t} else if (propName !== 'key' && propValue !== previousValue) {\n\t\t\t\t\tconst type = typeof propValue;\n\t\t\t\t\tif (type === 'function' && propName.lastIndexOf('on', 0) === 0 && includesEventsAndAttributes) {\n\t\t\t\t\t\tupdateEvent(domNode, propName.substr(2), propValue, nextWrapper.node.bind, previousValue);\n\t\t\t\t\t} else if (type === 'string' && propName !== 'innerHTML' && includesEventsAndAttributes) {\n\t\t\t\t\t\tupdateAttribute(domNode, propName, propValue, nextWrapper.namespace);\n\t\t\t\t\t} else if (propName === 'scrollLeft' || propName === 'scrollTop') {\n\t\t\t\t\t\tif ((domNode as any)[propName] !== propValue) {\n\t\t\t\t\t\t\t(domNode as any)[propName] = propValue;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t(domNode as any)[propName] = propValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction runDeferredRenderCallbacks() {\n\t\tconst { sync } = _mountOptions;\n\t\tconst callbacks = _deferredRenderCallbacks;\n\t\t_deferredRenderCallbacks = [];\n\t\tif (callbacks.length) {\n\t\t\tconst run = () => {\n\t\t\t\tlet callback: Function | undefined;\n\t\t\t\twhile ((callback = callbacks.shift())) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (sync) {\n\t\t\t\trun();\n\t\t\t} else {\n\t\t\t\tglobal.requestAnimationFrame(run);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction runAfterRenderCallbacks() {\n\t\tconst { sync } = _mountOptions;\n\t\tconst callbacks = _afterRenderCallbacks;\n\t\t_afterRenderCallbacks = [];\n\t\tif (callbacks.length) {\n\t\t\tconst run = () => {\n\t\t\t\tlet callback: Function | undefined;\n\t\t\t\twhile ((callback = callbacks.shift())) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (sync) {\n\t\t\t\trun();\n\t\t\t} else {\n\t\t\t\tif (global.requestIdleCallback) {\n\t\t\t\t\tglobal.requestIdleCallback(run);\n\t\t\t\t} else {\n\t\t\t\t\tsetTimeout(run);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction processProperties(next: VNodeWrapper, previousProperties: PreviousProperties) {\n\t\tif (next.node.attributes && next.node.events) {\n\t\t\tupdateAttributes(\n\t\t\t\tnext.domNode as HTMLElement,\n\t\t\t\tpreviousProperties.attributes || {},\n\t\t\t\tnext.node.attributes,\n\t\t\t\tnext.namespace\n\t\t\t);\n\t\t\tsetProperties(next.domNode as HTMLElement, previousProperties.properties, next, false);\n\t\t\tconst events = next.node.events || {};\n\t\t\tif (previousProperties.events) {\n\t\t\t\tremoveOrphanedEvents(\n\t\t\t\t\tnext.domNode as HTMLElement,\n\t\t\t\t\tpreviousProperties.events || {},\n\t\t\t\t\tnext.node.events,\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t}\n\t\t\tpreviousProperties.events = previousProperties.events || {};\n\t\t\tObject.keys(events).forEach((event) => {\n\t\t\t\tupdateEvent(\n\t\t\t\t\tnext.domNode as HTMLElement,\n\t\t\t\t\tevent,\n\t\t\t\t\tevents[event],\n\t\t\t\t\tnext.node.bind,\n\t\t\t\t\tpreviousProperties.events[event]\n\t\t\t\t);\n\t\t\t});\n\t\t} else {\n\t\t\tsetProperties(next.domNode as HTMLElement, previousProperties.properties, next);\n\t\t}\n\t}\n\n\tfunction mount(mountOptions: Partial<MountOptions> = {}) {\n\t\t_mountOptions = { ..._mountOptions, ...mountOptions };\n\t\tconst { domNode } = _mountOptions;\n\t\tconst renderResult = w(wrapNodes(renderer), {});\n\t\tconst nextWrapper = {\n\t\t\tnode: renderResult,\n\t\t\torder: 0,\n\t\t\tdepth: 1\n\t\t};\n\t\t_parentWrapperMap.set(nextWrapper, { depth: 0, order: 0, domNode, node: v('fake') });\n\t\t_processQueue.push({\n\t\t\tcurrent: [],\n\t\t\tnext: [nextWrapper],\n\t\t\tmeta: { mergeNodes: arrayFrom(domNode.childNodes) }\n\t\t});\n\t\t_runProcessQueue();\n\t\tlet mergedNode: Node | undefined;\n\t\twhile ((mergedNode = _allMergedNodes.pop())) {\n\t\t\tmergedNode.parentNode && mergedNode.parentNode.removeChild(mergedNode);\n\t\t}\n\t\t_runDomInstructionQueue();\n\t\t_mountOptions.merge = false;\n\t\t_insertBeforeMap = undefined;\n\t\t_runCallbacks();\n\t}\n\n\tfunction invalidate() {\n\t\tparentInvalidate && parentInvalidate();\n\t}\n\n\tfunction _schedule(): void {\n\t\tconst { sync } = _mountOptions;\n\t\tif (sync) {\n\t\t\t_runInvalidationQueue();\n\t\t} else if (!_renderScheduled) {\n\t\t\t_renderScheduled = global.requestAnimationFrame(() => {\n\t\t\t\t_runInvalidationQueue();\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction _runInvalidationQueue() {\n\t\t_renderScheduled = undefined;\n\t\tconst invalidationQueue = [..._invalidationQueue];\n\t\tconst previouslyRendered = [];\n\t\t_invalidationQueue = [];\n\t\tinvalidationQueue.sort((a, b) => {\n\t\t\tlet result = b.depth - a.depth;\n\t\t\tif (result === 0) {\n\t\t\t\tresult = b.order - a.order;\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t\tlet item: InvalidationQueueItem | undefined;\n\t\twhile ((item = invalidationQueue.pop())) {\n\t\t\tlet { instance } = item;\n\t\t\tif (previouslyRendered.indexOf(instance) === -1 && _instanceToWrapperMap.has(instance!)) {\n\t\t\t\tpreviouslyRendered.push(instance);\n\t\t\t\tconst current = _instanceToWrapperMap.get(instance)!;\n\t\t\t\tconst instanceData = widgetInstanceMap.get(instance)!;\n\t\t\t\tconst parent = _parentWrapperMap.get(current);\n\t\t\t\tconst sibling = _wrapperSiblingMap.get(current);\n\t\t\t\tconst { constructor, children } = instance;\n\t\t\t\tconst next = {\n\t\t\t\t\tnode: {\n\t\t\t\t\t\ttype: WNODE,\n\t\t\t\t\t\twidgetConstructor: constructor as WidgetBaseConstructor,\n\t\t\t\t\t\tproperties: instanceData.inputProperties,\n\t\t\t\t\t\tchildren: children,\n\t\t\t\t\t\tbind: current.node.bind\n\t\t\t\t\t},\n\t\t\t\t\tinstance,\n\t\t\t\t\tdepth: current.depth,\n\t\t\t\t\torder: current.order\n\t\t\t\t};\n\n\t\t\t\tparent && _parentWrapperMap.set(next, parent);\n\t\t\t\tsibling && _wrapperSiblingMap.set(next, sibling);\n\t\t\t\tconst { item } = _updateWidget({ current, next });\n\t\t\t\tif (item) {\n\t\t\t\t\t_processQueue.push(item);\n\t\t\t\t\tinstance && _instanceToWrapperMap.set(instance, next);\n\t\t\t\t\t_runProcessQueue();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_runDomInstructionQueue();\n\t\t_runCallbacks();\n\t}\n\n\tfunction _runProcessQueue() {\n\t\tlet item: DetachApplication | AttachApplication | ProcessItem | undefined;\n\t\twhile ((item = _processQueue.pop())) {\n\t\t\tif (isAttachApplication(item)) {\n\t\t\t\t_applicationQueue.push(item);\n\t\t\t} else {\n\t\t\t\tconst { current, next, meta } = item;\n\t\t\t\t_process(current || EMPTY_ARRAY, next || EMPTY_ARRAY, meta);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction _runDomInstructionQueue(): void {\n\t\t_applicationQueue.reverse();\n\t\tlet item: ApplicationInstruction | undefined;\n\t\twhile ((item = _applicationQueue.pop())) {\n\t\t\tif (item.type === 'create') {\n\t\t\t\tconst {\n\t\t\t\t\tparentDomNode,\n\t\t\t\t\tnext,\n\t\t\t\t\tnext: {\n\t\t\t\t\t\tdomNode,\n\t\t\t\t\t\tmerged,\n\t\t\t\t\t\trequiresInsertBefore,\n\t\t\t\t\t\tnode: { properties }\n\t\t\t\t\t}\n\t\t\t\t} = item;\n\n\t\t\t\tprocessProperties(next, { properties: {} });\n\t\t\t\trunDeferredProperties(next);\n\t\t\t\tif (!merged) {\n\t\t\t\t\tlet insertBefore: any;\n\t\t\t\t\tif (requiresInsertBefore) {\n\t\t\t\t\t\tinsertBefore = findInsertBefore(next);\n\t\t\t\t\t} else if (_insertBeforeMap) {\n\t\t\t\t\t\tinsertBefore = _insertBeforeMap.get(next);\n\t\t\t\t\t}\n\t\t\t\t\tparentDomNode.insertBefore(domNode!, insertBefore);\n\t\t\t\t\tif (isDomVNode(next.node) && next.node.onAttach) {\n\t\t\t\t\t\tnext.node.onAttach();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ((domNode as HTMLElement).tagName === 'OPTION' && domNode!.parentElement) {\n\t\t\t\t\tsetValue(domNode!.parentElement);\n\t\t\t\t}\n\t\t\t\trunEnterAnimation(next, _mountOptions.transition);\n\t\t\t\tconst instanceData = widgetInstanceMap.get(next.node.bind as WidgetBase);\n\t\t\t\tif (properties.key != null && instanceData) {\n\t\t\t\t\tinstanceData.nodeHandler.add(domNode as HTMLElement, `${properties.key}`);\n\t\t\t\t}\n\t\t\t\titem.next.inserted = true;\n\t\t\t} else if (item.type === 'update') {\n\t\t\t\tconst {\n\t\t\t\t\tnext,\n\t\t\t\t\tnext: { domNode, node },\n\t\t\t\t\tcurrent\n\t\t\t\t} = item;\n\t\t\t\tconst parent = _parentWrapperMap.get(next);\n\t\t\t\tif (parent && isWNodeWrapper(parent) && parent.instance) {\n\t\t\t\t\tconst instanceData = widgetInstanceMap.get(parent.instance);\n\t\t\t\t\tinstanceData && instanceData.nodeHandler.addRoot();\n\t\t\t\t}\n\n\t\t\t\tconst previousProperties = buildPreviousProperties(domNode, current, next);\n\t\t\t\tconst instanceData = widgetInstanceMap.get(next.node.bind as WidgetBase);\n\n\t\t\t\tprocessProperties(next, previousProperties);\n\t\t\t\trunDeferredProperties(next);\n\n\t\t\t\tif (instanceData && node.properties.key != null) {\n\t\t\t\t\tinstanceData.nodeHandler.add(next.domNode as HTMLElement, `${node.properties.key}`);\n\t\t\t\t}\n\t\t\t} else if (item.type === 'delete') {\n\t\t\t\tconst { current } = item;\n\t\t\t\tconst { exitAnimation } = current.node.properties;\n\t\t\t\tif (exitAnimation && exitAnimation !== true) {\n\t\t\t\t\trunExitAnimation(current, _mountOptions.transition, exitAnimation);\n\t\t\t\t} else {\n\t\t\t\t\tcurrent.domNode!.parentNode!.removeChild(current.domNode!);\n\t\t\t\t\tcurrent.domNode = undefined;\n\t\t\t\t}\n\t\t\t} else if (item.type === 'attach') {\n\t\t\t\tconst { instance, attached } = item;\n\t\t\t\tconst instanceData = widgetInstanceMap.get(instance)!;\n\t\t\t\tinstanceData.nodeHandler.addRoot();\n\t\t\t\tattached && instanceData.onAttach();\n\t\t\t} else if (item.type === 'detach') {\n\t\t\t\tif (item.current.instance) {\n\t\t\t\t\tconst instanceData = widgetInstanceMap.get(item.current.instance);\n\t\t\t\t\tinstanceData && instanceData.onDetach();\n\t\t\t\t}\n\t\t\t\titem.current.domNode = undefined;\n\t\t\t\titem.current.node.bind = undefined;\n\t\t\t\titem.current.instance = undefined;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction _runCallbacks() {\n\t\trunAfterRenderCallbacks();\n\t\trunDeferredRenderCallbacks();\n\t}\n\n\tfunction _processMergeNodes(next: DNodeWrapper, mergeNodes: Node[]) {\n\t\tconst { merge } = _mountOptions;\n\t\tif (merge && mergeNodes.length) {\n\t\t\tif (isVNodeWrapper(next)) {\n\t\t\t\tlet {\n\t\t\t\t\tnode: { tag }\n\t\t\t\t} = next;\n\t\t\t\tfor (let i = 0; i < mergeNodes.length; i++) {\n\t\t\t\t\tconst domElement = mergeNodes[i] as Element;\n\t\t\t\t\tif (tag.toUpperCase() === (domElement.tagName || '')) {\n\t\t\t\t\t\tconst mergeNodeIndex = _allMergedNodes.indexOf(domElement);\n\t\t\t\t\t\tif (mergeNodeIndex !== -1) {\n\t\t\t\t\t\t\t_allMergedNodes.splice(mergeNodeIndex, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmergeNodes.splice(i, 1);\n\t\t\t\t\t\tnext.domNode = domElement;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnext.mergeNodes = mergeNodes;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction registerDistinguishableCallback(childNodes: DNodeWrapper[], index: number) {\n\t\t_afterRenderCallbacks.push(() => {\n\t\t\tconst parentWNodeWrapper = findParentWNodeWrapper(childNodes[index]);\n\t\t\tcheckDistinguishable(childNodes, index, parentWNodeWrapper);\n\t\t});\n\t}\n\n\tfunction _process(current: DNodeWrapper[], next: DNodeWrapper[], meta: ProcessMeta = {}): void {\n\t\tlet { mergeNodes = [], oldIndex = 0, newIndex = 0 } = meta;\n\t\tconst currentLength = current.length;\n\t\tconst nextLength = next.length;\n\t\tconst hasPreviousSiblings = currentLength > 1 || (currentLength > 0 && currentLength < nextLength);\n\t\tconst instructions: Instruction[] = [];\n\t\tif (newIndex < nextLength) {\n\t\t\tlet currentWrapper = oldIndex < currentLength ? current[oldIndex] : undefined;\n\t\t\tconst nextWrapper = next[newIndex];\n\t\t\tnextWrapper.hasPreviousSiblings = hasPreviousSiblings;\n\n\t\t\t_processMergeNodes(nextWrapper, mergeNodes);\n\n\t\t\tif (currentWrapper && same(currentWrapper, nextWrapper)) {\n\t\t\t\toldIndex++;\n\t\t\t\tnewIndex++;\n\t\t\t\tif (isVNodeWrapper(currentWrapper) && isVNodeWrapper(nextWrapper)) {\n\t\t\t\t\tnextWrapper.inserted = currentWrapper.inserted;\n\t\t\t\t}\n\t\t\t\tinstructions.push({ current: currentWrapper, next: nextWrapper });\n\t\t\t} else if (!currentWrapper || findIndexOfChild(current, nextWrapper, oldIndex + 1) === -1) {\n\t\t\t\thas('dojo-debug') && current.length && registerDistinguishableCallback(next, newIndex);\n\t\t\t\tinstructions.push({ current: undefined, next: nextWrapper });\n\t\t\t\tnewIndex++;\n\t\t\t} else if (findIndexOfChild(next, currentWrapper, newIndex + 1) === -1) {\n\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(current, oldIndex);\n\t\t\t\tinstructions.push({ current: currentWrapper, next: undefined });\n\t\t\t\toldIndex++;\n\t\t\t} else {\n\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(next, newIndex);\n\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(current, oldIndex);\n\t\t\t\tinstructions.push({ current: currentWrapper, next: undefined });\n\t\t\t\tinstructions.push({ current: undefined, next: nextWrapper });\n\t\t\t\toldIndex++;\n\t\t\t\tnewIndex++;\n\t\t\t}\n\t\t}\n\n\t\tif (newIndex < nextLength) {\n\t\t\t_processQueue.push({ current, next, meta: { mergeNodes, oldIndex, newIndex } });\n\t\t}\n\n\t\tif (currentLength > oldIndex && newIndex >= nextLength) {\n\t\t\tfor (let i = oldIndex; i < currentLength; i++) {\n\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(current, i);\n\t\t\t\tinstructions.push({ current: current[i], next: undefined });\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < instructions.length; i++) {\n\t\t\tconst { item, dom, widget } = _processOne(instructions[i]);\n\t\t\twidget && _processQueue.push(widget);\n\t\t\titem && _processQueue.push(item);\n\t\t\tdom && _applicationQueue.push(dom);\n\t\t}\n\t}\n\n\tfunction _processOne({ current, next }: Instruction): ProcessResult {\n\t\tif (current !== next) {\n\t\t\tif (!current && next) {\n\t\t\t\tif (isVNodeWrapper(next)) {\n\t\t\t\t\treturn _createDom({ next });\n\t\t\t\t} else {\n\t\t\t\t\treturn _createWidget({ next });\n\t\t\t\t}\n\t\t\t} else if (current && next) {\n\t\t\t\tif (isVNodeWrapper(current) && isVNodeWrapper(next)) {\n\t\t\t\t\treturn _updateDom({ current, next });\n\t\t\t\t} else if (isWNodeWrapper(current) && isWNodeWrapper(next)) {\n\t\t\t\t\treturn _updateWidget({ current, next });\n\t\t\t\t}\n\t\t\t} else if (current && !next) {\n\t\t\t\tif (isVNodeWrapper(current)) {\n\t\t\t\t\treturn _removeDom({ current });\n\t\t\t\t} else if (isWNodeWrapper(current)) {\n\t\t\t\t\treturn _removeWidget({ current });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn {};\n\t}\n\n\tfunction _createWidget({ next }: CreateWidgetInstruction): ProcessResult {\n\t\tlet {\n\t\t\tnode: { widgetConstructor }\n\t\t} = next;\n\t\tlet { registry } = _mountOptions;\n\t\tif (!isWidgetBaseConstructor(widgetConstructor)) {\n\t\t\treturn {};\n\t\t}\n\t\tconst instance = new widgetConstructor() as WidgetBase;\n\t\tif (registry) {\n\t\t\tinstance.registry.base = registry;\n\t\t}\n\t\tconst instanceData = widgetInstanceMap.get(instance)!;\n\t\tinstanceData.invalidate = () => {\n\t\t\tinstanceData.dirty = true;\n\t\t\tif (!instanceData.rendering && _instanceToWrapperMap.has(instance)) {\n\t\t\t\t_invalidationQueue.push({ instance, depth: next.depth, order: next.order });\n\t\t\t\t_schedule();\n\t\t\t}\n\t\t};\n\t\tinstanceData.rendering = true;\n\t\tinstance.__setProperties__(next.node.properties, next.node.bind);\n\t\tinstance.__setChildren__(next.node.children);\n\t\tnext.instance = instance;\n\t\tlet rendered = instance.__render__();\n\t\tinstanceData.rendering = false;\n\t\tif (rendered) {\n\t\t\trendered = Array.isArray(rendered) ? rendered : [rendered];\n\t\t\tnext.childrenWrappers = renderedToWrapper(rendered, next, null);\n\t\t}\n\t\tif (next.instance) {\n\t\t\t_instanceToWrapperMap.set(next.instance, next);\n\t\t\tif (!parentInvalidate && !(next.instance as any).isWNodeWrapper) {\n\t\t\t\tparentInvalidate = next.instance.invalidate.bind(next.instance);\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\titem: { next: next.childrenWrappers, meta: { mergeNodes: next.mergeNodes } },\n\t\t\twidget: { type: 'attach', instance, attached: true }\n\t\t};\n\t}\n\n\tfunction _updateWidget({ current, next }: UpdateWidgetInstruction): ProcessResult {\n\t\tcurrent = (current.instance && _instanceToWrapperMap.get(current.instance)) || current;\n\t\tconst { instance, domNode, hasAnimations } = current;\n\t\tif (!instance) {\n\t\t\treturn [] as ProcessResult;\n\t\t}\n\t\tconst instanceData = widgetInstanceMap.get(instance)!;\n\t\tnext.instance = instance;\n\t\tnext.domNode = domNode;\n\t\tnext.hasAnimations = hasAnimations;\n\t\tinstanceData.rendering = true;\n\t\tinstance!.__setProperties__(next.node.properties, next.node.bind);\n\t\tinstance!.__setChildren__(next.node.children);\n\t\t_instanceToWrapperMap.set(next.instance!, next);\n\t\tif (instanceData.dirty) {\n\t\t\tlet rendered = instance!.__render__();\n\t\t\tinstanceData.rendering = false;\n\t\t\tif (rendered) {\n\t\t\t\trendered = Array.isArray(rendered) ? rendered : [rendered];\n\t\t\t\tnext.childrenWrappers = renderedToWrapper(rendered, next, current);\n\t\t\t}\n\t\t\treturn {\n\t\t\t\titem: { current: current.childrenWrappers, next: next.childrenWrappers, meta: {} },\n\t\t\t\twidget: { type: 'attach', instance, attached: false }\n\t\t\t};\n\t\t}\n\t\tinstanceData.rendering = false;\n\t\tnext.childrenWrappers = current.childrenWrappers;\n\t\treturn {\n\t\t\twidget: { type: 'attach', instance, attached: false }\n\t\t};\n\t}\n\n\tfunction _removeWidget({ current }: RemoveWidgetInstruction): ProcessResult {\n\t\tcurrent = current.instance ? _instanceToWrapperMap.get(current.instance)! : current;\n\t\t_wrapperSiblingMap.delete(current);\n\t\t_parentWrapperMap.delete(current);\n\t\t_instanceToWrapperMap.delete(current.instance!);\n\n\t\treturn {\n\t\t\titem: { current: current.childrenWrappers, meta: {} },\n\t\t\twidget: { type: 'detach', current }\n\t\t};\n\t}\n\n\tfunction _createDom({ next }: CreateDomInstruction): ProcessResult {\n\t\tlet mergeNodes: Node[] = [];\n\t\tconst parentDomNode = findParentDomNode(next)!;\n\t\tif (!next.domNode) {\n\t\t\tif ((next.node as any).domNode) {\n\t\t\t\tnext.domNode = (next.node as any).domNode;\n\t\t\t} else {\n\t\t\t\tif (next.node.tag === 'svg') {\n\t\t\t\t\tnext.namespace = NAMESPACE_SVG;\n\t\t\t\t}\n\t\t\t\tif (next.node.tag) {\n\t\t\t\t\tif (next.namespace) {\n\t\t\t\t\t\tnext.domNode = global.document.createElementNS(next.namespace, next.node.tag);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnext.domNode = global.document.createElement(next.node.tag);\n\t\t\t\t\t}\n\t\t\t\t} else if (next.node.text != null) {\n\t\t\t\t\tnext.domNode = global.document.createTextNode(next.node.text);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (_insertBeforeMap && _allMergedNodes.length) {\n\t\t\t\tif (parentDomNode === _allMergedNodes[0].parentNode) {\n\t\t\t\t\t_insertBeforeMap.set(next, _allMergedNodes[0]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (_mountOptions.merge) {\n\t\t\t\tmergeNodes = arrayFrom(next.domNode.childNodes);\n\t\t\t\t_allMergedNodes = [..._allMergedNodes, ...mergeNodes];\n\t\t\t}\n\t\t\tnext.merged = true;\n\t\t}\n\t\tif (next.domNode) {\n\t\t\tif (next.node.children) {\n\t\t\t\tnext.childrenWrappers = renderedToWrapper(next.node.children, next, null);\n\t\t\t}\n\t\t}\n\t\tconst parentWNodeWrapper = findParentWNodeWrapper(next);\n\t\tif (parentWNodeWrapper && !parentWNodeWrapper.domNode) {\n\t\t\tparentWNodeWrapper.domNode = next.domNode;\n\t\t}\n\t\tconst dom: ApplicationInstruction = {\n\t\t\tnext: next!,\n\t\t\tparentDomNode: parentDomNode,\n\t\t\ttype: 'create'\n\t\t};\n\t\tif (next.childrenWrappers) {\n\t\t\treturn {\n\t\t\t\titem: { current: [], next: next.childrenWrappers, meta: { mergeNodes } },\n\t\t\t\tdom\n\t\t\t};\n\t\t}\n\t\treturn { dom };\n\t}\n\n\tfunction _updateDom({ current, next }: UpdateDomInstruction): ProcessResult {\n\t\tconst parentDomNode = findParentDomNode(current);\n\t\tnext.domNode = current.domNode;\n\t\tnext.namespace = current.namespace;\n\t\tif (next.node.text && next.node.text !== current.node.text) {\n\t\t\tconst updatedTextNode = parentDomNode!.ownerDocument.createTextNode(next.node.text!);\n\t\t\tparentDomNode!.replaceChild(updatedTextNode, next.domNode!);\n\t\t\tnext.domNode = updatedTextNode;\n\t\t} else if (next.node.children) {\n\t\t\tconst children = renderedToWrapper(next.node.children, next, current);\n\t\t\tnext.childrenWrappers = children;\n\t\t}\n\t\treturn {\n\t\t\titem: { current: current.childrenWrappers, next: next.childrenWrappers, meta: {} },\n\t\t\tdom: { type: 'update', next, current }\n\t\t};\n\t}\n\n\tfunction _removeDom({ current }: RemoveDomInstruction): ProcessResult {\n\t\t_wrapperSiblingMap.delete(current);\n\t\t_parentWrapperMap.delete(current);\n\t\tcurrent.node.bind = undefined;\n\t\tif (current.hasAnimations) {\n\t\t\treturn {\n\t\t\t\titem: { current: current.childrenWrappers, meta: {} },\n\t\t\t\tdom: { type: 'delete', current }\n\t\t\t};\n\t\t}\n\n\t\tif (current.childrenWrappers) {\n\t\t\t_afterRenderCallbacks.push(() => {\n\t\t\t\tlet wrappers = current.childrenWrappers || [];\n\t\t\t\tlet wrapper: DNodeWrapper | undefined;\n\t\t\t\twhile ((wrapper = wrappers.pop())) {\n\t\t\t\t\tif (wrapper.childrenWrappers) {\n\t\t\t\t\t\twrappers.push(...wrapper.childrenWrappers);\n\t\t\t\t\t\twrapper.childrenWrappers = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tif (isWNodeWrapper(wrapper)) {\n\t\t\t\t\t\tif (wrapper.instance) {\n\t\t\t\t\t\t\t_instanceToWrapperMap.delete(wrapper.instance);\n\t\t\t\t\t\t\tconst instanceData = widgetInstanceMap.get(wrapper.instance);\n\t\t\t\t\t\t\tinstanceData && instanceData.onDetach();\n\t\t\t\t\t\t}\n\t\t\t\t\t\twrapper.instance = undefined;\n\t\t\t\t\t}\n\t\t\t\t\t_wrapperSiblingMap.delete(wrapper);\n\t\t\t\t\t_parentWrapperMap.delete(wrapper);\n\t\t\t\t\twrapper.domNode = undefined;\n\t\t\t\t\twrapper.node.bind = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn {\n\t\t\tdom: { type: 'delete', current }\n\t\t};\n\t}\n\n\treturn {\n\t\tmount,\n\t\tinvalidate\n\t};\n}\n\nexport default renderer;\n","export type DecoratorHandler = (target: any, propertyKey?: string) => void;\n\n/**\n * Generic decorator handler to take care of whether or not the decorator was called at the class level\n * or the method level.\n *\n * @param handler\n */\nexport function handleDecorator(handler: DecoratorHandler) {\n\treturn function(target: any, propertyKey?: string, descriptor?: PropertyDescriptor) {\n\t\tif (typeof target === 'function') {\n\t\t\thandler(target.prototype, undefined);\n\t\t} else {\n\t\t\thandler(target, propertyKey);\n\t\t}\n\t};\n}\n\nexport default handleDecorator;\n","import { handleDecorator } from './handleDecorator';\nimport { BeforeProperties } from './../interfaces';\n\n/**\n * Decorator that adds the function passed of target method to be run\n * in the `beforeProperties` lifecycle.\n */\nexport function beforeProperties(method: BeforeProperties): (target: any) => void;\nexport function beforeProperties(): (target: any, propertyKey: string) => void;\nexport function beforeProperties(method?: BeforeProperties) {\n\treturn handleDecorator((target, propertyKey) => {\n\t\ttarget.addDecorator('beforeProperties', propertyKey ? target[propertyKey] : method);\n\t});\n}\n\nexport default beforeProperties;\n","import WeakMap from '../../shim/WeakMap';\nimport { WidgetBase } from './../WidgetBase';\nimport { handleDecorator } from './handleDecorator';\nimport { beforeProperties } from './beforeProperties';\nimport { InjectorItem, RegistryLabel } from './../interfaces';\n\n/**\n * Map of instances against registered injectors.\n */\nconst registeredInjectorsMap: WeakMap<WidgetBase, InjectorItem[]> = new WeakMap();\n\n/**\n * Defines the contract requires for the get properties function\n * used to map the injected properties.\n */\nexport interface GetProperties<T = any> {\n\t(payload: any, properties: T): T;\n}\n\n/**\n * Defines the inject configuration required for use of the `inject` decorator\n */\nexport interface InjectConfig {\n\t/**\n\t * The label of the registry injector\n\t */\n\tname: RegistryLabel;\n\n\t/**\n\t * Function that returns propertues to inject using the passed properties\n\t * and the injected payload.\n\t */\n\tgetProperties: GetProperties;\n}\n\n/**\n * Decorator retrieves an injector from an available registry using the name and\n * calls the `getProperties` function with the payload from the injector\n * and current properties with the the injected properties returned.\n *\n * @param InjectConfig the inject configuration\n */\nexport function inject({ name, getProperties }: InjectConfig) {\n\treturn handleDecorator((target, propertyKey) => {\n\t\tbeforeProperties(function(this: WidgetBase & { own: Function }, properties: any) {\n\t\t\tconst injectorItem = this.registry.getInjector(name);\n\t\t\tif (injectorItem) {\n\t\t\t\tconst { injector, invalidator } = injectorItem;\n\t\t\t\tconst registeredInjectors = registeredInjectorsMap.get(this) || [];\n\t\t\t\tif (registeredInjectors.length === 0) {\n\t\t\t\t\tregisteredInjectorsMap.set(this, registeredInjectors);\n\t\t\t\t}\n\t\t\t\tif (registeredInjectors.indexOf(injectorItem) === -1) {\n\t\t\t\t\tthis.own(\n\t\t\t\t\t\tinvalidator.on('invalidate', () => {\n\t\t\t\t\t\t\tthis.invalidate();\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t\tregisteredInjectors.push(injectorItem);\n\t\t\t\t}\n\t\t\t\treturn getProperties(injector(), properties);\n\t\t\t}\n\t\t})(target);\n\t});\n}\n\nexport default inject;\n","import { handleDecorator } from './handleDecorator';\nimport { DiffPropertyFunction } from './../interfaces';\nimport { auto } from './../diff';\n\n/**\n * Decorator that can be used to register a function as a specific property diff\n *\n * @param propertyName  The name of the property of which the diff function is applied\n * @param diffType      The diff type, default is DiffType.AUTO.\n * @param diffFunction  A diff function to run if diffType if DiffType.CUSTOM\n */\nexport function diffProperty(\n\tpropertyName: string,\n\tdiffFunction: DiffPropertyFunction = auto,\n\treactionFunction?: Function\n) {\n\treturn handleDecorator((target, propertyKey) => {\n\t\ttarget.addDecorator(`diffProperty:${propertyName}`, diffFunction.bind(null));\n\t\ttarget.addDecorator('registeredDiffProperty', propertyName);\n\t\tif (reactionFunction || propertyKey) {\n\t\t\ttarget.addDecorator('diffReaction', {\n\t\t\t\tpropertyName,\n\t\t\t\treaction: propertyKey ? target[propertyKey] : reactionFunction\n\t\t\t});\n\t\t}\n\t});\n}\n\nexport default diffProperty;\n","import { Constructor, WidgetProperties, SupportedClassName } from './../interfaces';\nimport { Registry } from './../Registry';\nimport { Injector } from './../Injector';\nimport { inject } from './../decorators/inject';\nimport { WidgetBase } from './../WidgetBase';\nimport { handleDecorator } from './../decorators/handleDecorator';\nimport { diffProperty } from './../decorators/diffProperty';\nimport { shallow } from './../diff';\n\n/**\n * A lookup object for available class names\n */\nexport type ClassNames = {\n\t[key: string]: string;\n};\n\n/**\n * A lookup object for available widget classes names\n */\nexport interface Theme {\n\t[key: string]: object;\n}\n\n/**\n * Classes property interface\n */\nexport interface Classes {\n\t[widgetKey: string]: {\n\t\t[classKey: string]: SupportedClassName[];\n\t};\n}\n\n/**\n * Properties required for the Themed mixin\n */\nexport interface ThemedProperties<T = ClassNames> extends WidgetProperties {\n\ttheme?: Theme;\n\tclasses?: Classes;\n\textraClasses?: { [P in keyof T]?: string };\n}\n\nconst THEME_KEY = ' _key';\n\nexport const INJECTED_THEME_KEY = '__theme_injector';\n\n/**\n * Interface for the ThemedMixin\n */\nexport interface ThemedMixin<T = ClassNames> {\n\ttheme(classes: SupportedClassName): SupportedClassName;\n\ttheme(classes: SupportedClassName[]): SupportedClassName[];\n\tproperties: ThemedProperties<T>;\n}\n\n/**\n * Decorator for base css classes\n */\nexport function theme(theme: {}) {\n\treturn handleDecorator((target) => {\n\t\ttarget.addDecorator('baseThemeClasses', theme);\n\t});\n}\n\n/**\n * Creates a reverse lookup for the classes passed in via the `theme` function.\n *\n * @param classes The baseClasses object\n * @requires\n */\nfunction createThemeClassesLookup(classes: ClassNames[]): ClassNames {\n\treturn classes.reduce(\n\t\t(currentClassNames, baseClass) => {\n\t\t\tObject.keys(baseClass).forEach((key: string) => {\n\t\t\t\tcurrentClassNames[baseClass[key]] = key;\n\t\t\t});\n\t\t\treturn currentClassNames;\n\t\t},\n\t\t<ClassNames>{}\n\t);\n}\n\n/**\n * Convenience function that is given a theme and an optional registry, the theme\n * injector is defined against the registry, returning the theme.\n *\n * @param theme the theme to set\n * @param themeRegistry registry to define the theme injector against. Defaults\n * to the global registry\n *\n * @returns the theme injector used to set the theme\n */\nexport function registerThemeInjector(theme: any, themeRegistry: Registry): Injector {\n\tconst themeInjector = new Injector(theme);\n\tthemeRegistry.defineInjector(INJECTED_THEME_KEY, (invalidator) => {\n\t\tthemeInjector.setInvalidator(invalidator);\n\t\treturn () => themeInjector.get();\n\t});\n\treturn themeInjector;\n}\n\n/**\n * Function that returns a class decorated with with Themed functionality\n */\n\nexport function ThemedMixin<E, T extends Constructor<WidgetBase<ThemedProperties<E>>>>(\n\tBase: T\n): Constructor<ThemedMixin<E>> & T {\n\t@inject({\n\t\tname: INJECTED_THEME_KEY,\n\t\tgetProperties: (theme: Theme, properties: ThemedProperties): ThemedProperties => {\n\t\t\tif (!properties.theme) {\n\t\t\t\treturn { theme };\n\t\t\t}\n\t\t\treturn {};\n\t\t}\n\t})\n\tabstract class Themed extends Base {\n\t\tpublic abstract properties: ThemedProperties<E>;\n\n\t\t/**\n\t\t * The Themed baseClasses\n\t\t */\n\t\tprivate _registeredBaseTheme: ClassNames | undefined;\n\n\t\t/**\n\t\t * Registered base theme keys\n\t\t */\n\t\tprivate _registeredBaseThemeKeys: string[] = [];\n\n\t\t/**\n\t\t * Reverse lookup of the theme classes\n\t\t */\n\t\tprivate _baseThemeClassesReverseLookup: ClassNames | undefined;\n\n\t\t/**\n\t\t * Indicates if classes meta data need to be calculated.\n\t\t */\n\t\tprivate _recalculateClasses = true;\n\n\t\t/**\n\t\t * Extra classes map\n\t\t */\n\t\tprivate _classes: Classes;\n\n\t\t/**\n\t\t * Loaded theme\n\t\t */\n\t\tprivate _theme: ClassNames = {};\n\n\t\tpublic theme(classes: SupportedClassName): SupportedClassName;\n\t\tpublic theme(classes: SupportedClassName[]): SupportedClassName[];\n\t\tpublic theme(classes: SupportedClassName | SupportedClassName[]): SupportedClassName | SupportedClassName[] {\n\t\t\tif (this._recalculateClasses) {\n\t\t\t\tthis._recalculateThemeClasses();\n\t\t\t}\n\t\t\tif (Array.isArray(classes)) {\n\t\t\t\treturn classes.map((className) => this._getThemeClass(className));\n\t\t\t}\n\t\t\treturn this._getThemeClass(classes);\n\t\t}\n\n\t\t/**\n\t\t * Function fired when `theme` or `extraClasses` are changed.\n\t\t */\n\t\t@diffProperty('theme', shallow)\n\t\t@diffProperty('extraClasses', shallow)\n\t\t@diffProperty('classes', shallow)\n\t\tprotected onPropertiesChanged() {\n\t\t\tthis._recalculateClasses = true;\n\t\t}\n\n\t\tprivate _getThemeClass(className: SupportedClassName): SupportedClassName {\n\t\t\tif (className === undefined || className === null || className === false || className === true) {\n\t\t\t\treturn className;\n\t\t\t}\n\n\t\t\tconst extraClasses = this.properties.extraClasses || ({} as any);\n\t\t\tconst themeClassName = this._baseThemeClassesReverseLookup![className];\n\t\t\tlet resultClassNames: string[] = [];\n\t\t\tif (!themeClassName) {\n\t\t\t\tconsole.warn(`Class name: '${className}' not found in theme`);\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (this._classes) {\n\t\t\t\tconst classes = Object.keys(this._classes).reduce(\n\t\t\t\t\t(classes, key) => {\n\t\t\t\t\t\tconst classNames = Object.keys(this._classes[key]);\n\t\t\t\t\t\tfor (let i = 0; i < classNames.length; i++) {\n\t\t\t\t\t\t\tconst extraClass = this._classes[key][classNames[i]];\n\t\t\t\t\t\t\tif (classNames[i] === themeClassName && extraClass) {\n\t\t\t\t\t\t\t\textraClass.forEach((className) => {\n\t\t\t\t\t\t\t\t\tif (className && className !== true) {\n\t\t\t\t\t\t\t\t\t\tclasses.push(className);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn classes;\n\t\t\t\t\t},\n\t\t\t\t\t[] as string[]\n\t\t\t\t);\n\n\t\t\t\tresultClassNames.push(...classes);\n\t\t\t}\n\n\t\t\tif (extraClasses[themeClassName]) {\n\t\t\t\tresultClassNames.push(extraClasses[themeClassName]);\n\t\t\t}\n\n\t\t\tif (this._theme[themeClassName]) {\n\t\t\t\tresultClassNames.push(this._theme[themeClassName]);\n\t\t\t} else {\n\t\t\t\tresultClassNames.push(this._registeredBaseTheme![themeClassName]);\n\t\t\t}\n\t\t\treturn resultClassNames.join(' ');\n\t\t}\n\n\t\tprivate _recalculateThemeClasses() {\n\t\t\tconst { theme = {}, classes = {} } = this.properties;\n\t\t\tif (!this._registeredBaseTheme) {\n\t\t\t\tconst baseThemes = this.getDecorator('baseThemeClasses');\n\t\t\t\tif (baseThemes.length === 0) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t'A base theme has not been provided to this widget. Please use the @theme decorator to add a theme.'\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tthis._registeredBaseTheme = baseThemes.reduce((finalBaseTheme, baseTheme) => {\n\t\t\t\t\tconst { [THEME_KEY]: key, ...classes } = baseTheme;\n\t\t\t\t\tthis._registeredBaseThemeKeys.push(key);\n\t\t\t\t\treturn { ...finalBaseTheme, ...classes };\n\t\t\t\t}, {});\n\t\t\t\tthis._baseThemeClassesReverseLookup = createThemeClassesLookup(baseThemes);\n\t\t\t}\n\n\t\t\tthis._theme = this._registeredBaseThemeKeys.reduce((baseTheme, themeKey) => {\n\t\t\t\treturn { ...baseTheme, ...theme[themeKey] };\n\t\t\t}, {});\n\n\t\t\tthis._classes = Object.keys(classes).reduce((computed, key) => {\n\t\t\t\tif (this._registeredBaseThemeKeys.indexOf(key) > -1) {\n\t\t\t\t\tcomputed = { ...computed, [key]: classes[key] };\n\t\t\t\t}\n\t\t\t\treturn computed;\n\t\t\t}, {});\n\n\t\t\tthis._recalculateClasses = false;\n\t\t}\n\t}\n\n\treturn Themed;\n}\n\nexport default ThemedMixin;\n","import global from './global';\n\n/**\n * The smallest interval between two representable numbers.\n */\nexport const EPSILON = 1;\n\n/**\n * The maximum safe integer in JavaScript\n */\nexport const MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n\n/**\n * The minimum safe integer in JavaScript\n */\nexport const MIN_SAFE_INTEGER = -MAX_SAFE_INTEGER;\n\n/**\n * Determines whether the passed value is NaN without coersion.\n *\n * @param value The value to test\n * @return true if the value is NaN, false if it is not\n */\nexport function isNaN(value: any): boolean {\n\treturn typeof value === 'number' && global.isNaN(value);\n}\n\n/**\n * Determines whether the passed value is a finite number without coersion.\n *\n * @param value The value to test\n * @return true if the value is finite, false if it is not\n */\nexport function isFinite(value: any): value is number {\n\treturn typeof value === 'number' && global.isFinite(value);\n}\n\n/**\n * Determines whether the passed value is an integer.\n *\n * @param value The value to test\n * @return true if the value is an integer, false if it is not\n */\nexport function isInteger(value: any): value is number {\n\treturn isFinite(value) && Math.floor(value) === value;\n}\n\n/**\n * Determines whether the passed value is an integer that is 'safe,' meaning:\n *   1. it can be expressed as an IEEE-754 double precision number\n *   2. it has a one-to-one mapping to a mathematical integer, meaning its\n *      IEEE-754 representation cannot be the result of rounding any other\n *      integer to fit the IEEE-754 representation\n *\n * @param value The value to test\n * @return true if the value is an integer, false if it is not\n */\nexport function isSafeInteger(value: any): value is number {\n\treturn isInteger(value) && Math.abs(value) <= MAX_SAFE_INTEGER;\n}\n","import global from './global';\nimport { isArrayLike, isIterable, Iterable } from './iterator';\nimport { MAX_SAFE_INTEGER } from './number';\nimport has from '../has/has';\nimport { wrapNative } from './support/util';\n\nexport interface MapCallback<T, U> {\n\t/**\n\t * A callback function when mapping\n\t *\n\t * @param element The element that is currently being mapped\n\t * @param index The current index of the element\n\t */\n\t(element: T, index: number): U;\n}\n\nexport interface FindCallback<T> {\n\t/**\n\t * A callback function when using find\n\t *\n\t * @param element The element that is currenty being analysed\n\t * @param index The current index of the element that is being analysed\n\t * @param array The source array\n\t */\n\t(element: T, index: number, array: ArrayLike<T>): boolean;\n}\n\ninterface WritableArrayLike<T> {\n\treadonly length: number;\n\t[n: number]: T;\n}\n\n/* ES6 Array static methods */\n\nexport interface From {\n\t/**\n\t * The Array.from() method creates a new Array instance from an array-like or iterable object.\n\t *\n\t * @param source An array-like or iterable object to convert to an array\n\t * @param mapFunction A map function to call on each element in the array\n\t * @param thisArg The execution context for the map function\n\t * @return The new Array\n\t */\n\t<T, U>(source: ArrayLike<T> | Iterable<T>, mapFunction: MapCallback<T, U>, thisArg?: any): Array<U>;\n\n\t/**\n\t * The Array.from() method creates a new Array instance from an array-like or iterable object.\n\t *\n\t * @param source An array-like or iterable object to convert to an array\n\t * @return The new Array\n\t */\n\t<T>(source: ArrayLike<T> | Iterable<T>): Array<T>;\n}\n\nexport let from: From;\n\n/**\n * Creates a new array from the function parameters.\n *\n * @param arguments Any number of arguments for the array\n * @return An array from the given arguments\n */\nexport let of: <T>(...items: T[]) => Array<T>;\n\n/* ES6 Array instance methods */\n\n/**\n * Copies data internally within an array or array-like object.\n *\n * @param target The target array-like object\n * @param offset The index to start copying values to; if negative, it counts backwards from length\n * @param start The first (inclusive) index to copy; if negative, it counts backwards from length\n * @param end The last (exclusive) index to copy; if negative, it counts backwards from length\n * @return The target\n */\nexport let copyWithin: <T>(target: ArrayLike<T>, offset: number, start: number, end?: number) => ArrayLike<T>;\n\n/**\n * Fills elements of an array-like object with the specified value.\n *\n * @param target The target to fill\n * @param value The value to fill each element of the target with\n * @param start The first index to fill\n * @param end The (exclusive) index at which to stop filling\n * @return The filled target\n */\nexport let fill: <T>(target: ArrayLike<T>, value: T, start?: number, end?: number) => ArrayLike<T>;\n\n/**\n * Finds and returns the first instance matching the callback or undefined if one is not found.\n *\n * @param target An array-like object\n * @param callback A function returning if the current value matches a criteria\n * @param thisArg The execution context for the find function\n * @return The first element matching the callback, or undefined if one does not exist\n */\nexport let find: <T>(target: ArrayLike<T>, callback: FindCallback<T>, thisArg?: {}) => T | undefined;\n\n/**\n * Performs a linear search and returns the first index whose value satisfies the passed callback,\n * or -1 if no values satisfy it.\n *\n * @param target An array-like object\n * @param callback A function returning true if the current value satisfies its criteria\n * @param thisArg The execution context for the find function\n * @return The first index whose value satisfies the passed callback, or -1 if no values satisfy it\n */\nexport let findIndex: <T>(target: ArrayLike<T>, callback: FindCallback<T>, thisArg?: {}) => number;\n\n/* ES7 Array instance methods */\n\n/**\n * Determines whether an array includes a given value\n *\n * @param target the target array-like object\n * @param searchElement the item to search for\n * @param fromIndex the starting index to search from\n * @return `true` if the array includes the element, otherwise `false`\n */\nexport let includes: <T>(target: ArrayLike<T>, searchElement: T, fromIndex?: number) => boolean;\n\nif (has('es6-array') && has('es6-array-fill')) {\n\tfrom = global.Array.from;\n\tof = global.Array.of;\n\tcopyWithin = wrapNative(global.Array.prototype.copyWithin);\n\tfill = wrapNative(global.Array.prototype.fill);\n\tfind = wrapNative(global.Array.prototype.find);\n\tfindIndex = wrapNative(global.Array.prototype.findIndex);\n} else {\n\t// It is only older versions of Safari/iOS that have a bad fill implementation and so aren't in the wild\n\t// To make things easier, if there is a bad fill implementation, the whole set of functions will be filled\n\n\t/**\n\t * Ensures a non-negative, non-infinite, safe integer.\n\t *\n\t * @param length The number to validate\n\t * @return A proper length\n\t */\n\tconst toLength = function toLength(length: number): number {\n\t\tif (isNaN(length)) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tlength = Number(length);\n\t\tif (isFinite(length)) {\n\t\t\tlength = Math.floor(length);\n\t\t}\n\t\t// Ensure a non-negative, real, safe integer\n\t\treturn Math.min(Math.max(length, 0), MAX_SAFE_INTEGER);\n\t};\n\n\t/**\n\t * From ES6 7.1.4 ToInteger()\n\t *\n\t * @param value A value to convert\n\t * @return An integer\n\t */\n\tconst toInteger = function toInteger(value: any): number {\n\t\tvalue = Number(value);\n\t\tif (isNaN(value)) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (value === 0 || !isFinite(value)) {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn (value > 0 ? 1 : -1) * Math.floor(Math.abs(value));\n\t};\n\n\t/**\n\t * Normalizes an offset against a given length, wrapping it if negative.\n\t *\n\t * @param value The original offset\n\t * @param length The total length to normalize against\n\t * @return If negative, provide a distance from the end (length); otherwise provide a distance from 0\n\t */\n\tconst normalizeOffset = function normalizeOffset(value: number, length: number): number {\n\t\treturn value < 0 ? Math.max(length + value, 0) : Math.min(value, length);\n\t};\n\n\tfrom = function from(\n\t\tthis: ArrayConstructor,\n\t\tarrayLike: Iterable<any> | ArrayLike<any>,\n\t\tmapFunction?: MapCallback<any, any>,\n\t\tthisArg?: any\n\t): Array<any> {\n\t\tif (arrayLike == null) {\n\t\t\tthrow new TypeError('from: requires an array-like object');\n\t\t}\n\n\t\tif (mapFunction && thisArg) {\n\t\t\tmapFunction = mapFunction.bind(thisArg);\n\t\t}\n\n\t\t/* tslint:disable-next-line:variable-name */\n\t\tconst Constructor = this;\n\t\tconst length: number = toLength((arrayLike as any).length);\n\n\t\t// Support extension\n\t\tconst array: any[] =\n\t\t\ttypeof Constructor === 'function' ? <any[]>Object(new Constructor(length)) : new Array(length);\n\n\t\tif (!isArrayLike(arrayLike) && !isIterable(arrayLike)) {\n\t\t\treturn array;\n\t\t}\n\n\t\t// if this is an array and the normalized length is 0, just return an empty array. this prevents a problem\n\t\t// with the iteration on IE when using a NaN array length.\n\t\tif (isArrayLike(arrayLike)) {\n\t\t\tif (length === 0) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < arrayLike.length; i++) {\n\t\t\t\tarray[i] = mapFunction ? mapFunction(arrayLike[i], i) : arrayLike[i];\n\t\t\t}\n\t\t} else {\n\t\t\tlet i = 0;\n\t\t\tfor (const value of arrayLike) {\n\t\t\t\tarray[i] = mapFunction ? mapFunction(value, i) : value;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\n\t\tif ((arrayLike as any).length !== undefined) {\n\t\t\tarray.length = length;\n\t\t}\n\n\t\treturn array;\n\t};\n\n\tof = function of<T>(...items: T[]): Array<T> {\n\t\treturn Array.prototype.slice.call(items);\n\t};\n\n\tcopyWithin = function copyWithin<T>(\n\t\ttarget: ArrayLike<T>,\n\t\toffset: number,\n\t\tstart: number,\n\t\tend?: number\n\t): ArrayLike<T> {\n\t\tif (target == null) {\n\t\t\tthrow new TypeError('copyWithin: target must be an array-like object');\n\t\t}\n\n\t\tconst length = toLength(target.length);\n\t\toffset = normalizeOffset(toInteger(offset), length);\n\t\tstart = normalizeOffset(toInteger(start), length);\n\t\tend = normalizeOffset(end === undefined ? length : toInteger(end), length);\n\t\tlet count = Math.min(end - start, length - offset);\n\n\t\tlet direction = 1;\n\t\tif (offset > start && offset < start + count) {\n\t\t\tdirection = -1;\n\t\t\tstart += count - 1;\n\t\t\toffset += count - 1;\n\t\t}\n\n\t\twhile (count > 0) {\n\t\t\tif (start in target) {\n\t\t\t\t(target as WritableArrayLike<T>)[offset] = target[start];\n\t\t\t} else {\n\t\t\t\tdelete (target as WritableArrayLike<T>)[offset];\n\t\t\t}\n\n\t\t\toffset += direction;\n\t\t\tstart += direction;\n\t\t\tcount--;\n\t\t}\n\n\t\treturn target;\n\t};\n\n\tfill = function fill<T>(target: ArrayLike<T>, value: any, start?: number, end?: number): ArrayLike<T> {\n\t\tconst length = toLength(target.length);\n\t\tlet i = normalizeOffset(toInteger(start), length);\n\t\tend = normalizeOffset(end === undefined ? length : toInteger(end), length);\n\n\t\twhile (i < end) {\n\t\t\t(target as WritableArrayLike<T>)[i++] = value;\n\t\t}\n\n\t\treturn target;\n\t};\n\n\tfind = function find<T>(target: ArrayLike<T>, callback: FindCallback<T>, thisArg?: {}): T | undefined {\n\t\tconst index = findIndex<T>(target, callback, thisArg);\n\t\treturn index !== -1 ? target[index] : undefined;\n\t};\n\n\tfindIndex = function findIndex<T>(target: ArrayLike<T>, callback: FindCallback<T>, thisArg?: {}): number {\n\t\tconst length = toLength(target.length);\n\n\t\tif (!callback) {\n\t\t\tthrow new TypeError('find: second argument must be a function');\n\t\t}\n\n\t\tif (thisArg) {\n\t\t\tcallback = callback.bind(thisArg);\n\t\t}\n\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tif (callback(target[i], i, target)) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t};\n}\n\nif (has('es7-array')) {\n\tincludes = wrapNative(global.Array.prototype.includes);\n} else {\n\t/**\n\t * Ensures a non-negative, non-infinite, safe integer.\n\t *\n\t * @param length The number to validate\n\t * @return A proper length\n\t */\n\tconst toLength = function toLength(length: number): number {\n\t\tlength = Number(length);\n\t\tif (isNaN(length)) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (isFinite(length)) {\n\t\t\tlength = Math.floor(length);\n\t\t}\n\t\t// Ensure a non-negative, real, safe integer\n\t\treturn Math.min(Math.max(length, 0), MAX_SAFE_INTEGER);\n\t};\n\n\tincludes = function includes<T>(target: ArrayLike<T>, searchElement: T, fromIndex: number = 0): boolean {\n\t\tlet len = toLength(target.length);\n\n\t\tfor (let i = fromIndex; i < len; ++i) {\n\t\t\tconst currentElement = target[i];\n\t\t\tif (\n\t\t\t\tsearchElement === currentElement ||\n\t\t\t\t(searchElement !== searchElement && currentElement !== currentElement)\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t};\n}\n","import { WidgetBase } from './../WidgetBase';\nimport { handleDecorator } from './handleDecorator';\nimport { beforeProperties } from './beforeProperties';\n\nexport function alwaysRender() {\n\treturn handleDecorator((target, propertyKey) => {\n\t\tbeforeProperties(function(this: WidgetBase) {\n\t\t\tthis.invalidate();\n\t\t})(target);\n\t});\n}\n\nexport default alwaysRender;\n","import { WidgetBase, noBind } from './WidgetBase';\nimport { renderer } from './vdom';\nimport { from } from '../shim/array';\nimport { w, dom } from './d';\nimport global from '../shim/global';\nimport { registerThemeInjector } from './mixins/Themed';\nimport { alwaysRender } from './decorators/alwaysRender';\n\nexport enum CustomElementChildType {\n\tDOJO = 'DOJO',\n\tNODE = 'NODE',\n\tTEXT = 'TEXT'\n}\n\nexport function DomToWidgetWrapper(domNode: HTMLElement): any {\n\t@alwaysRender()\n\tclass DomToWidgetWrapper extends WidgetBase<any> {\n\t\tprotected render() {\n\t\t\tconst properties = Object.keys(this.properties).reduce(\n\t\t\t\t(props, key: string) => {\n\t\t\t\t\tconst value = this.properties[key];\n\t\t\t\t\tif (key.indexOf('on') === 0) {\n\t\t\t\t\t\tkey = `__${key}`;\n\t\t\t\t\t}\n\t\t\t\t\tprops[key] = value;\n\t\t\t\t\treturn props;\n\t\t\t\t},\n\t\t\t\t{} as any\n\t\t\t);\n\t\t\treturn dom({ node: domNode, props: properties, diffType: 'dom' });\n\t\t}\n\n\t\tstatic get domNode() {\n\t\t\treturn domNode;\n\t\t}\n\t}\n\n\treturn DomToWidgetWrapper;\n}\n\nexport function create(descriptor: any, WidgetConstructor: any): any {\n\tconst { attributes, childType, registryFactory } = descriptor;\n\tconst attributeMap: any = {};\n\n\tattributes.forEach((propertyName: string) => {\n\t\tconst attributeName = propertyName.toLowerCase();\n\t\tattributeMap[attributeName] = propertyName;\n\t});\n\n\treturn class extends HTMLElement {\n\t\tprivate _renderer: any;\n\t\tprivate _properties: any = {};\n\t\tprivate _children: any[] = [];\n\t\tprivate _eventProperties: any = {};\n\t\tprivate _initialised = false;\n\n\t\tpublic connectedCallback() {\n\t\t\tif (this._initialised) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst domProperties: any = {};\n\t\t\tconst { attributes, properties, events } = descriptor;\n\n\t\t\tthis._properties = { ...this._properties, ...this._attributesToProperties(attributes) };\n\n\t\t\t[...attributes, ...properties].forEach((propertyName: string) => {\n\t\t\t\tconst value = (this as any)[propertyName];\n\t\t\t\tconst filteredPropertyName = propertyName.replace(/^on/, '__');\n\t\t\t\tif (value !== undefined) {\n\t\t\t\t\tthis._properties[propertyName] = value;\n\t\t\t\t}\n\n\t\t\t\tif (filteredPropertyName !== propertyName) {\n\t\t\t\t\tdomProperties[filteredPropertyName] = {\n\t\t\t\t\t\tget: () => this._getProperty(propertyName),\n\t\t\t\t\t\tset: (value: any) => this._setProperty(propertyName, value)\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tdomProperties[propertyName] = {\n\t\t\t\t\tget: () => this._getProperty(propertyName),\n\t\t\t\t\tset: (value: any) => this._setProperty(propertyName, value)\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tevents.forEach((propertyName: string) => {\n\t\t\t\tconst eventName = propertyName.replace(/^on/, '').toLowerCase();\n\t\t\t\tconst filteredPropertyName = propertyName.replace(/^on/, '__on');\n\n\t\t\t\tdomProperties[filteredPropertyName] = {\n\t\t\t\t\tget: () => this._getEventProperty(propertyName),\n\t\t\t\t\tset: (value: any) => this._setEventProperty(propertyName, value)\n\t\t\t\t};\n\n\t\t\t\tthis._eventProperties[propertyName] = undefined;\n\t\t\t\tthis._properties[propertyName] = (...args: any[]) => {\n\t\t\t\t\tconst eventCallback = this._getEventProperty(propertyName);\n\t\t\t\t\tif (typeof eventCallback === 'function') {\n\t\t\t\t\t\teventCallback(...args);\n\t\t\t\t\t}\n\t\t\t\t\tthis.dispatchEvent(\n\t\t\t\t\t\tnew CustomEvent(eventName, {\n\t\t\t\t\t\t\tbubbles: false,\n\t\t\t\t\t\t\tdetail: args\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tObject.defineProperties(this, domProperties);\n\n\t\t\tconst children = childType === CustomElementChildType.TEXT ? this.childNodes : this.children;\n\n\t\t\tfrom(children).forEach((childNode: Node) => {\n\t\t\t\tif (childType === CustomElementChildType.DOJO) {\n\t\t\t\t\tchildNode.addEventListener('dojo-ce-render', () => this._render());\n\t\t\t\t\tchildNode.addEventListener('dojo-ce-connected', () => this._render());\n\t\t\t\t\tthis._children.push(DomToWidgetWrapper(childNode as HTMLElement));\n\t\t\t\t} else {\n\t\t\t\t\tthis._children.push(dom({ node: childNode as HTMLElement, diffType: 'dom' }));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.addEventListener('dojo-ce-connected', (e: any) => this._childConnected(e));\n\n\t\t\tconst widgetProperties = this._properties;\n\t\t\tconst renderChildren = () => this.__children__();\n\t\t\tconst Wrapper = class extends WidgetBase {\n\t\t\t\trender() {\n\t\t\t\t\treturn w(WidgetConstructor, widgetProperties, renderChildren());\n\t\t\t\t}\n\t\t\t};\n\t\t\tconst registry = registryFactory();\n\t\t\tconst themeContext = registerThemeInjector(this._getTheme(), registry);\n\t\t\tglobal.addEventListener('dojo-theme-set', () => themeContext.set(this._getTheme()));\n\t\t\tconst r = renderer(() => w(Wrapper, {}));\n\t\t\tthis._renderer = r;\n\t\t\tr.mount({ domNode: this, merge: false, registry });\n\t\t\tconst root = this.children[0];\n\t\t\tif (root) {\n\t\t\t\tconst { display = 'block' } = global.getComputedStyle(root);\n\t\t\t\tthis.style.display = display;\n\t\t\t}\n\n\t\t\tthis._initialised = true;\n\t\t\tthis.dispatchEvent(\n\t\t\t\tnew CustomEvent('dojo-ce-connected', {\n\t\t\t\t\tbubbles: true,\n\t\t\t\t\tdetail: this\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\n\t\tprivate _getTheme() {\n\t\t\tif (global && global.dojoce && global.dojoce.theme) {\n\t\t\t\treturn global.dojoce.themes[global.dojoce.theme];\n\t\t\t}\n\t\t}\n\n\t\tprivate _childConnected(e: any) {\n\t\t\tconst node = e.detail;\n\t\t\tif (node.parentNode === this) {\n\t\t\t\tconst exists = this._children.some((child) => child.domNode === node);\n\t\t\t\tif (!exists) {\n\t\t\t\t\tnode.addEventListener('dojo-ce-render', () => this._render());\n\t\t\t\t\tthis._children.push(DomToWidgetWrapper(node));\n\t\t\t\t\tthis._render();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprivate _render() {\n\t\t\tif (this._renderer) {\n\t\t\t\tthis._renderer.invalidate();\n\t\t\t\tthis.dispatchEvent(\n\t\t\t\t\tnew CustomEvent('dojo-ce-render', {\n\t\t\t\t\t\tbubbles: false,\n\t\t\t\t\t\tdetail: this\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tpublic __properties__() {\n\t\t\treturn { ...this._properties, ...this._eventProperties };\n\t\t}\n\n\t\tpublic __children__() {\n\t\t\tif (childType === CustomElementChildType.DOJO) {\n\t\t\t\treturn this._children.filter((Child) => Child.domNode.isWidget).map((Child: any) => {\n\t\t\t\t\tconst { domNode } = Child;\n\t\t\t\t\treturn w(Child, { ...domNode.__properties__() }, [...domNode.__children__()]);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn this._children;\n\t\t\t}\n\t\t}\n\n\t\tpublic attributeChangedCallback(name: string, oldValue: string | null, value: string | null) {\n\t\t\tconst propertyName = attributeMap[name];\n\t\t\tthis._setProperty(propertyName, value);\n\t\t}\n\n\t\tprivate _setEventProperty(propertyName: string, value: any) {\n\t\t\tthis._eventProperties[propertyName] = value;\n\t\t}\n\n\t\tprivate _getEventProperty(propertyName: string) {\n\t\t\treturn this._eventProperties[propertyName];\n\t\t}\n\n\t\tprivate _setProperty(propertyName: string, value: any) {\n\t\t\tif (typeof value === 'function') {\n\t\t\t\tvalue[noBind] = true;\n\t\t\t}\n\t\t\tthis._properties[propertyName] = value;\n\t\t\tthis._render();\n\t\t}\n\n\t\tprivate _getProperty(propertyName: string) {\n\t\t\treturn this._properties[propertyName];\n\t\t}\n\n\t\tprivate _attributesToProperties(attributes: string[]) {\n\t\t\treturn attributes.reduce((properties: any, propertyName: string) => {\n\t\t\t\tconst attributeName = propertyName.toLowerCase();\n\t\t\t\tconst value = this.getAttribute(attributeName);\n\t\t\t\tif (value !== null) {\n\t\t\t\t\tproperties[propertyName] = value;\n\t\t\t\t}\n\t\t\t\treturn properties;\n\t\t\t}, {});\n\t\t}\n\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(attributeMap);\n\t\t}\n\n\t\tpublic get isWidget() {\n\t\t\treturn true;\n\t\t}\n\t};\n}\n\nexport function register(WidgetConstructor: any): void {\n\tconst descriptor = WidgetConstructor.prototype && WidgetConstructor.prototype.__customElementDescriptor;\n\n\tif (!descriptor) {\n\t\tthrow new Error(\n\t\t\t'Cannot get descriptor for Custom Element, have you added the @customElement decorator to your Widget?'\n\t\t);\n\t}\n\n\tglobal.customElements.define(descriptor.tagName, create(descriptor, WidgetConstructor));\n}\n\nexport default register;\n","import { Constructor, WidgetProperties } from '../interfaces';\nimport { CustomElementChildType } from '../registerCustomElement';\nimport Registry from '../Registry';\n\nexport type CustomElementPropertyNames<P extends object> = ((keyof P) | (keyof WidgetProperties))[];\n\n/**\n * Defines the custom element configuration used by the customElement decorator\n */\nexport interface CustomElementConfig<P extends object = { [index: string]: any }> {\n\t/**\n\t * The tag of the custom element\n\t */\n\ttag: string;\n\n\t/**\n\t * List of widget properties to expose as properties on the custom element\n\t */\n\tproperties?: CustomElementPropertyNames<P>;\n\n\t/**\n\t * List of attributes on the custom element to map to widget properties\n\t */\n\tattributes?: CustomElementPropertyNames<P>;\n\n\t/**\n\t * List of events to expose\n\t */\n\tevents?: CustomElementPropertyNames<P>;\n\n\tchildType?: CustomElementChildType;\n\n\tregistryFactory?: () => Registry;\n}\n\n/**\n * This Decorator is provided properties that define the behavior of a custom element, and\n * registers that custom element.\n */\nexport function customElement<P extends object = { [index: string]: any }>({\n\ttag,\n\tproperties = [],\n\tattributes = [],\n\tevents = [],\n\tchildType = CustomElementChildType.DOJO,\n\tregistryFactory = () => new Registry()\n}: CustomElementConfig<P>) {\n\treturn function<T extends Constructor<any>>(target: T) {\n\t\ttarget.prototype.__customElementDescriptor = {\n\t\t\ttagName: tag,\n\t\t\tattributes,\n\t\t\tproperties,\n\t\t\tevents,\n\t\t\tchildType,\n\t\t\tregistryFactory\n\t\t};\n\t};\n}\n\nexport default customElement;\n","import { WidgetBase } from '@dojo/framework/widget-core/WidgetBase';\nimport { v } from '@dojo/framework/widget-core/d';\nimport { theme, ThemedMixin } from '@dojo/framework/widget-core/mixins/Themed';\nimport { customElement } from '@dojo/framework/widget-core/decorators/customElement';\nimport { WNode } from '@dojo/framework/widget-core/interfaces';\nimport { MenuItem } from './MenuItem';\n\nimport * as css from './styles/menu.m.css';\n\ninterface MenuProperties {\n\tonSelected: (data: any) => void;\n}\n\n@theme(css)\n@customElement<MenuProperties>({\n\ttag: 'demo-menu',\n\tevents: ['onSelected']\n})\nexport class Menu extends ThemedMixin(WidgetBase)<MenuProperties, WNode<MenuItem>> {\n\n\tprivate _selectedId: number;\n\n\tprivate _onSelected(id: number, data: any) {\n\t\tthis._selectedId = id;\n\t\tthis.properties.onSelected(data);\n\t\tthis.invalidate();\n\t}\n\n\trender() {\n\t\tconst items = this.children.map((child, index) => {\n\t\t\tif (child) {\n\t\t\t\tconst properties: Partial<any> = {\n\t\t\t\t\tonSelected: (data: any) => {\n\t\t\t\t\t\tthis._onSelected(index, data);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (this._selectedId !== undefined) {\n\t\t\t\t\tproperties.selected = index === this._selectedId;\n\t\t\t\t}\n\t\t\t\tchild.properties = { ...child.properties, ...properties };\n\t\t\t}\n\t\t\treturn child;\n\t\t});\n\n\t\treturn v('nav', { classes: this.theme(css.root) }, [\n\t\t\tv('ol', {\n\t\t\t\tclasses: this.theme(css.menuContainer)\n\t\t\t}, items)\n\t\t]);\n\t}\n}\n\nexport default Menu;\n","import { WidgetBase } from '@dojo/framework/widget-core/WidgetBase';\nimport { v } from '@dojo/framework/widget-core/d';\nimport { customElement } from '@dojo/framework/widget-core/decorators/customElement';\nimport { theme, ThemedMixin } from '@dojo/framework/widget-core/mixins/Themed';\n\nimport * as css from './styles/menuItem.m.css';\n\nexport interface MenuItemProperties {\n\tselected?: boolean;\n\tdata?: any;\n\ttitle?: string;\n\tonSelected?: (data: any) => void;\n}\n\n@customElement<MenuItemProperties>({\n\ttag: 'demo-menu-item',\n\tevents: ['onSelected'],\n\tattributes: [ 'title' ],\n\tproperties: ['data', 'selected']\n})\n@theme(css)\nexport class MenuItem extends ThemedMixin(WidgetBase)<MenuItemProperties> {\n\n\tprivate _onClick() {\n\t\tthis.properties.onSelected && this.properties.onSelected(this.properties.data);\n\t}\n\n\tprotected render() {\n\t\tconst { selected } = this.properties;\n\n\t\treturn v('li', { classes: this.theme(css.root) }, [\n\t\t\tv('span', {\n\t\t\t\tclasses: this.theme([ css.item, selected ? css.selected : null ]),\n\t\t\t\tonclick: this._onClick\n\t\t\t}, [ this.properties.title ])\n\t\t]);\n\t}\n}\n\nexport default MenuItem;\n","import { WidgetBase } from '@dojo/framework/widget-core/WidgetBase';\nimport { w } from '@dojo/framework/widget-core/d';\nimport renderer from '@dojo/framework/widget-core/vdom';\nimport { Menu } from './widgets/Menu';\nimport { MenuItem } from './widgets/MenuItem';\n\nclass Example extends WidgetBase {\n\n\tprivate _onSelected(data: any) {\n\t\tconsole.log(data);\n\t}\n\n\tprotected render() {\n\t\treturn w(Menu, { onSelected: this._onSelected }, [\n\t\t\tw(MenuItem, { key: 'a', title: 'Menu Item A' }),\n\t\t\tw(MenuItem, { key: 'b', title: 'Menu Item B', selected: true }),\n\t\t\tw(MenuItem, { key: 'c', title: 'Menu Item C' })\n\t\t]);\n\t}\n}\n\nconst element = document.getElementById('widget') as HTMLElement;\nconst r = renderer(() => w(Example, {}));\nr.mount({ domNode: element });\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n                t[p[i]] = s[p[i]];\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [0, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __exportStar = function (m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    };\r\n\r\n    __values = function (o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator];\r\n        return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n});\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"custom-element/menu\",\"root\":\"menu-m__root__34HPG\",\"menuContainer\":\"menu-m__menuContainer__1lZUl\",\"home\":\"menu-m__home__3ExrL\",\"logo\":\"menu-m__logo__2cdP4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"custom-element/menuItem\",\"root\":\"menuItem-m__root__3nC3w\",\"item\":\"menuItem-m__item__2otQ-\",\"selected\":\"menuItem-m__selected__3H86O\"};"],"sourceRoot":""}