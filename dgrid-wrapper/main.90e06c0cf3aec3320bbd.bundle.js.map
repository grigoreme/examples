{"version":3,"sources":["webpack://dgrid_wrapper_app/string.ts","webpack://dgrid_wrapper_app/WeakMap.ts","webpack://dgrid_wrapper_app/cssTransitions.ts","webpack://dgrid_wrapper_app/d.ts","webpack://dgrid_wrapper_app/Promise.ts","webpack://dgrid_wrapper_app/object.ts","webpack://dgrid_wrapper_app/Map.ts","webpack://dgrid_wrapper_app/Destroyable.ts","webpack://dgrid_wrapper_app/Evented.ts","webpack://dgrid_wrapper_app/Registry.ts","webpack://dgrid_wrapper_app/diff.ts","webpack://dgrid_wrapper_app/RegistryHandler.ts","webpack://dgrid_wrapper_app/NodeHandler.ts","webpack://dgrid_wrapper_app/WidgetBase.ts","webpack://dgrid_wrapper_app/vdom.ts","webpack://dgrid_wrapper_app/util.ts","webpack://dgrid_wrapper_app/handleDecorator.ts","webpack://dgrid_wrapper_app/diffProperty.ts","webpack://dgrid_wrapper_app/DgridWrapper.ts","webpack://dgrid_wrapper_app/./src/widgets/App.ts","webpack://dgrid_wrapper_app/./src/main.ts","webpack://dgrid_wrapper_app/./node_modules/tslib/tslib.js"],"names":["fromCodePoint","raw","codePointAt","endsWith","includes","normalize","repeat","startsWith","padEnd","padStart","global","String","Object","util","prototype","WeakMap","shim_WeakMap","browserSpecificTransitionEndEventName","browserSpecificAnimationEndEventName","initialize","element","style","Error","determineBrowserStyleNames","runAndCleanUp","startAnimation","finishAnimation","finished","transitionEnd","removeEventListener","addEventListener","cssTransitions","enter","node","properties","enterAnimation","activeClass","enterAnimationActive","classList","add","requestAnimationFrame","remove","exit","exitAnimation","removeNode","exitAnimationActive","WNODE","VNODE","DOMVNODE","isWNode","child","Boolean","type","isVNode","isDomVNode","isElementNode","value","tagName","w","widgetConstructorOrNode","children","assign","widgetConstructor","v","tag","propertiesOrChildren","deferredPropertiesCallback","Array","isArray","classes","styles","newProperties","tslib","_a","nodeClasses","nodeStyles","nodeProperties","originalProperties","ShimPromise","Promise","has","finally","onFinally","this","then","resolve","reason","shim_Promise","object_assign","getOwnPropertyDescriptor","getOwnPropertyNames","getOwnPropertySymbols","is","keys","getOwnPropertyDescriptors","entries","values","globalObject","Map","shim_Map","noop","destroyed","Destroyable_Destroyable","[object Object]","handles","handle","_handles","push","splice","indexOf","destroy","forEach","own","regexMap","Evented_Evented","listenersMap","event","methods","globString","targetString","regex","get","RegExp","replace","set","test","isGlobMatch","method","call","listener","map","_addListener","listeners","WIDGET_BASE_TYPE","isWidgetBaseConstructor","item","_type","Registry_Registry","widgetLabel","emit","action","label","undefined","_widgetRegistry","toString","widgetCtor","emitLoadedEvent","error","injectorFactory","_injectorRegistry","invalidator","injectorItem","injector","promise","hasOwnProperty","default","isWidgetConstructorDefaultExport","hasInjector","isObjectOrArray","reference","previousProperty","newProperty","changed","auto","result","ignore","validOldProperty","validNewProperty","previousKeys","newKeys","length","some","key","shallow","NodeEventType","widget_core_RegistryHandler","super","_registry","_registryWidgetLabelMap","_registryInjectorLabelMap","baseRegistry","delete","base","widget","define","defineInjector","globalPrecedence","_get","getFunctionName","labelMap","registries","i","registry","registeredLabels","on","widget_core_NodeHandler","_nodeMap","Widget","Projector","clear","lazyWidgetId","lazyWidgetIdMap","decoratorMap","builtDecoratorMap","widgetInstanceMap","boundAuto","bind","noBind","WidgetBase_WidgetBase","_initialProperties","_changedPropertyKeys","_nodeHandler","_children","_decoratorCache","_properties","_boundRenderFunc","render","_boundInvalidate","invalidate","dirty","onAttach","onDetach","nodeHandler","rendering","inputProperties","_runAfterConstructors","MetaType","_metaMap","cached","changedPropertyKeys","instanceData","_runBeforeProperties","registeredDiffPropertyNames","getDecorator","propertyNames","allProperties","checkedProperties","diffPropertyResults","runReactions","propertyName","_bindFunctionProperty","diffFunctions","reactionFunctions","executedReactions","reaction","propertyChanged","reactionRun","nodes","filteredNodes","convertedNodes","id","registryItem","_filterAndConvert","text","_runBeforeRenders","dNode","_runAfterRenders","decoratorKey","decoratorList","constructor","specificDecoratorList","decorators","allDecorators","instanceMap","unshift","getPrototypeOf","buildDecorators","decoratorCache","_buildDecoratorList","property","_bindFunctionPropertyMap","bindInfo","boundFunc","scope","beforeProperties","reduce","beforePropertiesFunction","beforeRenders","beforeRenderFunction","updatedRender","console","warn","afterRenders","afterRenderFunction","meta","afterRender","isDomMeta","afterConstructors","afterConstructor","pop","widget_core_WidgetBase","EMPTY_ARRAY","nodeOperations","NAMESPACE_SVG","NAMESPACE_W3","NAMESPACE_XLINK","isWNodeWrapper","isVNodeWrapper","buildPreviousProperties","domNode","current","next","diffType","attributes","events","propName","attrName","getAttribute","props","same","dnode1","dnode2","instance","findIndexOfChild","sameAs","start","createClassPropValue","filter","className","join","trim","updateAttribute","attrValue","namespace","setAttributeNS","removeAttribute","setAttribute","runEnterAnimation","transitions","runExitAnimation","removeDomNode","parentNode","removeChild","arrayFrom","arr","slice","vdom","renderer","_renderScheduled","parentInvalidate","_mountOptions","sync","merge","transition","document","body","_invalidationQueue","_processQueue","_applicationQueue","_eventMap","_instanceToWrapperMap","_parentWrapperMap","_wrapperSiblingMap","_insertBeforeMap","_afterRenderCallbacks","_deferredRenderCallbacks","_allMergedNodes","nodeOperation","propValue","previousValue","updateEvent","eventName","currentValue","previousEvent","callback","evt","target","removeOrphanedEvents","previousProperties","onlyEvents","isEvent","substr","eventCallback","renderedToWrapper","rendered","parent","currentParent","requiresInsertBefore","hasPreviousSiblings","depth","wrappedRendered","hasParentWNode","hasCurrentParentChildren","childrenWrappers","insertBefore","previousItem","renderedItem","wrapper","order","hasAnimations","nextParent","findParentWNodeWrapper","currentNode","parentWNodeWrapper","parentWrapper","findParentDomNode","parentDomNode","runDeferredProperties","processProperties","findInsertBefore","searchNode","nextSibling","setValue","domValue","onInputValue","onSelectValue","setProperties","currentProperties","nextWrapper","includesEventsAndAttributes","propNames","propCount","previousClassString","currentClassString","merged","domClasses","split","styleNames","styleCount","j","styleName","newStyleValue","lastIndexOf","previousAttributes","attrNames","attrCount","updateAttributes","_runInvalidationQueue","invalidationQueue","previouslyRendered","sort","a","b","sibling","_updateWidget","_runProcessQueue","_runDomInstructionQueue","_runCallbacks","_process","reverse","parentElement","inserted","addRoot","attached","callbacks","run","shift","requestIdleCallback","setTimeout","runAfterRenderCallbacks","runDeferredRenderCallbacks","mergeNodes","oldIndex","newIndex","currentLength","nextLength","instructions","currentWrapper","domElement","toUpperCase","mergeNodeIndex","_processMergeNodes","dom","_processOne","childNodes","createElementNS","createElement","createTextNode","_createDom","_schedule","__setProperties__","__setChildren__","__render__","_createWidget","updatedTextNode","ownerDocument","replaceChild","_updateDom","wrappers","_removeDom","_removeWidget","mount","mountOptions","wrapNodes","mergedNode","util_hasOwnProperty","shouldDeepCopyObject","copyArray","array","inherited","_mixin","deep","sources","kwArgs","copied","copiedClone","source","targetValue","deepMixin","handleDecorator","handler","propertyKey","descriptor","diffProperty","diffFunction","reactionFunction","addDecorator","SelectionMode","constructionKeys","SelectionType","duplicate","create","buildSelectEvent","selectionType","rows","row","cell","data","rowData","cells","cellData","field","column","buildCellFocus","parentType","DgridWrapper_DgridInnerWrapper","grid","_grid","setChangedGridProperites","initGrid","registerGridEvents","attrs","toLowerCase","d_dom","restoreGridState","startup","onGridState","currentPage","_currentPage","emitGridState","pagination","keyboard","selection","selector","tree","columnHider","columnReorder","columnResizer","compoundColumns","columnSet","features","mixins","overrides","Grid_","Pagination_","_updateNavigation","total","arguments","OnDemandGrid_","Tree_","Keyboard_","Selection_","CellSelection_","Selector_","ColumnHider_","ColumnReorder_","ColumnResizer_","CompoundColumns_","ColumnSet_","declare_","buildConstructor","filterProperties","gridState","gotoPage","columnsSpec","collection","treeEnabled","Memory_","Trackable_","external_dstore_Tree_","getRootCollection","root","buildCollection","columnSets","subRows","subRow","columns","columnSpec","changeProperties","onSelect","onDeselect","onColumnStateChange","hidden","buildColumnStateChange","onColumnReorder","buildColumnReorder","onColumnResize","width","columnId","buildColumnResize","onCellFocusIn","onCellFocusOut","onSort","onError","buildSort","buildError","DgridWrapper_DgridWrapper","_gridState","dgrid_DgridWrapper","prevColumnSpec","newColumnSpec","prevIsArray","prevColumnArray","newColumnArray","previousColumnDef","buildToggleLabel","widgets_App","_data","first","last","hasChildren","_columnSets","_compoundColumns","_paginationOn","_rowsPerPage","_previousNextArrows","_firstLastArrows","_pagingLinks","_columnToggle","_columnDefs","renderExpando","_keyboardOn","_pageSkip","_deselectOnRefresh","_allowSelectAll","_selectionMode","single","_allowTextSelection","_treeOn","_collapseOnRefresh","_enableTreeTransitions","_treeIndentWidth","_columnHiderOn","_columnReorderOn","_columnResizerOn","_compoundColumnsOn","_columnSetsOn","_selectionType","rowsPerPage","previousNextArrows","firstLastArrows","pagingLinks","pageSkip","tabIndex","deselectOnRefresh","allowSelectAll","selectionMode","allowTextSelection","selected","selections","log","deselected","collapseOnRefresh","enableTreeTransitions","treeIndentWidth","columnStateData","onclick","addData","swapColumnDef","togglePagination","renderPaginationButtons","toggleKeyboard","renderKeyboardButtons","toggleSelectionOnOff","renderSelectionButtons","toggleTree","renderTreeButtons","toggleColumnHider","toggleColumnReorder","toggleColumnResizer","toggleCompoundColumns","toggleColumnSets","updateRowsPerPage","nextRowsPerPage","togglePreviousNextArrows","toggleFirstLastArrows","updatePagingLinks","nextPagingLinks","App_duplicate","updatePageSkip","nextPageSkip","toggleSelectionType","toggleDeselectOnRefresh","toggleAllowSelectAll","toggleAllowTextSelection","setSelectionModeNone","setSelectionModeMultiple","setSelectionModeExtended","setSelectionModeSingle","none","multiple","extended","toggleCollapseOnRefresh","toggleEnableTreeTransitions","updateTreeIndentWidth","nextTreeIndentWidth","__WEBPACK_AMD_DEFINE_RESULT__","__extends","__assign","__rest","__decorate","__param","__metadata","__awaiter","__generator","__exportStar","__values","__read","__spread","__await","__asyncGenerator","__asyncDelegator","__asyncValues","__makeTemplateObject","factory","self","createExporter","exports","previous","defineProperty","__esModule","exporter","extendStatics","setPrototypeOf","__proto__","d","p","__","t","s","n","e","desc","c","r","Reflect","decorate","paramIndex","decorator","metadataKey","metadataValue","metadata","thisArg","_arguments","P","generator","reject","fulfilled","step","rejected","done","apply","f","y","g","_","sent","trys","ops","verb","throw","return","Symbol","iterator","op","TypeError","m","o","ar","concat","asyncIterator","q","resume","fulfill","settle","cooked","module"],"mappings":"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","file":"main.90e06c0cf3aec3320bbd.bundle.js","sourcesContent":["import global from './global';\nimport has from '../has/has';\nimport { wrapNative } from './support/util';\n\nexport interface StringNormalize {\n\t/**\n\t * Returns the String value result of normalizing the string into the normalization form\n\t * named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n\t * @param target The target string\n\t * @param form Applicable values: \"NFC\", \"NFD\", \"NFKC\", or \"NFKD\", If not specified default\n\t * is \"NFC\"\n\t */\n\t(target: string, form: 'NFC' | 'NFD' | 'NFKC' | 'NFKD'): string;\n\n\t/**\n\t * Returns the String value result of normalizing the string into the normalization form\n\t * named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n\t * @param target The target string\n\t * @param form Applicable values: \"NFC\", \"NFD\", \"NFKC\", or \"NFKD\", If not specified default\n\t * is \"NFC\"\n\t */\n\t(target: string, form?: string): string;\n}\n\n/**\n * The minimum location of high surrogates\n */\nexport const HIGH_SURROGATE_MIN = 0xd800;\n\n/**\n * The maximum location of high surrogates\n */\nexport const HIGH_SURROGATE_MAX = 0xdbff;\n\n/**\n * The minimum location of low surrogates\n */\nexport const LOW_SURROGATE_MIN = 0xdc00;\n\n/**\n * The maximum location of low surrogates\n */\nexport const LOW_SURROGATE_MAX = 0xdfff;\n\n/* ES6 static methods */\n\n/**\n * Return the String value whose elements are, in order, the elements in the List elements.\n * If length is 0, the empty string is returned.\n * @param codePoints The code points to generate the string\n */\nexport let fromCodePoint: (...codePoints: number[]) => string;\n\n/**\n * `raw` is intended for use as a tag function of a Tagged Template String. When called\n * as such the first argument will be a well formed template call site object and the rest\n * parameter will contain the substitution values.\n * @param template A well-formed template string call site representation.\n * @param substitutions A set of substitution values.\n */\nexport let raw: (template: TemplateStringsArray, ...substitutions: any[]) => string;\n\n/* ES6 instance methods */\n\n/**\n * Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\n * value of the UTF-16 encoded code point starting at the string element at position pos in\n * the String resulting from converting this object to a String.\n * If there is no element at that position, the result is undefined.\n * If a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.\n */\nexport let codePointAt: (target: string, pos?: number) => number | undefined;\n\n/**\n * Returns true if the sequence of elements of searchString converted to a String is the\n * same as the corresponding elements of this object (converted to a String) starting at\n * endPosition – length(this). Otherwise returns false.\n */\nexport let endsWith: (target: string, searchString: string, endPosition?: number) => boolean;\n\n/**\n * Returns true if searchString appears as a substring of the result of converting this\n * object to a String, at one or more positions that are\n * greater than or equal to position; otherwise, returns false.\n * @param target The target string\n * @param searchString search string\n * @param position If position is undefined, 0 is assumed, so as to search all of the String.\n */\nexport let includes: (target: string, searchString: string, position?: number) => boolean;\n\n/**\n * Returns the String value result of normalizing the string into the normalization form\n * named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n * @param target The target string\n * @param form Applicable values: \"NFC\", \"NFD\", \"NFKC\", or \"NFKD\", If not specified default\n * is \"NFC\"\n */\nexport let normalize: StringNormalize;\n\n/**\n * Returns a String value that is made from count copies appended together. If count is 0,\n * T is the empty String is returned.\n * @param count number of copies to append\n */\nexport let repeat: (target: string, count?: number) => string;\n\n/**\n * Returns true if the sequence of elements of searchString converted to a String is the\n * same as the corresponding elements of this object (converted to a String) starting at\n * position. Otherwise returns false.\n */\nexport let startsWith: (target: string, searchString: string, position?: number) => boolean;\n\n/* ES7 instance methods */\n\n/**\n * Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\n * The padding is applied from the end (right) of the current string.\n *\n * @param target The target string\n * @param maxLength The length of the resulting string once the current string has been padded.\n *        If this parameter is smaller than the current string's length, the current string will be returned as it is.\n *\n * @param fillString The string to pad the current string with.\n *        If this string is too long, it will be truncated and the left-most part will be applied.\n *        The default value for this parameter is \" \" (U+0020).\n */\nexport let padEnd: (target: string, maxLength: number, fillString?: string) => string;\n\n/**\n * Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\n * The padding is applied from the start (left) of the current string.\n *\n * @param target The target string\n * @param maxLength The length of the resulting string once the current string has been padded.\n *        If this parameter is smaller than the current string's length, the current string will be returned as it is.\n *\n * @param fillString The string to pad the current string with.\n *        If this string is too long, it will be truncated and the left-most part will be applied.\n *        The default value for this parameter is \" \" (U+0020).\n */\nexport let padStart: (target: string, maxLength: number, fillString?: string) => string;\n\nif (has('es6-string') && has('es6-string-raw')) {\n\tfromCodePoint = global.String.fromCodePoint;\n\traw = global.String.raw;\n\n\tcodePointAt = wrapNative(global.String.prototype.codePointAt);\n\tendsWith = wrapNative(global.String.prototype.endsWith);\n\tincludes = wrapNative(global.String.prototype.includes);\n\tnormalize = wrapNative(global.String.prototype.normalize);\n\trepeat = wrapNative(global.String.prototype.repeat);\n\tstartsWith = wrapNative(global.String.prototype.startsWith);\n} else {\n\t/**\n\t * Validates that text is defined, and normalizes position (based on the given default if the input is NaN).\n\t * Used by startsWith, includes, and endsWith.\n\t *\n\t * @return Normalized position.\n\t */\n\tconst normalizeSubstringArgs = function(\n\t\tname: string,\n\t\ttext: string,\n\t\tsearch: string,\n\t\tposition: number,\n\t\tisEnd: boolean = false\n\t): [string, string, number] {\n\t\tif (text == null) {\n\t\t\tthrow new TypeError('string.' + name + ' requires a valid string to search against.');\n\t\t}\n\n\t\tconst length = text.length;\n\t\tposition = position !== position ? (isEnd ? length : 0) : position;\n\t\treturn [text, String(search), Math.min(Math.max(position, 0), length)];\n\t};\n\n\tfromCodePoint = function fromCodePoint(...codePoints: number[]): string {\n\t\t// Adapted from https://github.com/mathiasbynens/String.fromCodePoint\n\t\tconst length = arguments.length;\n\t\tif (!length) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromCharCode = String.fromCharCode;\n\t\tconst MAX_SIZE = 0x4000;\n\t\tlet codeUnits: number[] = [];\n\t\tlet index = -1;\n\t\tlet result = '';\n\n\t\twhile (++index < length) {\n\t\t\tlet codePoint = Number(arguments[index]);\n\n\t\t\t// Code points must be finite integers within the valid range\n\t\t\tlet isValid =\n\t\t\t\tisFinite(codePoint) && Math.floor(codePoint) === codePoint && codePoint >= 0 && codePoint <= 0x10ffff;\n\t\t\tif (!isValid) {\n\t\t\t\tthrow RangeError('string.fromCodePoint: Invalid code point ' + codePoint);\n\t\t\t}\n\n\t\t\tif (codePoint <= 0xffff) {\n\t\t\t\t// BMP code point\n\t\t\t\tcodeUnits.push(codePoint);\n\t\t\t} else {\n\t\t\t\t// Astral code point; split in surrogate halves\n\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\tcodePoint -= 0x10000;\n\t\t\t\tlet highSurrogate = (codePoint >> 10) + HIGH_SURROGATE_MIN;\n\t\t\t\tlet lowSurrogate = (codePoint % 0x400) + LOW_SURROGATE_MIN;\n\t\t\t\tcodeUnits.push(highSurrogate, lowSurrogate);\n\t\t\t}\n\n\t\t\tif (index + 1 === length || codeUnits.length > MAX_SIZE) {\n\t\t\t\tresult += fromCharCode.apply(null, codeUnits);\n\t\t\t\tcodeUnits.length = 0;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t};\n\n\traw = function raw(callSite: TemplateStringsArray, ...substitutions: any[]): string {\n\t\tlet rawStrings = callSite.raw;\n\t\tlet result = '';\n\t\tlet numSubstitutions = substitutions.length;\n\n\t\tif (callSite == null || callSite.raw == null) {\n\t\t\tthrow new TypeError('string.raw requires a valid callSite object with a raw value');\n\t\t}\n\n\t\tfor (let i = 0, length = rawStrings.length; i < length; i++) {\n\t\t\tresult += rawStrings[i] + (i < numSubstitutions && i < length - 1 ? substitutions[i] : '');\n\t\t}\n\n\t\treturn result;\n\t};\n\n\tcodePointAt = function codePointAt(text: string, position: number = 0): number | undefined {\n\t\t// Adapted from https://github.com/mathiasbynens/String.prototype.codePointAt\n\t\tif (text == null) {\n\t\t\tthrow new TypeError('string.codePointAt requries a valid string.');\n\t\t}\n\t\tconst length = text.length;\n\n\t\tif (position !== position) {\n\t\t\tposition = 0;\n\t\t}\n\t\tif (position < 0 || position >= length) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Get the first code unit\n\t\tconst first = text.charCodeAt(position);\n\t\tif (first >= HIGH_SURROGATE_MIN && first <= HIGH_SURROGATE_MAX && length > position + 1) {\n\t\t\t// Start of a surrogate pair (high surrogate and there is a next code unit); check for low surrogate\n\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\tconst second = text.charCodeAt(position + 1);\n\t\t\tif (second >= LOW_SURROGATE_MIN && second <= LOW_SURROGATE_MAX) {\n\t\t\t\treturn (first - HIGH_SURROGATE_MIN) * 0x400 + second - LOW_SURROGATE_MIN + 0x10000;\n\t\t\t}\n\t\t}\n\t\treturn first;\n\t};\n\n\tendsWith = function endsWith(text: string, search: string, endPosition?: number): boolean {\n\t\tif (search === '') {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (typeof endPosition === 'undefined') {\n\t\t\tendPosition = text.length;\n\t\t} else if (endPosition === null || isNaN(endPosition)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t[text, search, endPosition] = normalizeSubstringArgs('endsWith', text, search, endPosition, true);\n\n\t\tconst start = endPosition - search.length;\n\t\tif (start < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn text.slice(start, endPosition) === search;\n\t};\n\n\tincludes = function includes(text: string, search: string, position: number = 0): boolean {\n\t\t[text, search, position] = normalizeSubstringArgs('includes', text, search, position);\n\t\treturn text.indexOf(search, position) !== -1;\n\t};\n\n\trepeat = function repeat(text: string, count: number = 0): string {\n\t\t// Adapted from https://github.com/mathiasbynens/String.prototype.repeat\n\t\tif (text == null) {\n\t\t\tthrow new TypeError('string.repeat requires a valid string.');\n\t\t}\n\t\tif (count !== count) {\n\t\t\tcount = 0;\n\t\t}\n\t\tif (count < 0 || count === Infinity) {\n\t\t\tthrow new RangeError('string.repeat requires a non-negative finite count.');\n\t\t}\n\n\t\tlet result = '';\n\t\twhile (count) {\n\t\t\tif (count % 2) {\n\t\t\t\tresult += text;\n\t\t\t}\n\t\t\tif (count > 1) {\n\t\t\t\ttext += text;\n\t\t\t}\n\t\t\tcount >>= 1;\n\t\t}\n\t\treturn result;\n\t};\n\n\tstartsWith = function startsWith(text: string, search: string, position: number = 0): boolean {\n\t\tsearch = String(search);\n\t\t[text, search, position] = normalizeSubstringArgs('startsWith', text, search, position);\n\n\t\tconst end = position + search.length;\n\t\tif (end > text.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn text.slice(position, end) === search;\n\t};\n}\n\nif (has('es2017-string')) {\n\tpadEnd = wrapNative(global.String.prototype.padEnd);\n\tpadStart = wrapNative(global.String.prototype.padStart);\n} else {\n\tpadEnd = function padEnd(text: string, maxLength: number, fillString: string = ' '): string {\n\t\tif (text === null || text === undefined) {\n\t\t\tthrow new TypeError('string.repeat requires a valid string.');\n\t\t}\n\n\t\tif (maxLength === Infinity) {\n\t\t\tthrow new RangeError('string.padEnd requires a non-negative finite count.');\n\t\t}\n\n\t\tif (maxLength === null || maxLength === undefined || maxLength < 0) {\n\t\t\tmaxLength = 0;\n\t\t}\n\n\t\tlet strText = String(text);\n\t\tconst padding = maxLength - strText.length;\n\n\t\tif (padding > 0) {\n\t\t\tstrText +=\n\t\t\t\trepeat(fillString, Math.floor(padding / fillString.length)) +\n\t\t\t\tfillString.slice(0, padding % fillString.length);\n\t\t}\n\n\t\treturn strText;\n\t};\n\n\tpadStart = function padStart(text: string, maxLength: number, fillString: string = ' '): string {\n\t\tif (text === null || text === undefined) {\n\t\t\tthrow new TypeError('string.repeat requires a valid string.');\n\t\t}\n\n\t\tif (maxLength === Infinity) {\n\t\t\tthrow new RangeError('string.padStart requires a non-negative finite count.');\n\t\t}\n\n\t\tif (maxLength === null || maxLength === undefined || maxLength < 0) {\n\t\t\tmaxLength = 0;\n\t\t}\n\n\t\tlet strText = String(text);\n\t\tconst padding = maxLength - strText.length;\n\n\t\tif (padding > 0) {\n\t\t\tstrText =\n\t\t\t\trepeat(fillString, Math.floor(padding / fillString.length)) +\n\t\t\t\tfillString.slice(0, padding % fillString.length) +\n\t\t\t\tstrText;\n\t\t}\n\n\t\treturn strText;\n\t};\n}\n","import global from './global';\nimport { isArrayLike, Iterable } from './iterator';\nimport has from '../has/has';\nimport './Symbol';\n\nexport interface WeakMap<K extends object, V> {\n\t/**\n\t * Remove a `key` from the map\n\t *\n\t * @param key The key to remove\n\t * @return `true` if the value was removed, otherwise `false`\n\t */\n\tdelete(key: K): boolean;\n\n\t/**\n\t * Retrieve the value, based on the supplied `key`\n\t *\n\t * @param key The key to retrieve the `value` for\n\t * @return the `value` based on the `key` if found, otherwise `false`\n\t */\n\tget(key: K): V | undefined;\n\n\t/**\n\t * Determines if a `key` is present in the map\n\t *\n\t * @param key The `key` to check\n\t * @return `true` if the key is part of the map, otherwise `false`.\n\t */\n\thas(key: K): boolean;\n\n\t/**\n\t * Set a `value` for a particular `key`.\n\t *\n\t * @param key The `key` to set the `value` for\n\t * @param value The `value` to set\n\t * @return the instances\n\t */\n\tset(key: K, value: V): this;\n\n\treadonly [Symbol.toStringTag]: 'WeakMap';\n}\n\nexport interface WeakMapConstructor {\n\t/**\n\t * Create a new instance of a `WeakMap`\n\t *\n\t * @constructor\n\t */\n\tnew (): WeakMap<object, any>;\n\n\t/**\n\t * Create a new instance of a `WeakMap`\n\t *\n\t * @constructor\n\t *\n\t * @param iterable An iterable that contains yields up key/value pair entries\n\t */\n\tnew <K extends object, V>(iterable?: [K, V][]): WeakMap<K, V>;\n\n\t/**\n\t * Create a new instance of a `WeakMap`\n\t *\n\t * @constructor\n\t *\n\t * @param iterable An iterable that contains yields up key/value pair entries\n\t */\n\tnew <K extends object, V>(iterable: Iterable<[K, V]>): WeakMap<K, V>;\n\n\treadonly prototype: WeakMap<object, any>;\n}\n\nexport let WeakMap: WeakMapConstructor = global.WeakMap;\n\ninterface Entry<K, V> {\n\tkey: K;\n\tvalue: V;\n}\n\nif (!has('es6-weakmap')) {\n\tconst DELETED: any = {};\n\n\tconst getUID = function getUID(): number {\n\t\treturn Math.floor(Math.random() * 100000000);\n\t};\n\n\tconst generateName = (function() {\n\t\tlet startId = Math.floor(Date.now() % 100000000);\n\n\t\treturn function generateName(): string {\n\t\t\treturn '__wm' + getUID() + (startId++ + '__');\n\t\t};\n\t})();\n\n\tWeakMap = class WeakMap<K, V> {\n\t\tprivate readonly _name: string;\n\t\tprivate readonly _frozenEntries: Entry<K, V>[];\n\n\t\tconstructor(iterable?: ArrayLike<[K, V]> | Iterable<[K, V]>) {\n\t\t\tthis._name = generateName();\n\n\t\t\tthis._frozenEntries = [];\n\n\t\t\tif (iterable) {\n\t\t\t\tif (isArrayLike(iterable)) {\n\t\t\t\t\tfor (let i = 0; i < iterable.length; i++) {\n\t\t\t\t\t\tconst item = iterable[i];\n\t\t\t\t\t\tthis.set(item[0], item[1]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (const [key, value] of iterable) {\n\t\t\t\t\t\tthis.set(key, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprivate _getFrozenEntryIndex(key: any): number {\n\t\t\tfor (let i = 0; i < this._frozenEntries.length; i++) {\n\t\t\t\tif (this._frozenEntries[i].key === key) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn -1;\n\t\t}\n\n\t\tdelete(key: any): boolean {\n\t\t\tif (key === undefined || key === null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst entry: Entry<K, V> = key[this._name];\n\t\t\tif (entry && entry.key === key && entry.value !== DELETED) {\n\t\t\t\tentry.value = DELETED;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst frozenIndex = this._getFrozenEntryIndex(key);\n\t\t\tif (frozenIndex >= 0) {\n\t\t\t\tthis._frozenEntries.splice(frozenIndex, 1);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tget(key: any): V | undefined {\n\t\t\tif (key === undefined || key === null) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst entry: Entry<K, V> = key[this._name];\n\t\t\tif (entry && entry.key === key && entry.value !== DELETED) {\n\t\t\t\treturn entry.value;\n\t\t\t}\n\n\t\t\tconst frozenIndex = this._getFrozenEntryIndex(key);\n\t\t\tif (frozenIndex >= 0) {\n\t\t\t\treturn this._frozenEntries[frozenIndex].value;\n\t\t\t}\n\t\t}\n\n\t\thas(key: any): boolean {\n\t\t\tif (key === undefined || key === null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst entry: Entry<K, V> = key[this._name];\n\t\t\tif (Boolean(entry && entry.key === key && entry.value !== DELETED)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst frozenIndex = this._getFrozenEntryIndex(key);\n\t\t\tif (frozenIndex >= 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tset(key: any, value?: any): this {\n\t\t\tif (!key || (typeof key !== 'object' && typeof key !== 'function')) {\n\t\t\t\tthrow new TypeError('Invalid value used as weak map key');\n\t\t\t}\n\t\t\tlet entry: Entry<K, V> = key[this._name];\n\t\t\tif (!entry || entry.key !== key) {\n\t\t\t\tentry = Object.create(null, {\n\t\t\t\t\tkey: { value: key }\n\t\t\t\t});\n\n\t\t\t\tif (Object.isFrozen(key)) {\n\t\t\t\t\tthis._frozenEntries.push(entry);\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty(key, this._name, {\n\t\t\t\t\t\tvalue: entry\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tentry.value = value;\n\t\t\treturn this;\n\t\t}\n\n\t\t[Symbol.toStringTag]: 'WeakMap' = 'WeakMap';\n\t};\n}\n\nexport default WeakMap;\n","import { VNodeProperties } from './../interfaces';\n\nlet browserSpecificTransitionEndEventName = '';\nlet browserSpecificAnimationEndEventName = '';\n\nfunction determineBrowserStyleNames(element: HTMLElement) {\n\tif ('WebkitTransition' in element.style) {\n\t\tbrowserSpecificTransitionEndEventName = 'webkitTransitionEnd';\n\t\tbrowserSpecificAnimationEndEventName = 'webkitAnimationEnd';\n\t} else if ('transition' in element.style || 'MozTransition' in element.style) {\n\t\tbrowserSpecificTransitionEndEventName = 'transitionend';\n\t\tbrowserSpecificAnimationEndEventName = 'animationend';\n\t} else {\n\t\tthrow new Error('Your browser is not supported');\n\t}\n}\n\nfunction initialize(element: HTMLElement) {\n\tif (browserSpecificAnimationEndEventName === '') {\n\t\tdetermineBrowserStyleNames(element);\n\t}\n}\n\nfunction runAndCleanUp(element: HTMLElement, startAnimation: () => void, finishAnimation: () => void) {\n\tinitialize(element);\n\n\tlet finished = false;\n\n\tlet transitionEnd = function() {\n\t\tif (!finished) {\n\t\t\tfinished = true;\n\t\t\telement.removeEventListener(browserSpecificTransitionEndEventName, transitionEnd);\n\t\t\telement.removeEventListener(browserSpecificAnimationEndEventName, transitionEnd);\n\n\t\t\tfinishAnimation();\n\t\t}\n\t};\n\n\tstartAnimation();\n\n\telement.addEventListener(browserSpecificAnimationEndEventName, transitionEnd);\n\telement.addEventListener(browserSpecificTransitionEndEventName, transitionEnd);\n}\n\nfunction exit(node: HTMLElement, properties: VNodeProperties, exitAnimation: string, removeNode: () => void) {\n\tconst activeClass = properties.exitAnimationActive || `${exitAnimation}-active`;\n\n\trunAndCleanUp(\n\t\tnode,\n\t\t() => {\n\t\t\tnode.classList.add(exitAnimation);\n\n\t\t\trequestAnimationFrame(function() {\n\t\t\t\tnode.classList.add(activeClass);\n\t\t\t});\n\t\t},\n\t\t() => {\n\t\t\tremoveNode();\n\t\t}\n\t);\n}\n\nfunction enter(node: HTMLElement, properties: VNodeProperties, enterAnimation: string) {\n\tconst activeClass = properties.enterAnimationActive || `${enterAnimation}-active`;\n\n\trunAndCleanUp(\n\t\tnode,\n\t\t() => {\n\t\t\tnode.classList.add(enterAnimation);\n\n\t\t\trequestAnimationFrame(function() {\n\t\t\t\tnode.classList.add(activeClass);\n\t\t\t});\n\t\t},\n\t\t() => {\n\t\t\tnode.classList.remove(enterAnimation);\n\t\t\tnode.classList.remove(activeClass);\n\t\t}\n\t);\n}\n\nexport default {\n\tenter,\n\texit\n};\n","import {\n\tConstructor,\n\tDefaultWidgetBaseInterface,\n\tDeferredVirtualProperties,\n\tDNode,\n\tVNode,\n\tRegistryLabel,\n\tVNodeProperties,\n\tWidgetBaseInterface,\n\tWNode,\n\tDomOptions,\n\tRenderResult,\n\tDomVNode,\n\tLazyWidget,\n\tLazyDefine\n} from './interfaces';\n\n/**\n * The identifier for a WNode type\n */\nexport const WNODE = '__WNODE_TYPE';\n\n/**\n * The identifier for a VNode type\n */\nexport const VNODE = '__VNODE_TYPE';\n\n/**\n * The identifier for a VNode type created using dom()\n */\nexport const DOMVNODE = '__DOMVNODE_TYPE';\n\n/**\n * Helper function that returns true if the `DNode` is a `WNode` using the `type` property\n */\nexport function isWNode<W extends WidgetBaseInterface = DefaultWidgetBaseInterface>(\n\tchild: DNode<W> | any\n): child is WNode<W> {\n\treturn Boolean(child && child !== true && typeof child !== 'string' && child.type === WNODE);\n}\n\n/**\n * Helper function that returns true if the `DNode` is a `VNode` using the `type` property\n */\nexport function isVNode(child: DNode): child is VNode {\n\treturn Boolean(\n\t\tchild && child !== true && typeof child !== 'string' && (child.type === VNODE || child.type === DOMVNODE)\n\t);\n}\n\n/**\n * Helper function that returns true if the `DNode` is a `VNode` created with `dom()` using the `type` property\n */\nexport function isDomVNode(child: DNode): child is DomVNode {\n\treturn Boolean(child && child !== true && typeof child !== 'string' && child.type === DOMVNODE);\n}\n\nexport function isElementNode(value: any): value is Element {\n\treturn !!value.tagName;\n}\n\n/**\n * Interface for the decorate modifier\n */\nexport interface Modifier<T extends DNode> {\n\t(dNode: T, breaker: () => void): void;\n}\n\n/**\n * The predicate function for decorate\n */\nexport interface Predicate<T extends DNode> {\n\t(dNode: DNode): dNode is T;\n}\n\n/**\n * Decorator options\n */\nexport interface DecorateOptions<T extends DNode> {\n\tmodifier: Modifier<T>;\n\tpredicate?: Predicate<T>;\n\tshallow?: boolean;\n}\n\n/**\n * Generic decorate function for DNodes. The nodes are modified in place based on the provided predicate\n * and modifier functions.\n *\n * The children of each node are flattened and added to the array for decoration.\n *\n * If no predicate is supplied then the modifier will be executed on all nodes. A `breaker` function is passed to the\n * modifier which will drain the nodes array and exit the decoration.\n *\n * When the `shallow` options is set to `true` the only the top node or nodes will be decorated (only supported using\n * `DecorateOptions`).\n */\nexport function decorate<T extends DNode>(dNodes: DNode, options: DecorateOptions<T>): DNode;\nexport function decorate<T extends DNode>(dNodes: DNode[], options: DecorateOptions<T>): DNode[];\nexport function decorate<T extends DNode>(dNodes: DNode | DNode[], options: DecorateOptions<T>): DNode | DNode[];\nexport function decorate<T extends DNode>(dNodes: DNode, modifier: Modifier<T>, predicate: Predicate<T>): DNode;\nexport function decorate<T extends DNode>(dNodes: DNode[], modifier: Modifier<T>, predicate: Predicate<T>): DNode[];\nexport function decorate<T extends DNode>(\n\tdNodes: RenderResult,\n\tmodifier: Modifier<T>,\n\tpredicate: Predicate<T>\n): RenderResult;\nexport function decorate(dNodes: DNode, modifier: Modifier<DNode>): DNode;\nexport function decorate(dNodes: DNode[], modifier: Modifier<DNode>): DNode[];\nexport function decorate(dNodes: RenderResult, modifier: Modifier<DNode>): RenderResult;\nexport function decorate(\n\tdNodes: DNode | DNode[],\n\toptionsOrModifier: Modifier<DNode> | DecorateOptions<DNode>,\n\tpredicate?: Predicate<DNode>\n): DNode | DNode[] {\n\tlet shallow = false;\n\tlet modifier;\n\tif (typeof optionsOrModifier === 'function') {\n\t\tmodifier = optionsOrModifier;\n\t} else {\n\t\tmodifier = optionsOrModifier.modifier;\n\t\tpredicate = optionsOrModifier.predicate;\n\t\tshallow = optionsOrModifier.shallow || false;\n\t}\n\n\tlet nodes = Array.isArray(dNodes) ? [...dNodes] : [dNodes];\n\tfunction breaker() {\n\t\tnodes = [];\n\t}\n\twhile (nodes.length) {\n\t\tconst node = nodes.shift();\n\t\tif (node && node !== true) {\n\t\t\tif (!shallow && (isWNode(node) || isVNode(node)) && node.children) {\n\t\t\t\tnodes = [...nodes, ...node.children];\n\t\t\t}\n\t\t\tif (!predicate || predicate(node)) {\n\t\t\t\tmodifier(node, breaker);\n\t\t\t}\n\t\t}\n\t}\n\treturn dNodes;\n}\n\n/**\n * Wrapper function for calls to create a widget.\n */\nexport function w<W extends WidgetBaseInterface>(\n\tnode: WNode<W>,\n\tproperties: Partial<W['properties']>,\n\tchildren?: W['children']\n): WNode<W>;\nexport function w<W extends WidgetBaseInterface>(\n\twidgetConstructor: Constructor<W> | RegistryLabel | LazyWidget<W> | LazyDefine<W>,\n\tproperties: W['properties'],\n\tchildren?: W['children']\n): WNode<W>;\nexport function w<W extends WidgetBaseInterface>(\n\twidgetConstructorOrNode: Constructor<W> | RegistryLabel | WNode<W> | LazyWidget<W> | LazyDefine<W>,\n\tproperties: W['properties'],\n\tchildren?: W['children']\n): WNode<W> {\n\tif (isWNode(widgetConstructorOrNode)) {\n\t\tproperties = { ...(widgetConstructorOrNode.properties as any), ...(properties as any) };\n\t\tchildren = children ? children : widgetConstructorOrNode.children;\n\t\twidgetConstructorOrNode = widgetConstructorOrNode.widgetConstructor;\n\t}\n\n\treturn {\n\t\tchildren: children || [],\n\t\twidgetConstructor: widgetConstructorOrNode,\n\t\tproperties,\n\t\ttype: WNODE\n\t};\n}\n\n/**\n * Wrapper function for calls to create VNodes.\n */\nexport function v(node: VNode, properties: VNodeProperties, children: undefined | DNode[]): VNode;\nexport function v(node: VNode, properties: VNodeProperties): VNode;\nexport function v(tag: string, children: undefined | DNode[]): VNode;\nexport function v(tag: string, properties: DeferredVirtualProperties | VNodeProperties, children?: DNode[]): VNode;\nexport function v(tag: string): VNode;\nexport function v(\n\ttag: string | VNode,\n\tpropertiesOrChildren: VNodeProperties | DeferredVirtualProperties | DNode[] = {},\n\tchildren: undefined | DNode[] = undefined\n): VNode {\n\tlet properties: VNodeProperties | DeferredVirtualProperties = propertiesOrChildren;\n\tlet deferredPropertiesCallback;\n\n\tif (Array.isArray(propertiesOrChildren)) {\n\t\tchildren = propertiesOrChildren;\n\t\tproperties = {};\n\t}\n\n\tif (typeof properties === 'function') {\n\t\tdeferredPropertiesCallback = properties;\n\t\tproperties = {};\n\t}\n\n\tif (isVNode(tag)) {\n\t\tlet { classes = [], styles = {}, ...newProperties } = properties;\n\t\tlet { classes: nodeClasses = [], styles: nodeStyles = {}, ...nodeProperties } = tag.properties;\n\t\tnodeClasses = Array.isArray(nodeClasses) ? nodeClasses : [nodeClasses];\n\t\tclasses = Array.isArray(classes) ? classes : [classes];\n\t\tstyles = { ...nodeStyles, ...styles };\n\t\tproperties = { ...nodeProperties, ...newProperties, classes: [...nodeClasses, ...classes], styles };\n\t\tchildren = children ? children : tag.children;\n\t\ttag = tag.tag;\n\t}\n\n\treturn {\n\t\ttag,\n\t\tdeferredPropertiesCallback,\n\t\toriginalProperties: {},\n\t\tchildren,\n\t\tproperties,\n\t\ttype: VNODE\n\t};\n}\n\n/**\n * Create a VNode for an existing DOM Node.\n */\nexport function dom(\n\t{ node, attrs = {}, props = {}, on = {}, diffType = 'none', onAttach }: DomOptions,\n\tchildren?: DNode[]\n): DomVNode {\n\treturn {\n\t\ttag: isElementNode(node) ? node.tagName.toLowerCase() : '',\n\t\tproperties: props,\n\t\tattributes: attrs,\n\t\tevents: on,\n\t\tchildren,\n\t\ttype: DOMVNODE,\n\t\tdomNode: node,\n\t\ttext: isElementNode(node) ? undefined : node.data,\n\t\tdiffType,\n\t\tonAttach\n\t};\n}\n","import { Thenable } from './interfaces';\nimport global from './global';\nimport { queueMicroTask } from './support/queue';\nimport { Iterable } from './iterator';\nimport './Symbol';\nimport has from '../has/has';\n\n/**\n * Executor is the interface for functions used to initialize a Promise.\n */\nexport interface Executor<T> {\n\t/**\n\t * The executor for the promise\n\t *\n\t * @param resolve The resolver callback of the promise\n\t * @param reject The rejector callback of the promise\n\t */\n\t(resolve: (value?: T | PromiseLike<T>) => void, reject: (reason?: any) => void): void;\n}\n\ndeclare global {\n\tinterface Promise<T> {\n\t\tfinally(onfinally?: (() => void) | undefined | null): Promise<T>;\n\t}\n}\n\nexport let ShimPromise: typeof Promise = global.Promise;\n\nexport const isThenable = function isThenable<T>(value: any): value is PromiseLike<T> {\n\treturn value && typeof value.then === 'function';\n};\n\nif (!has('es6-promise')) {\n\tconst enum State {\n\t\tFulfilled,\n\t\tPending,\n\t\tRejected\n\t}\n\n\tglobal.Promise = ShimPromise = class Promise<T> implements Thenable<T> {\n\t\tstatic all(iterable: Iterable<any | PromiseLike<any>> | (any | PromiseLike<any>)[]): Promise<any> {\n\t\t\treturn new this(function(resolve, reject) {\n\t\t\t\tconst values: any[] = [];\n\t\t\t\tlet complete = 0;\n\t\t\t\tlet total = 0;\n\t\t\t\tlet populating = true;\n\n\t\t\t\tfunction fulfill(index: number, value: any): void {\n\t\t\t\t\tvalues[index] = value;\n\t\t\t\t\t++complete;\n\t\t\t\t\tfinish();\n\t\t\t\t}\n\n\t\t\t\tfunction finish(): void {\n\t\t\t\t\tif (populating || complete < total) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tresolve(values);\n\t\t\t\t}\n\n\t\t\t\tfunction processItem(index: number, item: any): void {\n\t\t\t\t\t++total;\n\t\t\t\t\tif (isThenable(item)) {\n\t\t\t\t\t\t// If an item Promise rejects, this Promise is immediately rejected with the item\n\t\t\t\t\t\t// Promise's rejection error.\n\t\t\t\t\t\titem.then(fulfill.bind(null, index), reject);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tPromise.resolve(item).then(fulfill.bind(null, index));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet i = 0;\n\t\t\t\tfor (const value of iterable) {\n\t\t\t\t\tprocessItem(i, value);\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\tpopulating = false;\n\n\t\t\t\tfinish();\n\t\t\t});\n\t\t}\n\n\t\tstatic race<T>(iterable: Iterable<T | PromiseLike<T>> | (T | PromiseLike<T>)[]): Promise<T[]> {\n\t\t\treturn new this(function(resolve: (value?: any) => void, reject) {\n\t\t\t\tfor (const item of iterable) {\n\t\t\t\t\tif (item instanceof Promise) {\n\t\t\t\t\t\t// If a Promise item rejects, this Promise is immediately rejected with the item\n\t\t\t\t\t\t// Promise's rejection error.\n\t\t\t\t\t\titem.then(resolve, reject);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tPromise.resolve(item).then(resolve);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tstatic reject(reason?: any): Promise<never> {\n\t\t\treturn new this(function(resolve, reject) {\n\t\t\t\treject(reason);\n\t\t\t});\n\t\t}\n\n\t\tstatic resolve(): Promise<void>;\n\t\tstatic resolve<T>(value: T | PromiseLike<T>): Promise<T>;\n\t\tstatic resolve<T>(value?: any): Promise<T> {\n\t\t\treturn new this(function(resolve) {\n\t\t\t\tresolve(<T>value);\n\t\t\t});\n\t\t}\n\n\t\tstatic [Symbol.species]: PromiseConstructor = ShimPromise as PromiseConstructor;\n\n\t\t/**\n\t\t * Creates a new Promise.\n\t\t *\n\t\t * @constructor\n\t\t *\n\t\t * @param executor\n\t\t * The executor function is called immediately when the Promise is instantiated. It is responsible for\n\t\t * starting the asynchronous operation when it is invoked.\n\t\t *\n\t\t * The executor must call either the passed `resolve` function when the asynchronous operation has completed\n\t\t * successfully, or the `reject` function when the operation fails.\n\t\t */\n\t\tconstructor(executor: Executor<T>) {\n\t\t\t/**\n\t\t\t * If true, the resolution of this promise is chained (\"locked in\") to another promise.\n\t\t\t */\n\t\t\tlet isChained = false;\n\n\t\t\t/**\n\t\t\t * Whether or not this promise is in a resolved state.\n\t\t\t */\n\t\t\tconst isResolved = (): boolean => {\n\t\t\t\treturn this.state !== State.Pending || isChained;\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Callbacks that should be invoked once the asynchronous operation has completed.\n\t\t\t */\n\t\t\tlet callbacks: null | (Array<() => void>) = [];\n\n\t\t\t/**\n\t\t\t * Initially pushes callbacks onto a queue for execution once this promise settles. After the promise settles,\n\t\t\t * enqueues callbacks for execution on the next event loop turn.\n\t\t\t */\n\t\t\tlet whenFinished = function(callback: () => void): void {\n\t\t\t\tif (callbacks) {\n\t\t\t\t\tcallbacks.push(callback);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Settles this promise.\n\t\t\t *\n\t\t\t * @param newState The resolved state for this promise.\n\t\t\t * @param {T|any} value The resolved value for this promise.\n\t\t\t */\n\t\t\tconst settle = (newState: State, value: any): void => {\n\t\t\t\t// A promise can only be settled once.\n\t\t\t\tif (this.state !== State.Pending) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.state = newState;\n\t\t\t\tthis.resolvedValue = value;\n\t\t\t\twhenFinished = queueMicroTask;\n\n\t\t\t\t// Only enqueue a callback runner if there are callbacks so that initially fulfilled Promises don't have to\n\t\t\t\t// wait an extra turn.\n\t\t\t\tif (callbacks && callbacks.length > 0) {\n\t\t\t\t\tqueueMicroTask(function(): void {\n\t\t\t\t\t\tif (callbacks) {\n\t\t\t\t\t\t\tlet count = callbacks.length;\n\t\t\t\t\t\t\tfor (let i = 0; i < count; ++i) {\n\t\t\t\t\t\t\t\tcallbacks[i].call(null);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcallbacks = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Resolves this promise.\n\t\t\t *\n\t\t\t * @param newState The resolved state for this promise.\n\t\t\t * @param {T|any} value The resolved value for this promise.\n\t\t\t */\n\t\t\tconst resolve = (newState: State, value: any): void => {\n\t\t\t\tif (isResolved()) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (isThenable(value)) {\n\t\t\t\t\tvalue.then(settle.bind(null, State.Fulfilled), settle.bind(null, State.Rejected));\n\t\t\t\t\tisChained = true;\n\t\t\t\t} else {\n\t\t\t\t\tsettle(newState, value);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.then = <TResult1 = T, TResult2 = never>(\n\t\t\t\tonFulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,\n\t\t\t\tonRejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null\n\t\t\t): Promise<TResult1 | TResult2> => {\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\t// whenFinished initially queues up callbacks for execution after the promise has settled. Once the\n\t\t\t\t\t// promise has settled, whenFinished will schedule callbacks for execution on the next turn through the\n\t\t\t\t\t// event loop.\n\t\t\t\t\twhenFinished(() => {\n\t\t\t\t\t\tconst callback: ((value?: any) => any) | undefined | null =\n\t\t\t\t\t\t\tthis.state === State.Rejected ? onRejected : onFulfilled;\n\n\t\t\t\t\t\tif (typeof callback === 'function') {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tresolve(callback(this.resolvedValue));\n\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (this.state === State.Rejected) {\n\t\t\t\t\t\t\treject(this.resolvedValue);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresolve(this.resolvedValue);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\texecutor(resolve.bind(null, State.Fulfilled), resolve.bind(null, State.Rejected));\n\t\t\t} catch (error) {\n\t\t\t\tsettle(State.Rejected, error);\n\t\t\t}\n\t\t}\n\n\t\tcatch<TResult = never>(\n\t\t\tonRejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null\n\t\t): Promise<T | TResult> {\n\t\t\treturn this.then(undefined, onRejected);\n\t\t}\n\n\t\t/**\n\t\t * The current state of this promise.\n\t\t */\n\t\tprivate state = State.Pending;\n\n\t\t/**\n\t\t * The resolved value for this promise.\n\t\t *\n\t\t * @type {T|any}\n\t\t */\n\t\tprivate resolvedValue: any;\n\n\t\tthen: <TResult1 = T, TResult2 = never>(\n\t\t\tonfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,\n\t\t\tonrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null\n\t\t) => Promise<TResult1 | TResult2>;\n\n\t\t[Symbol.toStringTag]: 'Promise' = 'Promise';\n\t} as any;\n\t// this cast is needed in order to omit finally in the class declaration; this was done so the finally code\n\t// is not duplicated and always added in the conditional below\n}\n\nif (!has('es2018-promise-finally')) {\n\tglobal.Promise.prototype.finally = function<T>(\n\t\tthis: Promise<T>,\n\t\tonFinally: (() => any) | undefined | null\n\t): Promise<any> {\n\t\treturn this.then(\n\t\t\tonFinally && ((value: T) => Promise.resolve(onFinally()).then(() => value)),\n\t\t\tonFinally &&\n\t\t\t\t((reason: any) =>\n\t\t\t\t\tPromise.resolve(onFinally()).then(() => {\n\t\t\t\t\t\tthrow reason;\n\t\t\t\t\t}))\n\t\t);\n\t};\n}\n\nexport default ShimPromise;\n","import global from './global';\nimport has from '../has/has';\nimport { isSymbol } from './Symbol';\n\nexport interface ObjectAssign {\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param source The source object from which to copy properties.\n\t */\n\t<T, U>(target: T, source: U): T & U;\n\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param source1 The first source object from which to copy properties.\n\t * @param source2 The second source object from which to copy properties.\n\t */\n\t<T, U, V>(target: T, source1: U, source2: V): T & U & V;\n\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param source1 The first source object from which to copy properties.\n\t * @param source2 The second source object from which to copy properties.\n\t * @param source3 The third source object from which to copy properties.\n\t */\n\t<T, U, V, W>(target: T, source1: U, source2: V, source3: W): T & U & V & W;\n\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param sources One or more source objects from which to copy properties\n\t */\n\t(target: object, ...sources: any[]): any;\n}\n\nexport interface ObjectEnteries {\n\t/**\n\t * Returns an array of key/values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t<T extends { [key: string]: any }, K extends keyof T>(o: T): [keyof T, T[K]][];\n\n\t/**\n\t * Returns an array of key/values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t(o: object): [string, any][];\n}\n\nexport interface ObjectGetOwnPropertyDescriptors {\n\t<T>(o: T): { [K in keyof T]: PropertyDescriptor };\n\t(o: any): { [key: string]: PropertyDescriptor };\n}\n\nexport interface ObjectValues {\n\t/**\n\t * Returns an array of values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t<T>(o: { [s: string]: T }): T[];\n\n\t/**\n\t * Returns an array of values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t(o: object): any[];\n}\n\nexport let assign: ObjectAssign;\n\n/**\n * Gets the own property descriptor of the specified object.\n * An own property descriptor is one that is defined directly on the object and is not\n * inherited from the object's prototype.\n * @param o Object that contains the property.\n * @param p Name of the property.\n */\nexport let getOwnPropertyDescriptor: <T, K extends keyof T>(o: T, propertyKey: K) => PropertyDescriptor | undefined;\n\n/**\n * Returns the names of the own properties of an object. The own properties of an object are those that are defined directly\n * on that object, and are not inherited from the object's prototype. The properties of an object include both fields (objects) and functions.\n * @param o Object that contains the own properties.\n */\nexport let getOwnPropertyNames: (o: any) => string[];\n\n/**\n * Returns an array of all symbol properties found directly on object o.\n * @param o Object to retrieve the symbols from.\n */\nexport let getOwnPropertySymbols: (o: any) => symbol[];\n\n/**\n * Returns true if the values are the same value, false otherwise.\n * @param value1 The first value.\n * @param value2 The second value.\n */\nexport let is: (value1: any, value2: any) => boolean;\n\n/**\n * Returns the names of the enumerable properties and methods of an object.\n * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n */\nexport let keys: (o: object) => string[];\n\n/* ES7 Object static methods */\n\nexport let getOwnPropertyDescriptors: ObjectGetOwnPropertyDescriptors;\n\nexport let entries: ObjectEnteries;\n\nexport let values: ObjectValues;\n\nif (has('es6-object')) {\n\tconst globalObject = global.Object;\n\tassign = globalObject.assign;\n\tgetOwnPropertyDescriptor = globalObject.getOwnPropertyDescriptor;\n\tgetOwnPropertyNames = globalObject.getOwnPropertyNames;\n\tgetOwnPropertySymbols = globalObject.getOwnPropertySymbols;\n\tis = globalObject.is;\n\tkeys = globalObject.keys;\n} else {\n\tkeys = function symbolAwareKeys(o: object): string[] {\n\t\treturn Object.keys(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n\t};\n\n\tassign = function assign(target: any, ...sources: any[]) {\n\t\tif (target == null) {\n\t\t\t// TypeError if undefined or null\n\t\t\tthrow new TypeError('Cannot convert undefined or null to object');\n\t\t}\n\n\t\tconst to = Object(target);\n\t\tsources.forEach((nextSource) => {\n\t\t\tif (nextSource) {\n\t\t\t\t// Skip over if undefined or null\n\t\t\t\tkeys(nextSource).forEach((nextKey) => {\n\t\t\t\t\tto[nextKey] = nextSource[nextKey];\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn to;\n\t};\n\n\tgetOwnPropertyDescriptor = function<T, K extends keyof T>(o: T, prop: K): PropertyDescriptor | undefined {\n\t\tif (isSymbol(prop)) {\n\t\t\treturn Object.getOwnPropertyDescriptor(o, prop);\n\t\t} else {\n\t\t\treturn Object.getOwnPropertyDescriptor(o, prop);\n\t\t}\n\t};\n\n\tgetOwnPropertyNames = function getOwnPropertyNames(o: any): string[] {\n\t\treturn Object.getOwnPropertyNames(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n\t};\n\n\tgetOwnPropertySymbols = function getOwnPropertySymbols(o: any): symbol[] {\n\t\treturn Object.getOwnPropertyNames(o)\n\t\t\t.filter((key) => Boolean(key.match(/^@@.+/)))\n\t\t\t.map((key) => Symbol.for(key.substring(2)));\n\t};\n\n\tis = function is(value1: any, value2: any): boolean {\n\t\tif (value1 === value2) {\n\t\t\treturn value1 !== 0 || 1 / value1 === 1 / value2; // -0\n\t\t}\n\t\treturn value1 !== value1 && value2 !== value2; // NaN\n\t};\n}\n\nif (has('es2017-object')) {\n\tconst globalObject = global.Object;\n\tgetOwnPropertyDescriptors = globalObject.getOwnPropertyDescriptors;\n\tentries = globalObject.entries;\n\tvalues = globalObject.values;\n} else {\n\tgetOwnPropertyDescriptors = function getOwnPropertyDescriptors(o: any) {\n\t\treturn getOwnPropertyNames(o).reduce(\n\t\t\t(previous, key) => {\n\t\t\t\tprevious[key] = getOwnPropertyDescriptor(o, key)!;\n\t\t\t\treturn previous;\n\t\t\t},\n\t\t\t{} as { [key: string]: PropertyDescriptor }\n\t\t);\n\t};\n\n\tentries = function entries(o: any): [string, any][] {\n\t\treturn keys(o).map((key) => [key, o[key]] as [string, any]);\n\t};\n\n\tvalues = function values(o: any): any[] {\n\t\treturn keys(o).map((key) => o[key]);\n\t};\n}\n","import { isArrayLike, Iterable, IterableIterator, ShimIterator } from './iterator';\nimport global from './global';\nimport { is as objectIs } from './object';\nimport has from '../has/has';\nimport './Symbol';\n\nexport interface Map<K, V> {\n\t/**\n\t * Deletes all keys and their associated values.\n\t */\n\tclear(): void;\n\n\t/**\n\t * Deletes a given key and its associated value.\n\t *\n\t * @param key The key to delete\n\t * @return true if the key exists, false if it does not\n\t */\n\tdelete(key: K): boolean;\n\n\t/**\n\t * Returns an iterator that yields each key/value pair as an array.\n\t *\n\t * @return An iterator for each key/value pair in the instance.\n\t */\n\tentries(): IterableIterator<[K, V]>;\n\n\t/**\n\t * Executes a given function for each map entry. The function\n\t * is invoked with three arguments: the element value, the\n\t * element key, and the associated Map instance.\n\t *\n\t * @param callbackfn The function to execute for each map entry,\n\t * @param thisArg The value to use for `this` for each execution of the calback\n\t */\n\tforEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void;\n\n\t/**\n\t * Returns the value associated with a given key.\n\t *\n\t * @param key The key to look up\n\t * @return The value if one exists or undefined\n\t */\n\tget(key: K): V | undefined;\n\n\t/**\n\t * Returns an iterator that yields each key in the map.\n\t *\n\t * @return An iterator containing the instance's keys.\n\t */\n\tkeys(): IterableIterator<K>;\n\n\t/**\n\t * Checks for the presence of a given key.\n\t *\n\t * @param key The key to check for\n\t * @return true if the key exists, false if it does not\n\t */\n\thas(key: K): boolean;\n\n\t/**\n\t * Sets the value associated with a given key.\n\t *\n\t * @param key The key to define a value to\n\t * @param value The value to assign\n\t * @return The Map instance\n\t */\n\tset(key: K, value: V): this;\n\n\t/**\n\t * Returns the number of key / value pairs in the Map.\n\t */\n\treadonly size: number;\n\n\t/**\n\t * Returns an iterator that yields each value in the map.\n\t *\n\t * @return An iterator containing the instance's values.\n\t */\n\tvalues(): IterableIterator<V>;\n\n\t/** Returns an iterable of entries in the map. */\n\t[Symbol.iterator](): IterableIterator<[K, V]>;\n\n\treadonly [Symbol.toStringTag]: string;\n}\n\nexport interface MapConstructor {\n\t/**\n\t * Creates a new Map\n\t *\n\t * @constructor\n\t */\n\tnew (): Map<any, any>;\n\n\t/**\n\t * Creates a new Map\n\t *\n\t * @constructor\n\t *\n\t * @param iterator\n\t * Array or iterator containing two-item tuples used to initially populate the map.\n\t * The first item in each tuple corresponds to the key of the map entry.\n\t * The second item corresponds to the value of the map entry.\n\t */\n\tnew <K, V>(iterator?: [K, V][]): Map<K, V>;\n\n\t/**\n\t * Creates a new Map\n\t *\n\t * @constructor\n\t *\n\t * @param iterator\n\t * Array or iterator containing two-item tuples used to initially populate the map.\n\t * The first item in each tuple corresponds to the key of the map entry.\n\t * The second item corresponds to the value of the map entry.\n\t */\n\tnew <K, V>(iterator: Iterable<[K, V]>): Map<K, V>;\n\n\treadonly prototype: Map<any, any>;\n\n\treadonly [Symbol.species]: MapConstructor;\n}\n\nexport let Map: MapConstructor = global.Map;\n\nif (!has('es6-map')) {\n\tMap = class Map<K, V> {\n\t\tprotected readonly _keys: K[] = [];\n\t\tprotected readonly _values: V[] = [];\n\n\t\t/**\n\t\t * An alternative to Array.prototype.indexOf using Object.is\n\t\t * to check for equality. See http://mzl.la/1zuKO2V\n\t\t */\n\t\tprotected _indexOfKey(keys: K[], key: K): number {\n\t\t\tfor (let i = 0, length = keys.length; i < length; i++) {\n\t\t\t\tif (objectIs(keys[i], key)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t}\n\n\t\tstatic [Symbol.species] = Map;\n\n\t\tconstructor(iterable?: ArrayLike<[K, V]> | Iterable<[K, V]>) {\n\t\t\tif (iterable) {\n\t\t\t\tif (isArrayLike(iterable)) {\n\t\t\t\t\tfor (let i = 0; i < iterable.length; i++) {\n\t\t\t\t\t\tconst value = iterable[i];\n\t\t\t\t\t\tthis.set(value[0], value[1]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (const value of iterable) {\n\t\t\t\t\t\tthis.set(value[0], value[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tget size(): number {\n\t\t\treturn this._keys.length;\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis._keys.length = this._values.length = 0;\n\t\t}\n\n\t\tdelete(key: K): boolean {\n\t\t\tconst index = this._indexOfKey(this._keys, key);\n\t\t\tif (index < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis._keys.splice(index, 1);\n\t\t\tthis._values.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\n\t\tentries(): IterableIterator<[K, V]> {\n\t\t\tconst values = this._keys.map(\n\t\t\t\t(key: K, i: number): [K, V] => {\n\t\t\t\t\treturn [key, this._values[i]];\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn new ShimIterator(values);\n\t\t}\n\n\t\tforEach(callback: (value: V, key: K, mapInstance: Map<K, V>) => any, context?: {}) {\n\t\t\tconst keys = this._keys;\n\t\t\tconst values = this._values;\n\t\t\tfor (let i = 0, length = keys.length; i < length; i++) {\n\t\t\t\tcallback.call(context, values[i], keys[i], this);\n\t\t\t}\n\t\t}\n\n\t\tget(key: K): V | undefined {\n\t\t\tconst index = this._indexOfKey(this._keys, key);\n\t\t\treturn index < 0 ? undefined : this._values[index];\n\t\t}\n\n\t\thas(key: K): boolean {\n\t\t\treturn this._indexOfKey(this._keys, key) > -1;\n\t\t}\n\n\t\tkeys(): IterableIterator<K> {\n\t\t\treturn new ShimIterator(this._keys);\n\t\t}\n\n\t\tset(key: K, value: V): Map<K, V> {\n\t\t\tlet index = this._indexOfKey(this._keys, key);\n\t\t\tindex = index < 0 ? this._keys.length : index;\n\t\t\tthis._keys[index] = key;\n\t\t\tthis._values[index] = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tvalues(): IterableIterator<V> {\n\t\t\treturn new ShimIterator(this._values);\n\t\t}\n\n\t\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\t\treturn this.entries();\n\t\t}\n\n\t\t[Symbol.toStringTag]: 'Map' = 'Map';\n\t};\n}\n\nexport default Map;\n","import Promise from '../shim/Promise';\n\n/**\n * Used through the toolkit as a consistent API to manage how callers can \"cleanup\"\n * when doing a function.\n */\nexport interface Handle {\n\t/**\n\t * Perform the destruction/cleanup logic associated with this Handle\n\t */\n\tdestroy(): void;\n}\n\n/**\n * No op function used to replace a Destroyable instance's `destroy` method, once the instance has been destroyed\n */\nfunction noop(): Promise<boolean> {\n\treturn Promise.resolve(false);\n}\n\n/**\n * No op function used to replace a Destroyable instance's `own` method, once the instance has been destroyed\n */\nfunction destroyed(): never {\n\tthrow new Error('Call made to destroyed method');\n}\n\nexport class Destroyable {\n\t/**\n\t * The instance's handles\n\t */\n\tprivate handles: Handle[];\n\n\t/**\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tthis.handles = [];\n\t}\n\n\t/**\n\t * Register handles for the instance that will be destroyed when `this.destroy` is called\n\t *\n\t * @param {Handle} handle The handle to add for the instance\n\t * @returns {Handle} A wrapper Handle. When the wrapper Handle's `destroy` method is invoked, the original handle is\n\t *                   removed from the instance, and its `destroy` method is invoked.\n\t */\n\town(handle: Handle): Handle {\n\t\tconst { handles: _handles } = this;\n\t\t_handles.push(handle);\n\t\treturn {\n\t\t\tdestroy() {\n\t\t\t\t_handles.splice(_handles.indexOf(handle));\n\t\t\t\thandle.destroy();\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Destroys all handlers registered for the instance\n\t *\n\t * @returns {Promise<any} A Promise that resolves once all handles have been destroyed\n\t */\n\tdestroy(): Promise<any> {\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.handles.forEach((handle) => {\n\t\t\t\thandle && handle.destroy && handle.destroy();\n\t\t\t});\n\t\t\tthis.destroy = noop;\n\t\t\tthis.own = destroyed;\n\t\t\tresolve(true);\n\t\t});\n\t}\n}\n\nexport default Destroyable;\n","import Map from '../shim/Map';\nimport { Destroyable, Handle } from './Destroyable';\n\n/**\n * Map of computed regular expressions, keyed by string\n */\nconst regexMap = new Map<string, RegExp>();\n\nexport type EventType = string | symbol;\n\n/**\n * The base event object, which provides a `type` property\n */\nexport interface EventObject<T = EventType> {\n\t/**\n\t * The type of the event\n\t */\n\treadonly type: T;\n}\n\n/**\n * Determines if the event type glob has been matched\n *\n * @returns boolean that indicates if the glob is matched\n */\nexport function isGlobMatch(globString: string | symbol, targetString: string | symbol): boolean {\n\tif (typeof targetString === 'string' && typeof globString === 'string' && globString.indexOf('*') !== -1) {\n\t\tlet regex: RegExp;\n\t\tif (regexMap.has(globString)) {\n\t\t\tregex = regexMap.get(globString)!;\n\t\t} else {\n\t\t\tregex = new RegExp(`^${globString.replace(/\\*/g, '.*')}$`);\n\t\t\tregexMap.set(globString, regex);\n\t\t}\n\t\treturn regex.test(targetString);\n\t} else {\n\t\treturn globString === targetString;\n\t}\n}\n\nexport type EventedCallback<T = EventType, E extends EventObject<T> = EventObject<T>> = {\n\t/**\n\t * A callback that takes an `event` argument\n\t *\n\t * @param event The event object\n\t */\n\n\t(event: E): boolean | void;\n};\n\nexport interface CustomEventTypes<T extends EventObject<any> = EventObject<any>> {\n\t[index: string]: T;\n}\n\n/**\n * A type which is either a targeted event listener or an array of listeners\n * @template T The type of target for the events\n * @template E The event type for the events\n */\nexport type EventedCallbackOrArray<T = EventType, E extends EventObject<T> = EventObject<T>> =\n\t| EventedCallback<T, E>\n\t| EventedCallback<T, E>[];\n\n/**\n * Event Class\n */\nexport class Evented<\n\tM extends CustomEventTypes = {},\n\tT = EventType,\n\tO extends EventObject<T> = EventObject<T>\n> extends Destroyable {\n\t// The following member is purely so TypeScript remembers the type of `M` when extending so\n\t// that the utilities in `on.ts` will work https://github.com/Microsoft/TypeScript/issues/20348\n\t// tslint:disable-next-line\n\tprotected __typeMap__?: M;\n\t/**\n\t * map of listeners keyed by event type\n\t */\n\tprotected listenersMap: Map<T | keyof M, EventedCallback<T, O>[]> = new Map();\n\n\t/**\n\t * Emits the event object for the specified type\n\t *\n\t * @param event the event to emit\n\t */\n\temit<K extends keyof M>(event: M[K]): void;\n\temit(event: O): void;\n\temit(event: any): void {\n\t\tthis.listenersMap.forEach((methods, type) => {\n\t\t\tif (isGlobMatch(type as any, event.type)) {\n\t\t\t\t[...methods].forEach((method) => {\n\t\t\t\t\tmethod.call(this, event);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Catch all handler for various call signatures. The signatures are defined in\n\t * `BaseEventedEvents`.  You can add your own event type -> handler types by extending\n\t * `BaseEventedEvents`.  See example for details.\n\t *\n\t * @param args\n\t *\n\t * @example\n\t *\n\t * interface WidgetBaseEvents extends BaseEventedEvents {\n\t *     (type: 'properties:changed', handler: PropertiesChangedHandler): Handle;\n\t * }\n\t * class WidgetBase extends Evented {\n\t *    on: WidgetBaseEvents;\n\t * }\n\t *\n\t * @return {any}\n\t */\n\ton<K extends keyof M>(type: K, listener: EventedCallbackOrArray<K, M[K]>): Handle;\n\ton(type: T, listener: EventedCallbackOrArray<T, O>): Handle;\n\ton(type: any, listener: EventedCallbackOrArray<any, any>): Handle {\n\t\tif (Array.isArray(listener)) {\n\t\t\tconst handles = listener.map((listener) => this._addListener(type, listener));\n\t\t\treturn {\n\t\t\t\tdestroy() {\n\t\t\t\t\thandles.forEach((handle) => handle.destroy());\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\treturn this._addListener(type, listener);\n\t}\n\n\tprivate _addListener(type: T | keyof M, listener: EventedCallback<T, O>) {\n\t\tconst listeners = this.listenersMap.get(type) || [];\n\t\tlisteners.push(listener);\n\t\tthis.listenersMap.set(type, listeners);\n\t\treturn {\n\t\t\tdestroy: () => {\n\t\t\t\tconst listeners = this.listenersMap.get(type) || [];\n\t\t\t\tlisteners.splice(listeners.indexOf(listener), 1);\n\t\t\t}\n\t\t};\n\t}\n}\n\nexport default Evented;\n","import Promise from '../shim/Promise';\nimport Map from '../shim/Map';\nimport { Evented, EventObject } from '../core/Evented';\nimport {\n\tConstructor,\n\tInjectorFactory,\n\tInjectorItem,\n\tRegistryLabel,\n\tWidgetBaseConstructor,\n\tWidgetBaseInterface,\n\tESMDefaultWidgetBase,\n\tWidgetBaseConstructorFunction,\n\tESMDefaultWidgetBaseFunction\n} from './interfaces';\n\nexport type RegistryItem =\n\t| WidgetBaseConstructor\n\t| Promise<WidgetBaseConstructor>\n\t| WidgetBaseConstructorFunction\n\t| ESMDefaultWidgetBaseFunction;\n\n/**\n * Widget base type\n */\nexport const WIDGET_BASE_TYPE = '__widget_base_type';\n\nexport interface RegistryEventObject extends EventObject<RegistryLabel> {\n\taction: string;\n\titem: WidgetBaseConstructor | InjectorItem;\n}\n/**\n * Widget Registry Interface\n */\nexport interface RegistryInterface {\n\t/**\n\t * Define a WidgetRegistryItem against a label\n\t *\n\t * @param label The label of the widget to register\n\t * @param registryItem The registry item to define\n\t */\n\tdefine(label: RegistryLabel, registryItem: RegistryItem): void;\n\n\t/**\n\t * Return a RegistryItem for the given label, null if an entry doesn't exist\n\t *\n\t * @param widgetLabel The label of the widget to return\n\t * @returns The RegistryItem for the widgetLabel, `null` if no entry exists\n\t */\n\tget<T extends WidgetBaseInterface = WidgetBaseInterface>(label: RegistryLabel): Constructor<T> | null;\n\n\t/**\n\t * Returns a boolean if an entry for the label exists\n\t *\n\t * @param widgetLabel The label to search for\n\t * @returns boolean indicating if a widget registry item exists\n\t */\n\thas(label: RegistryLabel): boolean;\n\n\t/**\n\t * Define an Injector against a label\n\t *\n\t * @param label The label of the injector to register\n\t * @param registryItem The injector factory\n\t */\n\tdefineInjector(label: RegistryLabel, injectorFactory: InjectorFactory): void;\n\n\t/**\n\t * Return an Injector registry item for the given label, null if an entry doesn't exist\n\t *\n\t * @param label The label of the injector to return\n\t * @returns The RegistryItem for the widgetLabel, `null` if no entry exists\n\t */\n\tgetInjector<T>(label: RegistryLabel): InjectorItem<T> | null;\n\n\t/**\n\t * Returns a boolean if an injector for the label exists\n\t *\n\t * @param widgetLabel The label to search for\n\t * @returns boolean indicating if a injector registry item exists\n\t */\n\thasInjector(label: RegistryLabel): boolean;\n}\n\n/**\n * Checks is the item is a subclass of WidgetBase (or a WidgetBase)\n *\n * @param item the item to check\n * @returns true/false indicating if the item is a WidgetBaseConstructor\n */\nexport function isWidgetBaseConstructor<T extends WidgetBaseInterface>(item: any): item is Constructor<T> {\n\treturn Boolean(item && item._type === WIDGET_BASE_TYPE);\n}\n\nexport function isWidgetConstructorDefaultExport<T>(item: any): item is ESMDefaultWidgetBase<T> {\n\treturn Boolean(\n\t\titem &&\n\t\t\titem.hasOwnProperty('__esModule') &&\n\t\t\titem.hasOwnProperty('default') &&\n\t\t\tisWidgetBaseConstructor(item.default)\n\t);\n}\n\n/**\n * The Registry implementation\n */\nexport class Registry extends Evented<{}, RegistryLabel, RegistryEventObject> implements RegistryInterface {\n\t/**\n\t * internal map of labels and RegistryItem\n\t */\n\tprivate _widgetRegistry: Map<RegistryLabel, RegistryItem> | undefined;\n\n\tprivate _injectorRegistry: Map<RegistryLabel, InjectorItem> | undefined;\n\n\t/**\n\t * Emit loaded event for registry label\n\t */\n\tprivate emitLoadedEvent(widgetLabel: RegistryLabel, item: WidgetBaseConstructor | InjectorItem): void {\n\t\tthis.emit({\n\t\t\ttype: widgetLabel,\n\t\t\taction: 'loaded',\n\t\t\titem\n\t\t});\n\t}\n\n\tpublic define(label: RegistryLabel, item: RegistryItem): void {\n\t\tif (this._widgetRegistry === undefined) {\n\t\t\tthis._widgetRegistry = new Map();\n\t\t}\n\n\t\tif (this._widgetRegistry.has(label)) {\n\t\t\tthrow new Error(`widget has already been registered for '${label.toString()}'`);\n\t\t}\n\n\t\tthis._widgetRegistry.set(label, item);\n\n\t\tif (item instanceof Promise) {\n\t\t\titem.then(\n\t\t\t\t(widgetCtor) => {\n\t\t\t\t\tthis._widgetRegistry!.set(label, widgetCtor);\n\t\t\t\t\tthis.emitLoadedEvent(label, widgetCtor);\n\t\t\t\t\treturn widgetCtor;\n\t\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t);\n\t\t} else if (isWidgetBaseConstructor(item)) {\n\t\t\tthis.emitLoadedEvent(label, item);\n\t\t}\n\t}\n\n\tpublic defineInjector(label: RegistryLabel, injectorFactory: InjectorFactory): void {\n\t\tif (this._injectorRegistry === undefined) {\n\t\t\tthis._injectorRegistry = new Map();\n\t\t}\n\n\t\tif (this._injectorRegistry.has(label)) {\n\t\t\tthrow new Error(`injector has already been registered for '${label.toString()}'`);\n\t\t}\n\n\t\tconst invalidator = new Evented();\n\n\t\tconst injectorItem: InjectorItem = {\n\t\t\tinjector: injectorFactory(() => invalidator.emit({ type: 'invalidate' })),\n\t\t\tinvalidator\n\t\t};\n\n\t\tthis._injectorRegistry.set(label, injectorItem);\n\t\tthis.emitLoadedEvent(label, injectorItem);\n\t}\n\n\tpublic get<T extends WidgetBaseInterface = WidgetBaseInterface>(label: RegistryLabel): Constructor<T> | null {\n\t\tif (!this._widgetRegistry || !this.has(label)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst item = this._widgetRegistry.get(label);\n\n\t\tif (isWidgetBaseConstructor<T>(item)) {\n\t\t\treturn item;\n\t\t}\n\n\t\tif (item instanceof Promise) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst promise = (<WidgetBaseConstructorFunction>item)();\n\t\tthis._widgetRegistry.set(label, promise);\n\n\t\tpromise.then(\n\t\t\t(widgetCtor) => {\n\t\t\t\tif (isWidgetConstructorDefaultExport<T>(widgetCtor)) {\n\t\t\t\t\twidgetCtor = widgetCtor.default;\n\t\t\t\t}\n\n\t\t\t\tthis._widgetRegistry!.set(label, widgetCtor);\n\t\t\t\tthis.emitLoadedEvent(label, widgetCtor);\n\t\t\t\treturn widgetCtor;\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t);\n\n\t\treturn null;\n\t}\n\n\tpublic getInjector<T>(label: RegistryLabel): InjectorItem<T> | null {\n\t\tif (!this._injectorRegistry || !this.hasInjector(label)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this._injectorRegistry.get(label)!;\n\t}\n\n\tpublic has(label: RegistryLabel): boolean {\n\t\treturn Boolean(this._widgetRegistry && this._widgetRegistry.has(label));\n\t}\n\n\tpublic hasInjector(label: RegistryLabel): boolean {\n\t\treturn Boolean(this._injectorRegistry && this._injectorRegistry.has(label));\n\t}\n}\n\nexport default Registry;\n","import { Column, ColumnSpec } from 'dgrid/Grid';\nimport { PropertyChangeRecord } from '@dojo/framework/widget-core/interfaces';\nimport { auto } from '@dojo/framework/widget-core/diff';\n\nexport function columnsDiff(prevColumnSpec: ColumnSpec, newColumnSpec: ColumnSpec): PropertyChangeRecord {\n\tlet changed = true;\n\tconst prevIsArray = Array.isArray(prevColumnSpec);\n\tconst newIsArrary = Array.isArray(newColumnSpec);\n\n\tif (prevIsArray === newIsArrary) {\n\t\tif (prevIsArray) {\n\t\t\tconst prevColumnArray = prevColumnSpec as Column[];\n\t\t\tconst newColumnArray = newColumnSpec as Column[];\n\t\t\tif (prevColumnArray.length === newColumnArray.length) {\n\t\t\t\tchanged = prevColumnArray.some((previousColumnDef, i) => {\n\t\t\t\t\treturn auto(previousColumnDef, newColumnArray[i]).changed;\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tchanged = auto(prevColumnSpec, newColumnSpec).changed;\n\t\t}\n\t}\n\n\treturn {\n\t\tchanged,\n\t\tvalue: newColumnSpec\n\t};\n}\n","import { Map } from '../shim/Map';\nimport { Evented, EventObject } from '../core/Evented';\nimport { Constructor, InjectorFactory, InjectorItem, RegistryLabel, WidgetBaseInterface } from './interfaces';\nimport { Registry, RegistryEventObject, RegistryItem } from './Registry';\n\nexport type RegistryHandlerEventMap = {\n\tinvalidate: EventObject<'invalidate'>;\n};\n\nexport class RegistryHandler extends Evented<RegistryHandlerEventMap> {\n\tprivate _registry = new Registry();\n\tprivate _registryWidgetLabelMap: Map<Registry, RegistryLabel[]> = new Map();\n\tprivate _registryInjectorLabelMap: Map<Registry, RegistryLabel[]> = new Map();\n\tprotected baseRegistry?: Registry;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.own(this._registry);\n\t\tconst destroy = () => {\n\t\t\tif (this.baseRegistry) {\n\t\t\t\tthis._registryWidgetLabelMap.delete(this.baseRegistry);\n\t\t\t\tthis._registryInjectorLabelMap.delete(this.baseRegistry);\n\t\t\t\tthis.baseRegistry = undefined;\n\t\t\t}\n\t\t};\n\t\tthis.own({ destroy });\n\t}\n\n\tpublic set base(baseRegistry: Registry) {\n\t\tif (this.baseRegistry) {\n\t\t\tthis._registryWidgetLabelMap.delete(this.baseRegistry);\n\t\t\tthis._registryInjectorLabelMap.delete(this.baseRegistry);\n\t\t}\n\t\tthis.baseRegistry = baseRegistry;\n\t}\n\n\tpublic define(label: RegistryLabel, widget: RegistryItem): void {\n\t\tthis._registry.define(label, widget);\n\t}\n\n\tpublic defineInjector(label: RegistryLabel, injector: InjectorFactory): void {\n\t\tthis._registry.defineInjector(label, injector);\n\t}\n\n\tpublic has(label: RegistryLabel): boolean {\n\t\treturn this._registry.has(label) || Boolean(this.baseRegistry && this.baseRegistry.has(label));\n\t}\n\n\tpublic hasInjector(label: RegistryLabel): boolean {\n\t\treturn this._registry.hasInjector(label) || Boolean(this.baseRegistry && this.baseRegistry.hasInjector(label));\n\t}\n\n\tpublic get<T extends WidgetBaseInterface = WidgetBaseInterface>(\n\t\tlabel: RegistryLabel,\n\t\tglobalPrecedence: boolean = false\n\t): Constructor<T> | null {\n\t\treturn this._get(label, globalPrecedence, 'get', this._registryWidgetLabelMap);\n\t}\n\n\tpublic getInjector<T>(label: RegistryLabel, globalPrecedence: boolean = false): InjectorItem<T> | null {\n\t\treturn this._get(label, globalPrecedence, 'getInjector', this._registryInjectorLabelMap);\n\t}\n\n\tprivate _get(\n\t\tlabel: RegistryLabel,\n\t\tglobalPrecedence: boolean,\n\t\tgetFunctionName: 'getInjector' | 'get',\n\t\tlabelMap: Map<Registry, RegistryLabel[]>\n\t): any {\n\t\tconst registries = globalPrecedence ? [this.baseRegistry, this._registry] : [this._registry, this.baseRegistry];\n\t\tfor (let i = 0; i < registries.length; i++) {\n\t\t\tconst registry: any = registries[i];\n\t\t\tif (!registry) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst item = registry[getFunctionName](label);\n\t\t\tconst registeredLabels = labelMap.get(registry) || [];\n\t\t\tif (item) {\n\t\t\t\treturn item;\n\t\t\t} else if (registeredLabels.indexOf(label) === -1) {\n\t\t\t\tconst handle = registry.on(label, (event: RegistryEventObject) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tevent.action === 'loaded' &&\n\t\t\t\t\t\t(this as any)[getFunctionName](label, globalPrecedence) === event.item\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.emit({ type: 'invalidate' });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.own(handle);\n\t\t\t\tlabelMap.set(registry, [...registeredLabels, label]);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n}\n\nexport default RegistryHandler;\n","import { Evented, EventObject } from '../core/Evented';\nimport Map from '../shim/Map';\nimport { NodeHandlerInterface } from './interfaces';\n\n/**\n * Enum to identify the type of event.\n * Listening to 'Projector' will notify when projector is created or updated\n * Listening to 'Widget' will notify when widget root is created or updated\n */\nexport enum NodeEventType {\n\tProjector = 'Projector',\n\tWidget = 'Widget'\n}\n\nexport type NodeHandlerEventMap = {\n\tProjector: EventObject<NodeEventType.Projector>;\n\tWidget: EventObject<NodeEventType.Widget>;\n};\n\nexport class NodeHandler extends Evented<NodeHandlerEventMap> implements NodeHandlerInterface {\n\tprivate _nodeMap = new Map<string, Element>();\n\n\tpublic get(key: string): Element | undefined {\n\t\treturn this._nodeMap.get(key);\n\t}\n\n\tpublic has(key: string): boolean {\n\t\treturn this._nodeMap.has(key);\n\t}\n\n\tpublic add(element: Element, key: string): void {\n\t\tthis._nodeMap.set(key, element);\n\t\tthis.emit({ type: key });\n\t}\n\n\tpublic addRoot(): void {\n\t\tthis.emit({ type: NodeEventType.Widget });\n\t}\n\n\tpublic addProjector(): void {\n\t\tthis.emit({ type: NodeEventType.Projector });\n\t}\n\n\tpublic clear(): void {\n\t\tthis._nodeMap.clear();\n\t}\n}\n\nexport default NodeHandler;\n","import Map from '../shim/Map';\nimport WeakMap from '../shim/WeakMap';\nimport { v, VNODE, isVNode, isWNode } from './d';\nimport { auto } from './diff';\nimport {\n\tAfterRender,\n\tBeforeProperties,\n\tBeforeRender,\n\tDiffPropertyReaction,\n\tDNode,\n\tDefaultWidgetBaseInterface,\n\tLazyWidget,\n\tRender,\n\tWidgetMetaConstructor,\n\tWidgetBaseInterface,\n\tWidgetProperties,\n\tWNode,\n\tVNode,\n\tLazyDefine,\n\tMetaBase\n} from './interfaces';\nimport RegistryHandler from './RegistryHandler';\nimport NodeHandler from './NodeHandler';\nimport { isWidgetBaseConstructor, WIDGET_BASE_TYPE } from './Registry';\nimport { Handle } from '../core/Destroyable';\nimport { Base } from './meta/Base';\n\ninterface ReactionFunctionConfig {\n\tpropertyName: string;\n\treaction: DiffPropertyReaction;\n}\n\nexport interface WidgetData {\n\tonDetach: () => void;\n\tonAttach: () => void;\n\tdirty: boolean;\n\tnodeHandler: NodeHandler;\n\tinvalidate?: Function;\n\trendering: boolean;\n\tinputProperties: any;\n}\n\nexport type BoundFunctionData = { boundFunc: (...args: any[]) => any; scope: any };\n\nlet lazyWidgetId = 0;\nconst lazyWidgetIdMap = new WeakMap<LazyWidget, string>();\nconst decoratorMap = new WeakMap<Function, Map<string, any[]>>();\nconst builtDecoratorMap = new WeakMap<Function, Map<string, any[]>>();\nexport const widgetInstanceMap = new WeakMap<\n\tWidgetBase<WidgetProperties, DNode<DefaultWidgetBaseInterface>>,\n\tWidgetData\n>();\nconst boundAuto = auto.bind(null);\n\nexport const noBind = '__dojo_no_bind';\n\nfunction toTextVNode(data: any): VNode {\n\treturn {\n\t\ttag: '',\n\t\tproperties: {},\n\t\tchildren: undefined,\n\t\ttext: `${data}`,\n\t\ttype: VNODE\n\t};\n}\n\nfunction isLazyDefine(item: any): item is LazyDefine {\n\treturn Boolean(item && item.label);\n}\n\nfunction isDomMeta(meta: any): meta is Base {\n\treturn Boolean(meta.afterRender);\n}\n\n/**\n * Main widget base for all widgets to extend\n */\nexport class WidgetBase<P = WidgetProperties, C extends DNode = DNode> implements WidgetBaseInterface<P, C> {\n\t/**\n\t * static identifier\n\t */\n\tstatic _type = WIDGET_BASE_TYPE;\n\n\t/**\n\t * children array\n\t */\n\tprivate _children: (C | null)[];\n\n\t/**\n\t * Indicates if it is the initial set properties cycle\n\t */\n\tprivate _initialProperties = true;\n\n\t/**\n\t * internal widget properties\n\t */\n\tprivate _properties: P & WidgetProperties & { [index: string]: any };\n\n\t/**\n\t * Array of property keys considered changed from the previous set properties\n\t */\n\tprivate _changedPropertyKeys: string[] = [];\n\n\t/**\n\t * map of decorators that are applied to this widget\n\t */\n\tprivate _decoratorCache: Map<string, any[]>;\n\n\tprivate _registry: RegistryHandler | undefined;\n\n\t/**\n\t * Map of functions properties for the bound function\n\t */\n\tprivate _bindFunctionPropertyMap: WeakMap<(...args: any[]) => any, BoundFunctionData> | undefined;\n\n\tprivate _metaMap: Map<WidgetMetaConstructor<any>, MetaBase> | undefined;\n\n\tprivate _boundRenderFunc: Render;\n\n\tprivate _boundInvalidate: () => void;\n\n\tprivate _nodeHandler: NodeHandler = new NodeHandler();\n\n\tprivate _handles: Handle[] = [];\n\n\t/**\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tthis._children = [];\n\t\tthis._decoratorCache = new Map<string, any[]>();\n\t\tthis._properties = {} as P;\n\t\tthis._boundRenderFunc = this.render.bind(this);\n\t\tthis._boundInvalidate = this.invalidate.bind(this);\n\n\t\twidgetInstanceMap.set(this, {\n\t\t\tdirty: true,\n\t\t\tonAttach: (): void => {\n\t\t\t\tthis.onAttach();\n\t\t\t},\n\t\t\tonDetach: (): void => {\n\t\t\t\tthis.onDetach();\n\t\t\t\tthis.destroy();\n\t\t\t},\n\t\t\tnodeHandler: this._nodeHandler,\n\t\t\trendering: false,\n\t\t\tinputProperties: {}\n\t\t});\n\n\t\tthis.own({\n\t\t\tdestroy: () => {\n\t\t\t\twidgetInstanceMap.delete(this);\n\t\t\t\tthis._nodeHandler.clear();\n\t\t\t\tthis._nodeHandler.destroy();\n\t\t\t}\n\t\t});\n\n\t\tthis._runAfterConstructors();\n\t}\n\n\tprotected meta<T extends MetaBase>(MetaType: WidgetMetaConstructor<T>): T {\n\t\tif (this._metaMap === undefined) {\n\t\t\tthis._metaMap = new Map<WidgetMetaConstructor<any>, MetaBase>();\n\t\t}\n\t\tlet cached = this._metaMap.get(MetaType);\n\t\tif (!cached) {\n\t\t\tcached = new MetaType({\n\t\t\t\tinvalidate: this._boundInvalidate,\n\t\t\t\tnodeHandler: this._nodeHandler,\n\t\t\t\tbind: this\n\t\t\t});\n\t\t\tthis.own(cached);\n\t\t\tthis._metaMap.set(MetaType, cached);\n\t\t}\n\n\t\treturn cached as T;\n\t}\n\n\tprotected onAttach(): void {\n\t\t// Do nothing by default.\n\t}\n\n\tprotected onDetach(): void {\n\t\t// Do nothing by default.\n\t}\n\n\tpublic get properties(): Readonly<P> & Readonly<WidgetProperties> {\n\t\treturn this._properties;\n\t}\n\n\tpublic get changedPropertyKeys(): string[] {\n\t\treturn [...this._changedPropertyKeys];\n\t}\n\n\tpublic __setProperties__(originalProperties: this['properties'], bind?: WidgetBaseInterface): void {\n\t\tconst instanceData = widgetInstanceMap.get(this);\n\t\tif (instanceData) {\n\t\t\tinstanceData.inputProperties = originalProperties;\n\t\t}\n\t\tconst properties = this._runBeforeProperties(originalProperties);\n\t\tconst registeredDiffPropertyNames = this.getDecorator('registeredDiffProperty');\n\t\tconst changedPropertyKeys: string[] = [];\n\t\tconst propertyNames = Object.keys(properties);\n\n\t\tif (this._initialProperties === false || registeredDiffPropertyNames.length !== 0) {\n\t\t\tconst allProperties = [...propertyNames, ...Object.keys(this._properties)];\n\t\t\tconst checkedProperties: (string | number)[] = [];\n\t\t\tconst diffPropertyResults: any = {};\n\t\t\tlet runReactions = false;\n\n\t\t\tfor (let i = 0; i < allProperties.length; i++) {\n\t\t\t\tconst propertyName = allProperties[i];\n\t\t\t\tif (checkedProperties.indexOf(propertyName) !== -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tcheckedProperties.push(propertyName);\n\t\t\t\tconst previousProperty = this._properties[propertyName];\n\t\t\t\tconst newProperty = this._bindFunctionProperty(properties[propertyName], bind);\n\t\t\t\tif (registeredDiffPropertyNames.indexOf(propertyName) !== -1) {\n\t\t\t\t\trunReactions = true;\n\t\t\t\t\tconst diffFunctions = this.getDecorator(`diffProperty:${propertyName}`);\n\t\t\t\t\tfor (let i = 0; i < diffFunctions.length; i++) {\n\t\t\t\t\t\tconst result = diffFunctions[i](previousProperty, newProperty);\n\t\t\t\t\t\tif (result.changed && changedPropertyKeys.indexOf(propertyName) === -1) {\n\t\t\t\t\t\t\tchangedPropertyKeys.push(propertyName);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (propertyName in properties) {\n\t\t\t\t\t\t\tdiffPropertyResults[propertyName] = result.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst result = boundAuto(previousProperty, newProperty);\n\t\t\t\t\tif (result.changed && changedPropertyKeys.indexOf(propertyName) === -1) {\n\t\t\t\t\t\tchangedPropertyKeys.push(propertyName);\n\t\t\t\t\t}\n\t\t\t\t\tif (propertyName in properties) {\n\t\t\t\t\t\tdiffPropertyResults[propertyName] = result.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (runReactions) {\n\t\t\t\tconst reactionFunctions: ReactionFunctionConfig[] = this.getDecorator('diffReaction');\n\t\t\t\tconst executedReactions: Function[] = [];\n\t\t\t\treactionFunctions.forEach(({ reaction, propertyName }) => {\n\t\t\t\t\tconst propertyChanged = changedPropertyKeys.indexOf(propertyName) !== -1;\n\t\t\t\t\tconst reactionRun = executedReactions.indexOf(reaction) !== -1;\n\t\t\t\t\tif (propertyChanged && !reactionRun) {\n\t\t\t\t\t\treaction.call(this, this._properties, diffPropertyResults);\n\t\t\t\t\t\texecutedReactions.push(reaction);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._properties = diffPropertyResults;\n\t\t\tthis._changedPropertyKeys = changedPropertyKeys;\n\t\t} else {\n\t\t\tthis._initialProperties = false;\n\t\t\tfor (let i = 0; i < propertyNames.length; i++) {\n\t\t\t\tconst propertyName = propertyNames[i];\n\t\t\t\tif (typeof properties[propertyName] === 'function') {\n\t\t\t\t\tproperties[propertyName] = this._bindFunctionProperty(properties[propertyName], bind);\n\t\t\t\t} else {\n\t\t\t\t\tchangedPropertyKeys.push(propertyName);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._changedPropertyKeys = changedPropertyKeys;\n\t\t\tthis._properties = { ...properties };\n\t\t}\n\n\t\tif (this._changedPropertyKeys.length > 0) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tpublic get children(): (C | null)[] {\n\t\treturn this._children;\n\t}\n\n\tpublic __setChildren__(children: (C | null)[]): void {\n\t\tif (this._children.length > 0 || children.length > 0) {\n\t\t\tthis._children = children;\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tprivate _filterAndConvert(nodes: DNode[]): (WNode | VNode)[];\n\tprivate _filterAndConvert(nodes: DNode): WNode | VNode;\n\tprivate _filterAndConvert(nodes: DNode | DNode[]): (WNode | VNode) | (WNode | VNode)[];\n\tprivate _filterAndConvert(nodes: DNode | DNode[]): (WNode | VNode) | (WNode | VNode)[] {\n\t\tconst isArray = Array.isArray(nodes);\n\t\tconst filteredNodes = Array.isArray(nodes) ? nodes : [nodes];\n\t\tconst convertedNodes: (WNode | VNode)[] = [];\n\t\tfor (let i = 0; i < filteredNodes.length; i++) {\n\t\t\tconst node = filteredNodes[i];\n\t\t\tif (!node || node === true) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (typeof node === 'string') {\n\t\t\t\tconvertedNodes.push(toTextVNode(node));\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (isVNode(node) && node.deferredPropertiesCallback) {\n\t\t\t\tconst properties = node.deferredPropertiesCallback(false);\n\t\t\t\tnode.originalProperties = node.properties;\n\t\t\t\tnode.properties = { ...properties, ...node.properties };\n\t\t\t}\n\t\t\tif (isWNode(node) && !isWidgetBaseConstructor(node.widgetConstructor)) {\n\t\t\t\tif (typeof node.widgetConstructor === 'function') {\n\t\t\t\t\tlet id = lazyWidgetIdMap.get(node.widgetConstructor);\n\t\t\t\t\tif (!id) {\n\t\t\t\t\t\tid = `__lazy_widget_${lazyWidgetId++}`;\n\t\t\t\t\t\tlazyWidgetIdMap.set(node.widgetConstructor, id);\n\t\t\t\t\t\tthis.registry.define(id, node.widgetConstructor);\n\t\t\t\t\t}\n\t\t\t\t\tnode.widgetConstructor = id;\n\t\t\t\t} else if (isLazyDefine(node.widgetConstructor)) {\n\t\t\t\t\tconst { label, registryItem } = node.widgetConstructor;\n\t\t\t\t\tif (!this.registry.has(label)) {\n\t\t\t\t\t\tthis.registry.define(label, registryItem);\n\t\t\t\t\t}\n\t\t\t\t\tnode.widgetConstructor = label;\n\t\t\t\t}\n\n\t\t\t\tnode.widgetConstructor =\n\t\t\t\t\tthis.registry.get<WidgetBase>(node.widgetConstructor) || node.widgetConstructor;\n\t\t\t}\n\t\t\tif (!node.bind) {\n\t\t\t\tnode.bind = this;\n\t\t\t}\n\t\t\tconvertedNodes.push(node);\n\t\t\tif (node.children && node.children.length) {\n\t\t\t\tnode.children = this._filterAndConvert(node.children);\n\t\t\t}\n\t\t}\n\t\treturn isArray ? convertedNodes : convertedNodes[0];\n\t}\n\n\tpublic __render__(): (WNode | VNode) | (WNode | VNode)[] {\n\t\tconst instanceData = widgetInstanceMap.get(this);\n\t\tif (instanceData) {\n\t\t\tinstanceData.dirty = false;\n\t\t}\n\t\tconst render = this._runBeforeRenders();\n\t\tconst dNode = this._filterAndConvert(this._runAfterRenders(render()));\n\t\tthis._nodeHandler.clear();\n\t\treturn dNode;\n\t}\n\n\tpublic invalidate(): void {\n\t\tconst instanceData = widgetInstanceMap.get(this);\n\t\tif (instanceData && instanceData.invalidate) {\n\t\t\tinstanceData.invalidate();\n\t\t}\n\t}\n\n\tprotected render(): DNode | DNode[] {\n\t\treturn v('div', {}, this.children);\n\t}\n\n\t/**\n\t * Function to add decorators to WidgetBase\n\t *\n\t * @param decoratorKey The key of the decorator\n\t * @param value The value of the decorator\n\t */\n\tprotected addDecorator(decoratorKey: string, value: any): void {\n\t\tvalue = Array.isArray(value) ? value : [value];\n\t\tif (this.hasOwnProperty('constructor')) {\n\t\t\tlet decoratorList = decoratorMap.get(this.constructor);\n\t\t\tif (!decoratorList) {\n\t\t\t\tdecoratorList = new Map<string, any[]>();\n\t\t\t\tdecoratorMap.set(this.constructor, decoratorList);\n\t\t\t}\n\n\t\t\tlet specificDecoratorList = decoratorList.get(decoratorKey);\n\t\t\tif (!specificDecoratorList) {\n\t\t\t\tspecificDecoratorList = [];\n\t\t\t\tdecoratorList.set(decoratorKey, specificDecoratorList);\n\t\t\t}\n\t\t\tspecificDecoratorList.push(...value);\n\t\t} else {\n\t\t\tconst decorators = this.getDecorator(decoratorKey);\n\t\t\tthis._decoratorCache.set(decoratorKey, [...decorators, ...value]);\n\t\t}\n\t}\n\n\t/**\n\t * Function to build the list of decorators from the global decorator map.\n\t *\n\t * @param decoratorKey  The key of the decorator\n\t * @return An array of decorator values\n\t * @private\n\t */\n\tprivate _buildDecoratorList(decoratorKey: string): any[] {\n\t\tconst allDecorators = [];\n\n\t\tlet constructor = this.constructor;\n\n\t\twhile (constructor) {\n\t\t\tconst instanceMap = decoratorMap.get(constructor);\n\t\t\tif (instanceMap) {\n\t\t\t\tconst decorators = instanceMap.get(decoratorKey);\n\n\t\t\t\tif (decorators) {\n\t\t\t\t\tallDecorators.unshift(...decorators);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconstructor = Object.getPrototypeOf(constructor);\n\t\t}\n\n\t\tconst buildDecorators = builtDecoratorMap.get(this.constructor) || new Map();\n\t\tbuildDecorators.set(decoratorKey, allDecorators);\n\t\tbuiltDecoratorMap.set(this.constructor, buildDecorators);\n\t\treturn allDecorators;\n\t}\n\n\t/**\n\t * Function to retrieve decorator values\n\t *\n\t * @param decoratorKey The key of the decorator\n\t * @returns An array of decorator values\n\t */\n\tprotected getDecorator(decoratorKey: string): any[] {\n\t\tlet decoratorCache = builtDecoratorMap.get(this.constructor);\n\t\tlet allDecorators =\n\t\t\tthis._decoratorCache.get(decoratorKey) || (decoratorCache && decoratorCache.get(decoratorKey));\n\n\t\tif (allDecorators !== undefined) {\n\t\t\treturn allDecorators;\n\t\t}\n\n\t\tallDecorators = this._buildDecoratorList(decoratorKey);\n\n\t\tallDecorators = [...allDecorators];\n\t\tthis._decoratorCache.set(decoratorKey, allDecorators);\n\t\treturn allDecorators;\n\t}\n\n\t/**\n\t * Binds unbound property functions to the specified `bind` property\n\t *\n\t * @param properties properties to check for functions\n\t */\n\tprivate _bindFunctionProperty(property: any, bind: any): any {\n\t\tif (typeof property === 'function' && !property[noBind] && isWidgetBaseConstructor(property) === false) {\n\t\t\tif (this._bindFunctionPropertyMap === undefined) {\n\t\t\t\tthis._bindFunctionPropertyMap = new WeakMap<\n\t\t\t\t\t(...args: any[]) => any,\n\t\t\t\t\t{ boundFunc: (...args: any[]) => any; scope: any }\n\t\t\t\t>();\n\t\t\t}\n\t\t\tconst bindInfo: Partial<BoundFunctionData> = this._bindFunctionPropertyMap.get(property) || {};\n\t\t\tlet { boundFunc, scope } = bindInfo;\n\n\t\t\tif (boundFunc === undefined || scope !== bind) {\n\t\t\t\tboundFunc = property.bind(bind) as (...args: any[]) => any;\n\t\t\t\tthis._bindFunctionPropertyMap.set(property, { boundFunc, scope: bind });\n\t\t\t}\n\t\t\treturn boundFunc;\n\t\t}\n\t\treturn property;\n\t}\n\n\tpublic get registry(): RegistryHandler {\n\t\tif (this._registry === undefined) {\n\t\t\tthis._registry = new RegistryHandler();\n\t\t\tthis.own(this._registry);\n\t\t\tthis.own(this._registry.on('invalidate', this._boundInvalidate));\n\t\t}\n\t\treturn this._registry;\n\t}\n\n\tprivate _runBeforeProperties(properties: any) {\n\t\tconst beforeProperties: BeforeProperties[] = this.getDecorator('beforeProperties');\n\t\tif (beforeProperties.length > 0) {\n\t\t\treturn beforeProperties.reduce(\n\t\t\t\t(properties, beforePropertiesFunction) => {\n\t\t\t\t\treturn { ...properties, ...beforePropertiesFunction.call(this, properties) };\n\t\t\t\t},\n\t\t\t\t{ ...properties }\n\t\t\t);\n\t\t}\n\t\treturn properties;\n\t}\n\n\t/**\n\t * Run all registered before renders and return the updated render method\n\t */\n\tprivate _runBeforeRenders(): Render {\n\t\tconst beforeRenders = this.getDecorator('beforeRender');\n\n\t\tif (beforeRenders.length > 0) {\n\t\t\treturn beforeRenders.reduce((render: Render, beforeRenderFunction: BeforeRender) => {\n\t\t\t\tconst updatedRender = beforeRenderFunction.call(this, render, this._properties, this._children);\n\t\t\t\tif (!updatedRender) {\n\t\t\t\t\tconsole.warn('Render function not returned from beforeRender, using previous render');\n\t\t\t\t\treturn render;\n\t\t\t\t}\n\t\t\t\treturn updatedRender;\n\t\t\t}, this._boundRenderFunc);\n\t\t}\n\t\treturn this._boundRenderFunc;\n\t}\n\n\t/**\n\t * Run all registered after renders and return the decorated DNodes\n\t *\n\t * @param dNode The DNodes to run through the after renders\n\t */\n\tprivate _runAfterRenders(dNode: DNode | DNode[]): DNode | DNode[] {\n\t\tconst afterRenders = this.getDecorator('afterRender');\n\n\t\tif (afterRenders.length > 0) {\n\t\t\tdNode = afterRenders.reduce((dNode: DNode | DNode[], afterRenderFunction: AfterRender) => {\n\t\t\t\treturn afterRenderFunction.call(this, dNode);\n\t\t\t}, dNode);\n\t\t}\n\n\t\tif (this._metaMap !== undefined) {\n\t\t\tthis._metaMap.forEach((meta) => {\n\t\t\t\tisDomMeta(meta) && meta.afterRender();\n\t\t\t});\n\t\t}\n\n\t\treturn dNode;\n\t}\n\n\tprivate _runAfterConstructors(): void {\n\t\tconst afterConstructors = this.getDecorator('afterConstructor');\n\n\t\tif (afterConstructors.length > 0) {\n\t\t\tafterConstructors.forEach((afterConstructor) => afterConstructor.call(this));\n\t\t}\n\t}\n\n\tprotected own(handle: Handle): void {\n\t\tthis._handles.push(handle);\n\t}\n\n\tprotected destroy() {\n\t\twhile (this._handles.length > 0) {\n\t\t\tconst handle = this._handles.pop();\n\t\t\tif (handle) {\n\t\t\t\thandle.destroy();\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default WidgetBase;\n","import global from '../shim/global';\nimport has from '../has/has';\nimport { WeakMap } from '../shim/WeakMap';\nimport {\n\tWNode,\n\tVNode,\n\tDNode,\n\tVNodeProperties,\n\tWidgetBaseConstructor,\n\tTransitionStrategy,\n\tSupportedClassName,\n\tDomVNode\n} from './interfaces';\nimport transitionStrategy from './animations/cssTransitions';\nimport { isVNode, isWNode, WNODE, v, isDomVNode, w } from './d';\nimport { Registry, isWidgetBaseConstructor } from './Registry';\nimport { WidgetBase, widgetInstanceMap } from './WidgetBase';\n\nexport interface BaseNodeWrapper {\n\tnode: WNode | VNode;\n\tdomNode?: Node;\n\tchildrenWrappers?: DNodeWrapper[];\n\tdepth: number;\n\torder: number;\n\trequiresInsertBefore?: boolean;\n\thasPreviousSiblings?: boolean;\n\thasParentWNode?: boolean;\n\tnamespace?: string;\n\thasAnimations?: boolean;\n}\n\nexport interface WNodeWrapper extends BaseNodeWrapper {\n\tnode: WNode;\n\tinstance?: WidgetBase;\n\tmergeNodes?: Node[];\n\tnodeHandlerCalled?: boolean;\n}\n\nexport interface VNodeWrapper extends BaseNodeWrapper {\n\tnode: VNode | DomVNode;\n\tmerged?: boolean;\n\tdecoratedDeferredProperties?: VNodeProperties;\n\tinserted?: boolean;\n}\n\nexport type DNodeWrapper = VNodeWrapper | WNodeWrapper;\n\nexport interface MountOptions {\n\tsync: boolean;\n\tmerge: boolean;\n\ttransition: TransitionStrategy;\n\tdomNode: HTMLElement;\n\tregistry: Registry | null;\n}\n\nexport interface Renderer {\n\tinvalidate(): void;\n\tmount(mountOptions?: Partial<MountOptions>): void;\n}\n\ninterface ProcessItem {\n\tcurrent?: (WNodeWrapper | VNodeWrapper)[];\n\tnext?: (WNodeWrapper | VNodeWrapper)[];\n\tmeta: ProcessMeta;\n}\n\ninterface ProcessResult {\n\titem?: ProcessItem;\n\twidget?: AttachApplication | DetachApplication;\n\tdom?: ApplicationInstruction;\n}\n\ninterface ProcessMeta {\n\tmergeNodes?: Node[];\n\toldIndex?: number;\n\tnewIndex?: number;\n}\n\ninterface InvalidationQueueItem {\n\tinstance: WidgetBase;\n\tdepth: number;\n\torder: number;\n}\n\ninterface Instruction {\n\tcurrent: undefined | DNodeWrapper;\n\tnext: undefined | DNodeWrapper;\n}\n\ninterface CreateWidgetInstruction {\n\tnext: WNodeWrapper;\n}\n\ninterface UpdateWidgetInstruction {\n\tcurrent: WNodeWrapper;\n\tnext: WNodeWrapper;\n}\n\ninterface RemoveWidgetInstruction {\n\tcurrent: WNodeWrapper;\n}\n\ninterface CreateDomInstruction {\n\tnext: VNodeWrapper;\n}\n\ninterface UpdateDomInstruction {\n\tcurrent: VNodeWrapper;\n\tnext: VNodeWrapper;\n}\n\ninterface RemoveDomInstruction {\n\tcurrent: VNodeWrapper;\n}\n\ninterface AttachApplication {\n\ttype: 'attach';\n\tinstance: WidgetBase;\n\tattached: boolean;\n}\n\ninterface DetachApplication {\n\ttype: 'detach';\n\tcurrent: WNodeWrapper;\n}\n\ninterface CreateDomApplication {\n\ttype: 'create';\n\tcurrent?: VNodeWrapper;\n\tnext: VNodeWrapper;\n\tparentDomNode: Node;\n}\n\ninterface DeleteDomApplication {\n\ttype: 'delete';\n\tcurrent: VNodeWrapper;\n}\n\ninterface UpdateDomApplication {\n\ttype: 'update';\n\tcurrent: VNodeWrapper;\n\tnext: VNodeWrapper;\n}\n\ninterface PreviousProperties {\n\tproperties: any;\n\tattributes?: any;\n\tevents?: any;\n}\n\ntype ApplicationInstruction =\n\t| CreateDomApplication\n\t| UpdateDomApplication\n\t| DeleteDomApplication\n\t| AttachApplication\n\t| DetachApplication;\n\nconst EMPTY_ARRAY: DNodeWrapper[] = [];\nconst nodeOperations = ['focus', 'blur', 'scrollIntoView', 'click'];\nconst NAMESPACE_W3 = 'http://www.w3.org/';\nconst NAMESPACE_SVG = NAMESPACE_W3 + '2000/svg';\nconst NAMESPACE_XLINK = NAMESPACE_W3 + '1999/xlink';\n\nfunction isWNodeWrapper(child: DNodeWrapper): child is WNodeWrapper {\n\treturn child && isWNode(child.node);\n}\n\nfunction isVNodeWrapper(child?: DNodeWrapper | null): child is VNodeWrapper {\n\treturn !!child && isVNode(child.node);\n}\n\nfunction isAttachApplication(value: any): value is AttachApplication | DetachApplication {\n\treturn !!value.type;\n}\n\nfunction updateAttributes(\n\tdomNode: Element,\n\tpreviousAttributes: { [index: string]: string | undefined },\n\tattributes: { [index: string]: string | undefined },\n\tnamespace?: string\n) {\n\tconst attrNames = Object.keys(attributes);\n\tconst attrCount = attrNames.length;\n\tfor (let i = 0; i < attrCount; i++) {\n\t\tconst attrName = attrNames[i];\n\t\tconst attrValue = attributes[attrName];\n\t\tconst previousAttrValue = previousAttributes[attrName];\n\t\tif (attrValue !== previousAttrValue) {\n\t\t\tupdateAttribute(domNode, attrName, attrValue, namespace);\n\t\t}\n\t}\n}\n\nfunction buildPreviousProperties(domNode: any, current: VNodeWrapper, next: VNodeWrapper) {\n\tconst {\n\t\tnode: { diffType, properties, attributes }\n\t} = current;\n\tif (!diffType || diffType === 'vdom') {\n\t\treturn {\n\t\t\tproperties: current.node.properties,\n\t\t\tattributes: current.node.attributes,\n\t\t\tevents: current.node.events\n\t\t};\n\t} else if (diffType === 'none') {\n\t\treturn { properties: {}, attributes: current.node.attributes ? {} : undefined, events: current.node.events };\n\t}\n\tlet newProperties: any = {\n\t\tproperties: {}\n\t};\n\tif (attributes) {\n\t\tnewProperties.attributes = {};\n\t\tnewProperties.events = current.node.events;\n\t\tObject.keys(properties).forEach((propName) => {\n\t\t\tnewProperties.properties[propName] = domNode[propName];\n\t\t});\n\t\tObject.keys(attributes).forEach((attrName) => {\n\t\t\tnewProperties.attributes[attrName] = domNode.getAttribute(attrName);\n\t\t});\n\t\treturn newProperties;\n\t}\n\tnewProperties.properties = Object.keys(properties).reduce(\n\t\t(props, property) => {\n\t\t\tprops[property] = domNode.getAttribute(property) || domNode[property];\n\t\t\treturn props;\n\t\t},\n\t\t{} as any\n\t);\n\treturn newProperties;\n}\n\nfunction checkDistinguishable(wrappers: DNodeWrapper[], index: number, parentWNodeWrapper?: WNodeWrapper) {\n\tconst wrapperToCheck = wrappers[index];\n\tif (isVNodeWrapper(wrapperToCheck) && !wrapperToCheck.node.tag) {\n\t\treturn;\n\t}\n\tconst { key } = wrapperToCheck.node.properties;\n\tlet parentName = 'unknown';\n\tif (parentWNodeWrapper) {\n\t\tconst {\n\t\t\tnode: { widgetConstructor }\n\t\t} = parentWNodeWrapper;\n\t\tparentName = (widgetConstructor as any).name || 'unknown';\n\t}\n\n\tif (key === undefined || key === null) {\n\t\tfor (let i = 0; i < wrappers.length; i++) {\n\t\t\tif (i !== index) {\n\t\t\t\tconst wrapper = wrappers[i];\n\t\t\t\tif (same(wrapper, wrapperToCheck)) {\n\t\t\t\t\tlet nodeIdentifier: string;\n\t\t\t\t\tif (isWNodeWrapper(wrapper)) {\n\t\t\t\t\t\tnodeIdentifier = (wrapper.node.widgetConstructor as any).name || 'unknown';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnodeIdentifier = wrapper.node.tag;\n\t\t\t\t\t}\n\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`A widget (${parentName}) has had a child added or removed, but they were not able to uniquely identified. It is recommended to provide a unique 'key' property when using the same widget or element (${nodeIdentifier}) multiple times as siblings`\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction same(dnode1: DNodeWrapper, dnode2: DNodeWrapper): boolean {\n\tif (isVNodeWrapper(dnode1) && isVNodeWrapper(dnode2)) {\n\t\tif (isDomVNode(dnode1.node) && isDomVNode(dnode2.node)) {\n\t\t\tif (dnode1.node.domNode !== dnode2.node.domNode) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (dnode1.node.tag !== dnode2.node.tag) {\n\t\t\treturn false;\n\t\t}\n\t\tif (dnode1.node.properties.key !== dnode2.node.properties.key) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t} else if (isWNodeWrapper(dnode1) && isWNodeWrapper(dnode2)) {\n\t\tif (dnode1.instance === undefined && typeof dnode2.node.widgetConstructor === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\tif (dnode1.node.widgetConstructor !== dnode2.node.widgetConstructor) {\n\t\t\treturn false;\n\t\t}\n\t\tif (dnode1.node.properties.key !== dnode2.node.properties.key) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction findIndexOfChild(children: DNodeWrapper[], sameAs: DNodeWrapper, start: number) {\n\tfor (let i = start; i < children.length; i++) {\n\t\tif (same(children[i], sameAs)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction createClassPropValue(classes: SupportedClassName | SupportedClassName[] = []) {\n\tclasses = Array.isArray(classes) ? classes : [classes];\n\treturn classes\n\t\t.filter((className) => className && className !== true)\n\t\t.join(' ')\n\t\t.trim();\n}\n\nfunction updateAttribute(domNode: Element, attrName: string, attrValue: string | undefined, namespace?: string) {\n\tif (namespace === NAMESPACE_SVG && attrName === 'href' && attrValue) {\n\t\tdomNode.setAttributeNS(NAMESPACE_XLINK, attrName, attrValue);\n\t} else if ((attrName === 'role' && attrValue === '') || attrValue === undefined) {\n\t\tdomNode.removeAttribute(attrName);\n\t} else {\n\t\tdomNode.setAttribute(attrName, attrValue);\n\t}\n}\n\nfunction runEnterAnimation(next: VNodeWrapper, transitions: TransitionStrategy) {\n\tconst {\n\t\tdomNode,\n\t\tnode: { properties },\n\t\tnode: {\n\t\t\tproperties: { enterAnimation }\n\t\t}\n\t} = next;\n\tif (enterAnimation && enterAnimation !== true) {\n\t\tif (typeof enterAnimation === 'function') {\n\t\t\treturn enterAnimation(domNode as Element, properties);\n\t\t}\n\t\ttransitions.enter(domNode as Element, properties, enterAnimation);\n\t}\n}\n\nfunction runExitAnimation(current: VNodeWrapper, transitions: TransitionStrategy, exitAnimation: string | Function) {\n\tconst {\n\t\tdomNode,\n\t\tnode: { properties }\n\t} = current;\n\tconst removeDomNode = () => {\n\t\tdomNode && domNode.parentNode && domNode.parentNode.removeChild(domNode);\n\t\tcurrent.domNode = undefined;\n\t};\n\tif (typeof exitAnimation === 'function') {\n\t\treturn exitAnimation(domNode as Element, removeDomNode, properties);\n\t}\n\ttransitions.exit(domNode as Element, properties, exitAnimation, removeDomNode);\n}\n\nfunction arrayFrom(arr: any) {\n\treturn Array.prototype.slice.call(arr);\n}\n\nfunction wrapNodes(renderer: () => DNode) {\n\treturn class extends WidgetBase {\n\t\tpublic isWNodeWrapper = true;\n\n\t\tprotected render() {\n\t\t\tconst result = renderer();\n\t\t\tthis.isWNodeWrapper = isWNode(result);\n\t\t\treturn result;\n\t\t}\n\t};\n}\n\nexport function renderer(renderer: () => WNode | VNode): Renderer {\n\tlet _mountOptions: MountOptions = {\n\t\tsync: false,\n\t\tmerge: true,\n\t\ttransition: transitionStrategy,\n\t\tdomNode: global.document.body,\n\t\tregistry: null\n\t};\n\tlet _invalidationQueue: InvalidationQueueItem[] = [];\n\tlet _processQueue: (ProcessItem | DetachApplication | AttachApplication)[] = [];\n\tlet _applicationQueue: ApplicationInstruction[] = [];\n\tlet _eventMap = new WeakMap<Function, EventListener>();\n\tlet _instanceToWrapperMap = new WeakMap<WidgetBase, WNodeWrapper>();\n\tlet _parentWrapperMap = new WeakMap<DNodeWrapper, DNodeWrapper>();\n\tlet _wrapperSiblingMap = new WeakMap<DNodeWrapper, DNodeWrapper>();\n\tlet _insertBeforeMap: undefined | WeakMap<DNodeWrapper, Node> = new WeakMap<DNodeWrapper, Node>();\n\tlet _renderScheduled: number | undefined;\n\tlet _afterRenderCallbacks: Function[] = [];\n\tlet _deferredRenderCallbacks: Function[] = [];\n\tlet parentInvalidate: () => void;\n\tlet _allMergedNodes: Node[] = [];\n\n\tfunction nodeOperation(\n\t\tpropName: string,\n\t\tpropValue: (() => boolean) | boolean,\n\t\tpreviousValue: boolean,\n\t\tdomNode: HTMLElement & { [index: string]: any }\n\t): void {\n\t\tlet result = propValue && !previousValue;\n\t\tif (typeof propValue === 'function') {\n\t\t\tresult = propValue();\n\t\t}\n\t\tif (result === true) {\n\t\t\t_afterRenderCallbacks.push(() => {\n\t\t\t\tdomNode[propName]();\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction updateEvent(\n\t\tdomNode: Node,\n\t\teventName: string,\n\t\tcurrentValue: Function,\n\t\tbind: any,\n\t\tpreviousValue?: Function\n\t) {\n\t\tif (previousValue) {\n\t\t\tconst previousEvent = _eventMap.get(previousValue);\n\t\t\tdomNode.removeEventListener(eventName, previousEvent);\n\t\t}\n\n\t\tlet callback = currentValue.bind(bind);\n\n\t\tif (eventName === 'input') {\n\t\t\tcallback = function(this: any, evt: Event) {\n\t\t\t\tcurrentValue.call(this, evt);\n\t\t\t\t(evt.target as any)['oninput-value'] = (evt.target as HTMLInputElement).value;\n\t\t\t}.bind(bind);\n\t\t}\n\n\t\tdomNode.addEventListener(eventName, callback);\n\t\t_eventMap.set(currentValue, callback);\n\t}\n\n\tfunction removeOrphanedEvents(\n\t\tdomNode: Element,\n\t\tpreviousProperties: VNodeProperties,\n\t\tproperties: VNodeProperties,\n\t\tonlyEvents: boolean = false\n\t) {\n\t\tObject.keys(previousProperties).forEach((propName) => {\n\t\t\tconst isEvent = propName.substr(0, 2) === 'on' || onlyEvents;\n\t\t\tconst eventName = onlyEvents ? propName : propName.substr(2);\n\t\t\tif (isEvent && !properties[propName]) {\n\t\t\t\tconst eventCallback = _eventMap.get(previousProperties[propName]);\n\t\t\t\tif (eventCallback) {\n\t\t\t\t\tdomNode.removeEventListener(eventName, eventCallback);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction renderedToWrapper(\n\t\trendered: DNode[],\n\t\tparent: DNodeWrapper,\n\t\tcurrentParent: DNodeWrapper | null\n\t): DNodeWrapper[] {\n\t\tconst { requiresInsertBefore, hasPreviousSiblings, namespace, depth } = parent;\n\t\tconst wrappedRendered: DNodeWrapper[] = [];\n\t\tconst hasParentWNode = isWNodeWrapper(parent);\n\t\tconst currentParentChildren = (isVNodeWrapper(currentParent) && currentParent.childrenWrappers) || [];\n\t\tconst hasCurrentParentChildren = currentParentChildren.length > 0;\n\t\tconst insertBefore =\n\t\t\t((requiresInsertBefore || hasPreviousSiblings !== false) && hasParentWNode) ||\n\t\t\t(hasCurrentParentChildren && rendered.length > 1);\n\t\tlet previousItem: DNodeWrapper | undefined;\n\t\tfor (let i = 0; i < rendered.length; i++) {\n\t\t\tconst renderedItem = rendered[i];\n\t\t\tconst wrapper = {\n\t\t\t\tnode: renderedItem,\n\t\t\t\tdepth: depth + 1,\n\t\t\t\torder: i,\n\t\t\t\trequiresInsertBefore: insertBefore,\n\t\t\t\thasParentWNode,\n\t\t\t\tnamespace: namespace\n\t\t\t} as DNodeWrapper;\n\t\t\tif (isVNode(renderedItem) && renderedItem.properties.exitAnimation) {\n\t\t\t\tparent.hasAnimations = true;\n\t\t\t\tlet nextParent = _parentWrapperMap.get(parent);\n\t\t\t\twhile (nextParent) {\n\t\t\t\t\tif (nextParent.hasAnimations) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tnextParent.hasAnimations = true;\n\t\t\t\t\tnextParent = _parentWrapperMap.get(nextParent);\n\t\t\t\t}\n\t\t\t}\n\t\t\t_parentWrapperMap.set(wrapper, parent);\n\t\t\tif (previousItem) {\n\t\t\t\t_wrapperSiblingMap.set(previousItem, wrapper);\n\t\t\t}\n\t\t\twrappedRendered.push(wrapper);\n\t\t\tpreviousItem = wrapper;\n\t\t}\n\t\treturn wrappedRendered;\n\t}\n\n\tfunction findParentWNodeWrapper(currentNode: DNodeWrapper): WNodeWrapper | undefined {\n\t\tlet parentWNodeWrapper: WNodeWrapper | undefined;\n\t\tlet parentWrapper = _parentWrapperMap.get(currentNode);\n\n\t\twhile (!parentWNodeWrapper && parentWrapper) {\n\t\t\tif (!parentWNodeWrapper && isWNodeWrapper(parentWrapper)) {\n\t\t\t\tparentWNodeWrapper = parentWrapper;\n\t\t\t}\n\t\t\tparentWrapper = _parentWrapperMap.get(parentWrapper);\n\t\t}\n\t\treturn parentWNodeWrapper;\n\t}\n\n\tfunction findParentDomNode(currentNode: DNodeWrapper): Node | undefined {\n\t\tlet parentDomNode: Node | undefined;\n\t\tlet parentWrapper = _parentWrapperMap.get(currentNode);\n\n\t\twhile (!parentDomNode && parentWrapper) {\n\t\t\tif (!parentDomNode && isVNodeWrapper(parentWrapper) && parentWrapper.domNode) {\n\t\t\t\tparentDomNode = parentWrapper.domNode;\n\t\t\t}\n\t\t\tparentWrapper = _parentWrapperMap.get(parentWrapper);\n\t\t}\n\t\treturn parentDomNode;\n\t}\n\n\tfunction runDeferredProperties(next: VNodeWrapper) {\n\t\tif (next.node.deferredPropertiesCallback) {\n\t\t\tconst properties = next.node.properties;\n\t\t\tnext.node.properties = { ...next.node.deferredPropertiesCallback(true), ...next.node.originalProperties };\n\t\t\t_afterRenderCallbacks.push(() => {\n\t\t\t\tprocessProperties(next, { properties });\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction findInsertBefore(next: DNodeWrapper) {\n\t\tlet insertBefore: Node | null = null;\n\t\tlet searchNode: DNodeWrapper | undefined = next;\n\t\twhile (!insertBefore) {\n\t\t\tconst nextSibling = _wrapperSiblingMap.get(searchNode);\n\t\t\tif (nextSibling) {\n\t\t\t\tif (isVNodeWrapper(nextSibling)) {\n\t\t\t\t\tif (nextSibling.domNode && nextSibling.domNode.parentNode) {\n\t\t\t\t\t\tinsertBefore = nextSibling.domNode;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tsearchNode = nextSibling;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (nextSibling.domNode && nextSibling.domNode.parentNode) {\n\t\t\t\t\tinsertBefore = nextSibling.domNode;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tsearchNode = nextSibling;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsearchNode = _parentWrapperMap.get(searchNode);\n\t\t\tif (!searchNode || isVNodeWrapper(searchNode)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn insertBefore;\n\t}\n\n\tfunction setValue(domNode: any, propValue?: any, previousValue?: any) {\n\t\tconst domValue = domNode.value;\n\t\tconst onInputValue = domNode['oninput-value'];\n\t\tconst onSelectValue = domNode['select-value'];\n\n\t\tif (onSelectValue && domValue !== onSelectValue) {\n\t\t\tdomNode.value = onSelectValue;\n\t\t\tif (domNode.value === onSelectValue) {\n\t\t\t\tdomNode['select-value'] = undefined;\n\t\t\t}\n\t\t} else if ((onInputValue && domValue === onInputValue) || propValue !== previousValue) {\n\t\t\tdomNode.value = propValue;\n\t\t\tdomNode['oninput-value'] = undefined;\n\t\t}\n\t}\n\n\tfunction setProperties(\n\t\tdomNode: HTMLElement,\n\t\tcurrentProperties: VNodeProperties = {},\n\t\tnextWrapper: VNodeWrapper,\n\t\tincludesEventsAndAttributes = true\n\t): void {\n\t\tconst propNames = Object.keys(nextWrapper.node.properties);\n\t\tconst propCount = propNames.length;\n\t\tif (propNames.indexOf('classes') === -1 && currentProperties.classes) {\n\t\t\tdomNode.removeAttribute('class');\n\t\t}\n\n\t\tincludesEventsAndAttributes && removeOrphanedEvents(domNode, currentProperties, nextWrapper.node.properties);\n\n\t\tfor (let i = 0; i < propCount; i++) {\n\t\t\tconst propName = propNames[i];\n\t\t\tlet propValue = nextWrapper.node.properties[propName];\n\t\t\tconst previousValue = currentProperties[propName];\n\t\t\tif (propName === 'classes') {\n\t\t\t\tconst previousClassString = createClassPropValue(previousValue);\n\t\t\t\tlet currentClassString = createClassPropValue(propValue);\n\t\t\t\tif (previousClassString !== currentClassString) {\n\t\t\t\t\tif (currentClassString) {\n\t\t\t\t\t\tif (nextWrapper.merged) {\n\t\t\t\t\t\t\tconst domClasses = (domNode.getAttribute('class') || '').split(' ');\n\t\t\t\t\t\t\tfor (let i = 0; i < domClasses.length; i++) {\n\t\t\t\t\t\t\t\tif (currentClassString.indexOf(domClasses[i]) === -1) {\n\t\t\t\t\t\t\t\t\tcurrentClassString = `${domClasses[i]} ${currentClassString}`;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdomNode.setAttribute('class', currentClassString);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdomNode.removeAttribute('class');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (nodeOperations.indexOf(propName) !== -1) {\n\t\t\t\tnodeOperation(propName, propValue, previousValue, domNode);\n\t\t\t} else if (propName === 'styles') {\n\t\t\t\tconst styleNames = Object.keys(propValue);\n\t\t\t\tconst styleCount = styleNames.length;\n\t\t\t\tfor (let j = 0; j < styleCount; j++) {\n\t\t\t\t\tconst styleName = styleNames[j];\n\t\t\t\t\tconst newStyleValue = propValue[styleName];\n\t\t\t\t\tconst oldStyleValue = previousValue && previousValue[styleName];\n\t\t\t\t\tif (newStyleValue === oldStyleValue) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t(domNode.style as any)[styleName] = newStyleValue || '';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!propValue && typeof previousValue === 'string') {\n\t\t\t\t\tpropValue = '';\n\t\t\t\t}\n\t\t\t\tif (propName === 'value') {\n\t\t\t\t\tif ((domNode as HTMLElement).tagName === 'SELECT') {\n\t\t\t\t\t\t(domNode as any)['select-value'] = propValue;\n\t\t\t\t\t}\n\t\t\t\t\tsetValue(domNode, propValue, previousValue);\n\t\t\t\t} else if (propName !== 'key' && propValue !== previousValue) {\n\t\t\t\t\tconst type = typeof propValue;\n\t\t\t\t\tif (type === 'function' && propName.lastIndexOf('on', 0) === 0 && includesEventsAndAttributes) {\n\t\t\t\t\t\tupdateEvent(domNode, propName.substr(2), propValue, nextWrapper.node.bind, previousValue);\n\t\t\t\t\t} else if (type === 'string' && propName !== 'innerHTML' && includesEventsAndAttributes) {\n\t\t\t\t\t\tupdateAttribute(domNode, propName, propValue, nextWrapper.namespace);\n\t\t\t\t\t} else if (propName === 'scrollLeft' || propName === 'scrollTop') {\n\t\t\t\t\t\tif ((domNode as any)[propName] !== propValue) {\n\t\t\t\t\t\t\t(domNode as any)[propName] = propValue;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t(domNode as any)[propName] = propValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction runDeferredRenderCallbacks() {\n\t\tconst { sync } = _mountOptions;\n\t\tconst callbacks = _deferredRenderCallbacks;\n\t\t_deferredRenderCallbacks = [];\n\t\tif (callbacks.length) {\n\t\t\tconst run = () => {\n\t\t\t\tlet callback: Function | undefined;\n\t\t\t\twhile ((callback = callbacks.shift())) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (sync) {\n\t\t\t\trun();\n\t\t\t} else {\n\t\t\t\tglobal.requestAnimationFrame(run);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction runAfterRenderCallbacks() {\n\t\tconst { sync } = _mountOptions;\n\t\tconst callbacks = _afterRenderCallbacks;\n\t\t_afterRenderCallbacks = [];\n\t\tif (callbacks.length) {\n\t\t\tconst run = () => {\n\t\t\t\tlet callback: Function | undefined;\n\t\t\t\twhile ((callback = callbacks.shift())) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (sync) {\n\t\t\t\trun();\n\t\t\t} else {\n\t\t\t\tif (global.requestIdleCallback) {\n\t\t\t\t\tglobal.requestIdleCallback(run);\n\t\t\t\t} else {\n\t\t\t\t\tsetTimeout(run);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction processProperties(next: VNodeWrapper, previousProperties: PreviousProperties) {\n\t\tif (next.node.attributes && next.node.events) {\n\t\t\tupdateAttributes(\n\t\t\t\tnext.domNode as HTMLElement,\n\t\t\t\tpreviousProperties.attributes || {},\n\t\t\t\tnext.node.attributes,\n\t\t\t\tnext.namespace\n\t\t\t);\n\t\t\tsetProperties(next.domNode as HTMLElement, previousProperties.properties, next, false);\n\t\t\tconst events = next.node.events || {};\n\t\t\tif (previousProperties.events) {\n\t\t\t\tremoveOrphanedEvents(\n\t\t\t\t\tnext.domNode as HTMLElement,\n\t\t\t\t\tpreviousProperties.events || {},\n\t\t\t\t\tnext.node.events,\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t}\n\t\t\tpreviousProperties.events = previousProperties.events || {};\n\t\t\tObject.keys(events).forEach((event) => {\n\t\t\t\tupdateEvent(\n\t\t\t\t\tnext.domNode as HTMLElement,\n\t\t\t\t\tevent,\n\t\t\t\t\tevents[event],\n\t\t\t\t\tnext.node.bind,\n\t\t\t\t\tpreviousProperties.events[event]\n\t\t\t\t);\n\t\t\t});\n\t\t} else {\n\t\t\tsetProperties(next.domNode as HTMLElement, previousProperties.properties, next);\n\t\t}\n\t}\n\n\tfunction mount(mountOptions: Partial<MountOptions> = {}) {\n\t\t_mountOptions = { ..._mountOptions, ...mountOptions };\n\t\tconst { domNode } = _mountOptions;\n\t\tconst renderResult = w(wrapNodes(renderer), {});\n\t\tconst nextWrapper = {\n\t\t\tnode: renderResult,\n\t\t\torder: 0,\n\t\t\tdepth: 1\n\t\t};\n\t\t_parentWrapperMap.set(nextWrapper, { depth: 0, order: 0, domNode, node: v('fake') });\n\t\t_processQueue.push({\n\t\t\tcurrent: [],\n\t\t\tnext: [nextWrapper],\n\t\t\tmeta: { mergeNodes: arrayFrom(domNode.childNodes) }\n\t\t});\n\t\t_runProcessQueue();\n\t\tlet mergedNode: Node | undefined;\n\t\twhile ((mergedNode = _allMergedNodes.pop())) {\n\t\t\tmergedNode.parentNode && mergedNode.parentNode.removeChild(mergedNode);\n\t\t}\n\t\t_runDomInstructionQueue();\n\t\t_mountOptions.merge = false;\n\t\t_insertBeforeMap = undefined;\n\t\t_runCallbacks();\n\t}\n\n\tfunction invalidate() {\n\t\tparentInvalidate && parentInvalidate();\n\t}\n\n\tfunction _schedule(): void {\n\t\tconst { sync } = _mountOptions;\n\t\tif (sync) {\n\t\t\t_runInvalidationQueue();\n\t\t} else if (!_renderScheduled) {\n\t\t\t_renderScheduled = global.requestAnimationFrame(() => {\n\t\t\t\t_runInvalidationQueue();\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction _runInvalidationQueue() {\n\t\t_renderScheduled = undefined;\n\t\tconst invalidationQueue = [..._invalidationQueue];\n\t\tconst previouslyRendered = [];\n\t\t_invalidationQueue = [];\n\t\tinvalidationQueue.sort((a, b) => {\n\t\t\tlet result = b.depth - a.depth;\n\t\t\tif (result === 0) {\n\t\t\t\tresult = b.order - a.order;\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t\tlet item: InvalidationQueueItem | undefined;\n\t\twhile ((item = invalidationQueue.pop())) {\n\t\t\tlet { instance } = item;\n\t\t\tif (previouslyRendered.indexOf(instance) === -1 && _instanceToWrapperMap.has(instance!)) {\n\t\t\t\tpreviouslyRendered.push(instance);\n\t\t\t\tconst current = _instanceToWrapperMap.get(instance)!;\n\t\t\t\tconst instanceData = widgetInstanceMap.get(instance)!;\n\t\t\t\tconst parent = _parentWrapperMap.get(current);\n\t\t\t\tconst sibling = _wrapperSiblingMap.get(current);\n\t\t\t\tconst { constructor, children } = instance;\n\t\t\t\tconst next = {\n\t\t\t\t\tnode: {\n\t\t\t\t\t\ttype: WNODE,\n\t\t\t\t\t\twidgetConstructor: constructor as WidgetBaseConstructor,\n\t\t\t\t\t\tproperties: instanceData.inputProperties,\n\t\t\t\t\t\tchildren: children,\n\t\t\t\t\t\tbind: current.node.bind\n\t\t\t\t\t},\n\t\t\t\t\tinstance,\n\t\t\t\t\tdepth: current.depth,\n\t\t\t\t\torder: current.order\n\t\t\t\t};\n\n\t\t\t\tparent && _parentWrapperMap.set(next, parent);\n\t\t\t\tsibling && _wrapperSiblingMap.set(next, sibling);\n\t\t\t\tconst { item } = _updateWidget({ current, next });\n\t\t\t\tif (item) {\n\t\t\t\t\t_processQueue.push(item);\n\t\t\t\t\tinstance && _instanceToWrapperMap.set(instance, next);\n\t\t\t\t\t_runProcessQueue();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_runDomInstructionQueue();\n\t\t_runCallbacks();\n\t}\n\n\tfunction _runProcessQueue() {\n\t\tlet item: DetachApplication | AttachApplication | ProcessItem | undefined;\n\t\twhile ((item = _processQueue.pop())) {\n\t\t\tif (isAttachApplication(item)) {\n\t\t\t\t_applicationQueue.push(item);\n\t\t\t} else {\n\t\t\t\tconst { current, next, meta } = item;\n\t\t\t\t_process(current || EMPTY_ARRAY, next || EMPTY_ARRAY, meta);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction _runDomInstructionQueue(): void {\n\t\t_applicationQueue.reverse();\n\t\tlet item: ApplicationInstruction | undefined;\n\t\twhile ((item = _applicationQueue.pop())) {\n\t\t\tif (item.type === 'create') {\n\t\t\t\tconst {\n\t\t\t\t\tparentDomNode,\n\t\t\t\t\tnext,\n\t\t\t\t\tnext: {\n\t\t\t\t\t\tdomNode,\n\t\t\t\t\t\tmerged,\n\t\t\t\t\t\trequiresInsertBefore,\n\t\t\t\t\t\tnode: { properties }\n\t\t\t\t\t}\n\t\t\t\t} = item;\n\n\t\t\t\tprocessProperties(next, { properties: {} });\n\t\t\t\trunDeferredProperties(next);\n\t\t\t\tif (!merged) {\n\t\t\t\t\tlet insertBefore: any;\n\t\t\t\t\tif (requiresInsertBefore) {\n\t\t\t\t\t\tinsertBefore = findInsertBefore(next);\n\t\t\t\t\t} else if (_insertBeforeMap) {\n\t\t\t\t\t\tinsertBefore = _insertBeforeMap.get(next);\n\t\t\t\t\t}\n\t\t\t\t\tparentDomNode.insertBefore(domNode!, insertBefore);\n\t\t\t\t\tif (isDomVNode(next.node) && next.node.onAttach) {\n\t\t\t\t\t\tnext.node.onAttach();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ((domNode as HTMLElement).tagName === 'OPTION' && domNode!.parentElement) {\n\t\t\t\t\tsetValue(domNode!.parentElement);\n\t\t\t\t}\n\t\t\t\trunEnterAnimation(next, _mountOptions.transition);\n\t\t\t\tconst instanceData = widgetInstanceMap.get(next.node.bind as WidgetBase);\n\t\t\t\tif (properties.key != null && instanceData) {\n\t\t\t\t\tinstanceData.nodeHandler.add(domNode as HTMLElement, `${properties.key}`);\n\t\t\t\t}\n\t\t\t\titem.next.inserted = true;\n\t\t\t} else if (item.type === 'update') {\n\t\t\t\tconst {\n\t\t\t\t\tnext,\n\t\t\t\t\tnext: { domNode, node },\n\t\t\t\t\tcurrent\n\t\t\t\t} = item;\n\t\t\t\tconst parent = _parentWrapperMap.get(next);\n\t\t\t\tif (parent && isWNodeWrapper(parent) && parent.instance) {\n\t\t\t\t\tconst instanceData = widgetInstanceMap.get(parent.instance);\n\t\t\t\t\tinstanceData && instanceData.nodeHandler.addRoot();\n\t\t\t\t}\n\n\t\t\t\tconst previousProperties = buildPreviousProperties(domNode, current, next);\n\t\t\t\tconst instanceData = widgetInstanceMap.get(next.node.bind as WidgetBase);\n\n\t\t\t\tprocessProperties(next, previousProperties);\n\t\t\t\trunDeferredProperties(next);\n\n\t\t\t\tif (instanceData && node.properties.key != null) {\n\t\t\t\t\tinstanceData.nodeHandler.add(next.domNode as HTMLElement, `${node.properties.key}`);\n\t\t\t\t}\n\t\t\t} else if (item.type === 'delete') {\n\t\t\t\tconst { current } = item;\n\t\t\t\tconst { exitAnimation } = current.node.properties;\n\t\t\t\tif (exitAnimation && exitAnimation !== true) {\n\t\t\t\t\trunExitAnimation(current, _mountOptions.transition, exitAnimation);\n\t\t\t\t} else {\n\t\t\t\t\tcurrent.domNode!.parentNode!.removeChild(current.domNode!);\n\t\t\t\t\tcurrent.domNode = undefined;\n\t\t\t\t}\n\t\t\t} else if (item.type === 'attach') {\n\t\t\t\tconst { instance, attached } = item;\n\t\t\t\tconst instanceData = widgetInstanceMap.get(instance)!;\n\t\t\t\tinstanceData.nodeHandler.addRoot();\n\t\t\t\tattached && instanceData.onAttach();\n\t\t\t} else if (item.type === 'detach') {\n\t\t\t\tif (item.current.instance) {\n\t\t\t\t\tconst instanceData = widgetInstanceMap.get(item.current.instance);\n\t\t\t\t\tinstanceData && instanceData.onDetach();\n\t\t\t\t}\n\t\t\t\titem.current.domNode = undefined;\n\t\t\t\titem.current.node.bind = undefined;\n\t\t\t\titem.current.instance = undefined;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction _runCallbacks() {\n\t\trunAfterRenderCallbacks();\n\t\trunDeferredRenderCallbacks();\n\t}\n\n\tfunction _processMergeNodes(next: DNodeWrapper, mergeNodes: Node[]) {\n\t\tconst { merge } = _mountOptions;\n\t\tif (merge && mergeNodes.length) {\n\t\t\tif (isVNodeWrapper(next)) {\n\t\t\t\tlet {\n\t\t\t\t\tnode: { tag }\n\t\t\t\t} = next;\n\t\t\t\tfor (let i = 0; i < mergeNodes.length; i++) {\n\t\t\t\t\tconst domElement = mergeNodes[i] as Element;\n\t\t\t\t\tif (tag.toUpperCase() === (domElement.tagName || '')) {\n\t\t\t\t\t\tconst mergeNodeIndex = _allMergedNodes.indexOf(domElement);\n\t\t\t\t\t\tif (mergeNodeIndex !== -1) {\n\t\t\t\t\t\t\t_allMergedNodes.splice(mergeNodeIndex, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmergeNodes.splice(i, 1);\n\t\t\t\t\t\tnext.domNode = domElement;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnext.mergeNodes = mergeNodes;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction registerDistinguishableCallback(childNodes: DNodeWrapper[], index: number) {\n\t\t_afterRenderCallbacks.push(() => {\n\t\t\tconst parentWNodeWrapper = findParentWNodeWrapper(childNodes[index]);\n\t\t\tcheckDistinguishable(childNodes, index, parentWNodeWrapper);\n\t\t});\n\t}\n\n\tfunction _process(current: DNodeWrapper[], next: DNodeWrapper[], meta: ProcessMeta = {}): void {\n\t\tlet { mergeNodes = [], oldIndex = 0, newIndex = 0 } = meta;\n\t\tconst currentLength = current.length;\n\t\tconst nextLength = next.length;\n\t\tconst hasPreviousSiblings = currentLength > 1 || (currentLength > 0 && currentLength < nextLength);\n\t\tconst instructions: Instruction[] = [];\n\t\tif (newIndex < nextLength) {\n\t\t\tlet currentWrapper = oldIndex < currentLength ? current[oldIndex] : undefined;\n\t\t\tconst nextWrapper = next[newIndex];\n\t\t\tnextWrapper.hasPreviousSiblings = hasPreviousSiblings;\n\n\t\t\t_processMergeNodes(nextWrapper, mergeNodes);\n\n\t\t\tif (currentWrapper && same(currentWrapper, nextWrapper)) {\n\t\t\t\toldIndex++;\n\t\t\t\tnewIndex++;\n\t\t\t\tif (isVNodeWrapper(currentWrapper) && isVNodeWrapper(nextWrapper)) {\n\t\t\t\t\tnextWrapper.inserted = currentWrapper.inserted;\n\t\t\t\t}\n\t\t\t\tinstructions.push({ current: currentWrapper, next: nextWrapper });\n\t\t\t} else if (!currentWrapper || findIndexOfChild(current, nextWrapper, oldIndex + 1) === -1) {\n\t\t\t\thas('dojo-debug') && current.length && registerDistinguishableCallback(next, newIndex);\n\t\t\t\tinstructions.push({ current: undefined, next: nextWrapper });\n\t\t\t\tnewIndex++;\n\t\t\t} else if (findIndexOfChild(next, currentWrapper, newIndex + 1) === -1) {\n\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(current, oldIndex);\n\t\t\t\tinstructions.push({ current: currentWrapper, next: undefined });\n\t\t\t\toldIndex++;\n\t\t\t} else {\n\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(next, newIndex);\n\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(current, oldIndex);\n\t\t\t\tinstructions.push({ current: currentWrapper, next: undefined });\n\t\t\t\tinstructions.push({ current: undefined, next: nextWrapper });\n\t\t\t\toldIndex++;\n\t\t\t\tnewIndex++;\n\t\t\t}\n\t\t}\n\n\t\tif (newIndex < nextLength) {\n\t\t\t_processQueue.push({ current, next, meta: { mergeNodes, oldIndex, newIndex } });\n\t\t}\n\n\t\tif (currentLength > oldIndex && newIndex >= nextLength) {\n\t\t\tfor (let i = oldIndex; i < currentLength; i++) {\n\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(current, i);\n\t\t\t\tinstructions.push({ current: current[i], next: undefined });\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < instructions.length; i++) {\n\t\t\tconst { item, dom, widget } = _processOne(instructions[i]);\n\t\t\twidget && _processQueue.push(widget);\n\t\t\titem && _processQueue.push(item);\n\t\t\tdom && _applicationQueue.push(dom);\n\t\t}\n\t}\n\n\tfunction _processOne({ current, next }: Instruction): ProcessResult {\n\t\tif (current !== next) {\n\t\t\tif (!current && next) {\n\t\t\t\tif (isVNodeWrapper(next)) {\n\t\t\t\t\treturn _createDom({ next });\n\t\t\t\t} else {\n\t\t\t\t\treturn _createWidget({ next });\n\t\t\t\t}\n\t\t\t} else if (current && next) {\n\t\t\t\tif (isVNodeWrapper(current) && isVNodeWrapper(next)) {\n\t\t\t\t\treturn _updateDom({ current, next });\n\t\t\t\t} else if (isWNodeWrapper(current) && isWNodeWrapper(next)) {\n\t\t\t\t\treturn _updateWidget({ current, next });\n\t\t\t\t}\n\t\t\t} else if (current && !next) {\n\t\t\t\tif (isVNodeWrapper(current)) {\n\t\t\t\t\treturn _removeDom({ current });\n\t\t\t\t} else if (isWNodeWrapper(current)) {\n\t\t\t\t\treturn _removeWidget({ current });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn {};\n\t}\n\n\tfunction _createWidget({ next }: CreateWidgetInstruction): ProcessResult {\n\t\tlet {\n\t\t\tnode: { widgetConstructor }\n\t\t} = next;\n\t\tlet { registry } = _mountOptions;\n\t\tif (!isWidgetBaseConstructor(widgetConstructor)) {\n\t\t\treturn {};\n\t\t}\n\t\tconst instance = new widgetConstructor() as WidgetBase;\n\t\tif (registry) {\n\t\t\tinstance.registry.base = registry;\n\t\t}\n\t\tconst instanceData = widgetInstanceMap.get(instance)!;\n\t\tinstanceData.invalidate = () => {\n\t\t\tinstanceData.dirty = true;\n\t\t\tif (!instanceData.rendering && _instanceToWrapperMap.has(instance)) {\n\t\t\t\t_invalidationQueue.push({ instance, depth: next.depth, order: next.order });\n\t\t\t\t_schedule();\n\t\t\t}\n\t\t};\n\t\tinstanceData.rendering = true;\n\t\tinstance.__setProperties__(next.node.properties, next.node.bind);\n\t\tinstance.__setChildren__(next.node.children);\n\t\tnext.instance = instance;\n\t\tlet rendered = instance.__render__();\n\t\tinstanceData.rendering = false;\n\t\tif (rendered) {\n\t\t\trendered = Array.isArray(rendered) ? rendered : [rendered];\n\t\t\tnext.childrenWrappers = renderedToWrapper(rendered, next, null);\n\t\t}\n\t\tif (next.instance) {\n\t\t\t_instanceToWrapperMap.set(next.instance, next);\n\t\t\tif (!parentInvalidate && !(next.instance as any).isWNodeWrapper) {\n\t\t\t\tparentInvalidate = next.instance.invalidate.bind(next.instance);\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\titem: { next: next.childrenWrappers, meta: { mergeNodes: next.mergeNodes } },\n\t\t\twidget: { type: 'attach', instance, attached: true }\n\t\t};\n\t}\n\n\tfunction _updateWidget({ current, next }: UpdateWidgetInstruction): ProcessResult {\n\t\tcurrent = (current.instance && _instanceToWrapperMap.get(current.instance)) || current;\n\t\tconst { instance, domNode, hasAnimations } = current;\n\t\tif (!instance) {\n\t\t\treturn [] as ProcessResult;\n\t\t}\n\t\tconst instanceData = widgetInstanceMap.get(instance)!;\n\t\tnext.instance = instance;\n\t\tnext.domNode = domNode;\n\t\tnext.hasAnimations = hasAnimations;\n\t\tinstanceData.rendering = true;\n\t\tinstance!.__setProperties__(next.node.properties, next.node.bind);\n\t\tinstance!.__setChildren__(next.node.children);\n\t\t_instanceToWrapperMap.set(next.instance!, next);\n\t\tif (instanceData.dirty) {\n\t\t\tlet rendered = instance!.__render__();\n\t\t\tinstanceData.rendering = false;\n\t\t\tif (rendered) {\n\t\t\t\trendered = Array.isArray(rendered) ? rendered : [rendered];\n\t\t\t\tnext.childrenWrappers = renderedToWrapper(rendered, next, current);\n\t\t\t}\n\t\t\treturn {\n\t\t\t\titem: { current: current.childrenWrappers, next: next.childrenWrappers, meta: {} },\n\t\t\t\twidget: { type: 'attach', instance, attached: false }\n\t\t\t};\n\t\t}\n\t\tinstanceData.rendering = false;\n\t\tnext.childrenWrappers = current.childrenWrappers;\n\t\treturn {\n\t\t\twidget: { type: 'attach', instance, attached: false }\n\t\t};\n\t}\n\n\tfunction _removeWidget({ current }: RemoveWidgetInstruction): ProcessResult {\n\t\tcurrent = current.instance ? _instanceToWrapperMap.get(current.instance)! : current;\n\t\t_wrapperSiblingMap.delete(current);\n\t\t_parentWrapperMap.delete(current);\n\t\t_instanceToWrapperMap.delete(current.instance!);\n\n\t\treturn {\n\t\t\titem: { current: current.childrenWrappers, meta: {} },\n\t\t\twidget: { type: 'detach', current }\n\t\t};\n\t}\n\n\tfunction _createDom({ next }: CreateDomInstruction): ProcessResult {\n\t\tlet mergeNodes: Node[] = [];\n\t\tconst parentDomNode = findParentDomNode(next)!;\n\t\tif (!next.domNode) {\n\t\t\tif ((next.node as any).domNode) {\n\t\t\t\tnext.domNode = (next.node as any).domNode;\n\t\t\t} else {\n\t\t\t\tif (next.node.tag === 'svg') {\n\t\t\t\t\tnext.namespace = NAMESPACE_SVG;\n\t\t\t\t}\n\t\t\t\tif (next.node.tag) {\n\t\t\t\t\tif (next.namespace) {\n\t\t\t\t\t\tnext.domNode = global.document.createElementNS(next.namespace, next.node.tag);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnext.domNode = global.document.createElement(next.node.tag);\n\t\t\t\t\t}\n\t\t\t\t} else if (next.node.text != null) {\n\t\t\t\t\tnext.domNode = global.document.createTextNode(next.node.text);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (_insertBeforeMap && _allMergedNodes.length) {\n\t\t\t\tif (parentDomNode === _allMergedNodes[0].parentNode) {\n\t\t\t\t\t_insertBeforeMap.set(next, _allMergedNodes[0]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (_mountOptions.merge) {\n\t\t\t\tmergeNodes = arrayFrom(next.domNode.childNodes);\n\t\t\t\t_allMergedNodes = [..._allMergedNodes, ...mergeNodes];\n\t\t\t}\n\t\t\tnext.merged = true;\n\t\t}\n\t\tif (next.domNode) {\n\t\t\tif (next.node.children) {\n\t\t\t\tnext.childrenWrappers = renderedToWrapper(next.node.children, next, null);\n\t\t\t}\n\t\t}\n\t\tconst parentWNodeWrapper = findParentWNodeWrapper(next);\n\t\tif (parentWNodeWrapper && !parentWNodeWrapper.domNode) {\n\t\t\tparentWNodeWrapper.domNode = next.domNode;\n\t\t}\n\t\tconst dom: ApplicationInstruction = {\n\t\t\tnext: next!,\n\t\t\tparentDomNode: parentDomNode,\n\t\t\ttype: 'create'\n\t\t};\n\t\tif (next.childrenWrappers) {\n\t\t\treturn {\n\t\t\t\titem: { current: [], next: next.childrenWrappers, meta: { mergeNodes } },\n\t\t\t\tdom\n\t\t\t};\n\t\t}\n\t\treturn { dom };\n\t}\n\n\tfunction _updateDom({ current, next }: UpdateDomInstruction): ProcessResult {\n\t\tconst parentDomNode = findParentDomNode(current);\n\t\tnext.domNode = current.domNode;\n\t\tnext.namespace = current.namespace;\n\t\tif (next.node.text && next.node.text !== current.node.text) {\n\t\t\tconst updatedTextNode = parentDomNode!.ownerDocument.createTextNode(next.node.text!);\n\t\t\tparentDomNode!.replaceChild(updatedTextNode, next.domNode!);\n\t\t\tnext.domNode = updatedTextNode;\n\t\t} else if (next.node.children) {\n\t\t\tconst children = renderedToWrapper(next.node.children, next, current);\n\t\t\tnext.childrenWrappers = children;\n\t\t}\n\t\treturn {\n\t\t\titem: { current: current.childrenWrappers, next: next.childrenWrappers, meta: {} },\n\t\t\tdom: { type: 'update', next, current }\n\t\t};\n\t}\n\n\tfunction _removeDom({ current }: RemoveDomInstruction): ProcessResult {\n\t\t_wrapperSiblingMap.delete(current);\n\t\t_parentWrapperMap.delete(current);\n\t\tcurrent.node.bind = undefined;\n\t\tif (current.hasAnimations) {\n\t\t\treturn {\n\t\t\t\titem: { current: current.childrenWrappers, meta: {} },\n\t\t\t\tdom: { type: 'delete', current }\n\t\t\t};\n\t\t}\n\n\t\tif (current.childrenWrappers) {\n\t\t\t_afterRenderCallbacks.push(() => {\n\t\t\t\tlet wrappers = current.childrenWrappers || [];\n\t\t\t\tlet wrapper: DNodeWrapper | undefined;\n\t\t\t\twhile ((wrapper = wrappers.pop())) {\n\t\t\t\t\tif (wrapper.childrenWrappers) {\n\t\t\t\t\t\twrappers.push(...wrapper.childrenWrappers);\n\t\t\t\t\t\twrapper.childrenWrappers = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tif (isWNodeWrapper(wrapper)) {\n\t\t\t\t\t\tif (wrapper.instance) {\n\t\t\t\t\t\t\t_instanceToWrapperMap.delete(wrapper.instance);\n\t\t\t\t\t\t\tconst instanceData = widgetInstanceMap.get(wrapper.instance);\n\t\t\t\t\t\t\tinstanceData && instanceData.onDetach();\n\t\t\t\t\t\t}\n\t\t\t\t\t\twrapper.instance = undefined;\n\t\t\t\t\t}\n\t\t\t\t\t_wrapperSiblingMap.delete(wrapper);\n\t\t\t\t\t_parentWrapperMap.delete(wrapper);\n\t\t\t\t\twrapper.domNode = undefined;\n\t\t\t\t\twrapper.node.bind = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn {\n\t\t\tdom: { type: 'delete', current }\n\t\t};\n\t}\n\n\treturn {\n\t\tmount,\n\t\tinvalidate\n\t};\n}\n\nexport default renderer;\n","import { Handle } from './Destroyable';\n\nconst slice = Array.prototype.slice;\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Type guard that ensures that the value can be coerced to Object\n * to weed out host objects that do not derive from Object.\n * This function is used to check if we want to deep copy an object or not.\n * Note: In ES6 it is possible to modify an object's Symbol.toStringTag property, which will\n * change the value returned by `toString`. This is a rare edge case that is difficult to handle,\n * so it is not handled here.\n * @param  value The value to check\n * @return       If the value is coercible into an Object\n */\nfunction shouldDeepCopyObject(value: any): value is Object {\n\treturn Object.prototype.toString.call(value) === '[object Object]';\n}\n\nfunction copyArray<T>(array: T[], inherited: boolean): T[] {\n\treturn array.map(function(item: T): T {\n\t\tif (Array.isArray(item)) {\n\t\t\treturn copyArray(item, inherited) as any;\n\t\t}\n\n\t\treturn !shouldDeepCopyObject(item)\n\t\t\t? item\n\t\t\t: _mixin({\n\t\t\t\t\tdeep: true,\n\t\t\t\t\tinherited: inherited,\n\t\t\t\t\tsources: <Array<T>>[item],\n\t\t\t\t\ttarget: <T>{}\n\t\t\t  });\n\t});\n}\n\ninterface MixinArgs<T extends {}, U extends {}> {\n\tdeep: boolean;\n\tinherited: boolean;\n\tsources: (U | null | undefined)[];\n\ttarget: T;\n\tcopied?: any[];\n}\n\nfunction _mixin<T extends {}, U extends {}>(kwArgs: MixinArgs<T, U>): T & U {\n\tconst deep = kwArgs.deep;\n\tconst inherited = kwArgs.inherited;\n\tconst target: any = kwArgs.target;\n\tconst copied = kwArgs.copied || [];\n\tconst copiedClone = [...copied];\n\n\tfor (let i = 0; i < kwArgs.sources.length; i++) {\n\t\tconst source = kwArgs.sources[i];\n\n\t\tif (source === null || source === undefined) {\n\t\t\tcontinue;\n\t\t}\n\t\tfor (let key in source) {\n\t\t\tif (inherited || hasOwnProperty.call(source, key)) {\n\t\t\t\tlet value: any = source[key];\n\n\t\t\t\tif (copiedClone.indexOf(value) !== -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (deep) {\n\t\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\t\tvalue = copyArray(value, inherited);\n\t\t\t\t\t} else if (shouldDeepCopyObject(value)) {\n\t\t\t\t\t\tconst targetValue: any = target[key] || {};\n\t\t\t\t\t\tcopied.push(source);\n\t\t\t\t\t\tvalue = _mixin({\n\t\t\t\t\t\t\tdeep: true,\n\t\t\t\t\t\t\tinherited: inherited,\n\t\t\t\t\t\t\tsources: [value],\n\t\t\t\t\t\t\ttarget: targetValue,\n\t\t\t\t\t\t\tcopied\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttarget[key] = value;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn <T & U>target;\n}\n\n/**\n * Copies the values of all enumerable own properties of one or more source objects to the target object,\n * recursively copying all nested objects and arrays as well.\n *\n * @param target The target object to receive values from source objects\n * @param sources Any number of objects whose enumerable own properties will be copied to the target object\n * @return The modified target object\n */\nexport function deepAssign<\n\tT extends {},\n\tU extends {},\n\tV extends {},\n\tW extends {},\n\tX extends {},\n\tY extends {},\n\tZ extends {}\n>(target: T, source1: U, source2: V, source3: W, source4: X, source5: Y, source6: Z): T & U & V & W & X & Y & Z;\nexport function deepAssign<T extends {}, U extends {}, V extends {}, W extends {}, X extends {}, Y extends {}>(\n\ttarget: T,\n\tsource1: U,\n\tsource2: V,\n\tsource3: W,\n\tsource4: X,\n\tsource5: Y\n): T & U & V & W & X & Y;\nexport function deepAssign<T extends {}, U extends {}, V extends {}, W extends {}, X extends {}>(\n\ttarget: T,\n\tsource1: U,\n\tsource2: V,\n\tsource3: W,\n\tsource4: X\n): T & U & V & W & X;\nexport function deepAssign<T extends {}, U extends {}, V extends {}, W extends {}>(\n\ttarget: T,\n\tsource1: U,\n\tsource2: V,\n\tsource3: W\n): T & U & V & W;\nexport function deepAssign<T extends {}, U extends {}, V extends {}>(target: T, source1: U, source2: V): T & U & V;\nexport function deepAssign<T extends {}, U extends {}>(target: T, source: U): T & U;\nexport function deepAssign(target: any, ...sources: any[]): any {\n\treturn _mixin({\n\t\tdeep: true,\n\t\tinherited: false,\n\t\tsources: sources,\n\t\ttarget: target\n\t});\n}\n\n/**\n * Copies the values of all enumerable (own or inherited) properties of one or more source objects to the\n * target object, recursively copying all nested objects and arrays as well.\n *\n * @param target The target object to receive values from source objects\n * @param sources Any number of objects whose enumerable properties will be copied to the target object\n * @return The modified target object\n */\nexport function deepMixin<\n\tT extends {},\n\tU extends {},\n\tV extends {},\n\tW extends {},\n\tX extends {},\n\tY extends {},\n\tZ extends {}\n>(target: T, source1: U, source2: V, source3: W, source4: X, source5: Y, source6: Z): T & U & V & W & X & Y & Z;\nexport function deepMixin<T extends {}, U extends {}, V extends {}, W extends {}, X extends {}, Y extends {}>(\n\ttarget: T,\n\tsource1: U,\n\tsource2: V,\n\tsource3: W,\n\tsource4: X,\n\tsource5: Y\n): T & U & V & W & X & Y;\nexport function deepMixin<T extends {}, U extends {}, V extends {}, W extends {}, X extends {}>(\n\ttarget: T,\n\tsource1: U,\n\tsource2: V,\n\tsource3: W,\n\tsource4: X\n): T & U & V & W & X;\nexport function deepMixin<T extends {}, U extends {}, V extends {}, W extends {}>(\n\ttarget: T,\n\tsource1: U,\n\tsource2: V,\n\tsource3: W\n): T & U & V & W;\nexport function deepMixin<T extends {}, U extends {}, V extends {}>(target: T, source1: U, source2: V): T & U & V;\nexport function deepMixin<T extends {}, U extends {}>(target: T, source: U): T & U;\nexport function deepMixin(target: any, ...sources: any[]): any {\n\treturn _mixin({\n\t\tdeep: true,\n\t\tinherited: true,\n\t\tsources: sources,\n\t\ttarget: target\n\t});\n}\n\n/**\n * Copies the values of all enumerable (own or inherited) properties of one or more source objects to the\n * target object.\n *\n * @return The modified target object\n */\nexport function mixin<T extends {}, U extends {}, V extends {}, W extends {}, X extends {}, Y extends {}, Z extends {}>(\n\ttarget: T,\n\tsource1: U,\n\tsource2: V,\n\tsource3: W,\n\tsource4: X,\n\tsource5: Y,\n\tsource6: Z\n): T & U & V & W & X & Y & Z;\nexport function mixin<T extends {}, U extends {}, V extends {}, W extends {}, X extends {}, Y extends {}>(\n\ttarget: T,\n\tsource1: U,\n\tsource2: V,\n\tsource3: W,\n\tsource4: X,\n\tsource5: Y\n): T & U & V & W & X & Y;\nexport function mixin<T extends {}, U extends {}, V extends {}, W extends {}, X extends {}>(\n\ttarget: T,\n\tsource1: U,\n\tsource2: V,\n\tsource3: W,\n\tsource4: X\n): T & U & V & W & X;\nexport function mixin<T extends {}, U extends {}, V extends {}, W extends {}>(\n\ttarget: T,\n\tsource1: U,\n\tsource2: V,\n\tsource3: W\n): T & U & V & W;\nexport function mixin<T extends {}, U extends {}, V extends {}>(target: T, source1: U, source2: V): T & U & V;\nexport function mixin<T extends {}, U extends {}>(target: T, source: U): T & U;\nexport function mixin(target: any, ...sources: any[]): any {\n\treturn _mixin({\n\t\tdeep: false,\n\t\tinherited: true,\n\t\tsources: sources,\n\t\ttarget: target\n\t});\n}\n\n/**\n * Returns a function which invokes the given function with the given arguments prepended to its argument list.\n * Like `Function.prototype.bind`, but does not alter execution context.\n *\n * @param targetFunction The function that needs to be bound\n * @param suppliedArgs An optional array of arguments to prepend to the `targetFunction` arguments list\n * @return The bound function\n */\nexport function partial(targetFunction: (...args: any[]) => any, ...suppliedArgs: any[]): (...args: any[]) => any {\n\treturn function(this: any) {\n\t\tconst args: any[] = arguments.length ? suppliedArgs.concat(slice.call(arguments)) : suppliedArgs;\n\n\t\treturn targetFunction.apply(this, args);\n\t};\n}\n\nexport function guaranteeMinimumTimeout(callback: (...args: any[]) => void, delay?: number): Handle {\n\tconst startTime = Date.now();\n\tlet timerId: any;\n\n\tfunction timeoutHandler() {\n\t\tconst delta = Date.now() - startTime;\n\t\tif (delay == null || delta >= delay) {\n\t\t\tcallback();\n\t\t} else {\n\t\t\ttimerId = setTimeout(timeoutHandler, delay - delta);\n\t\t}\n\t}\n\ttimerId = setTimeout(timeoutHandler, delay);\n\treturn {\n\t\tdestroy: () => {\n\t\t\tif (timerId != null) {\n\t\t\t\tclearTimeout(timerId);\n\t\t\t\ttimerId = null;\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function debounce<T extends (this: any, ...args: any[]) => void>(callback: T, delay: number): T {\n\tlet timer: Handle | null;\n\n\treturn <T>function() {\n\t\ttimer && timer.destroy();\n\n\t\tlet context = this;\n\t\tlet args: IArguments | null = arguments;\n\n\t\ttimer = guaranteeMinimumTimeout(function() {\n\t\t\tcallback.apply(context, args);\n\t\t\targs = context = timer = null;\n\t\t}, delay);\n\t};\n}\n\nexport function throttle<T extends (this: any, ...args: any[]) => void>(callback: T, delay: number): T {\n\tlet ran: boolean | null;\n\n\treturn <T>function() {\n\t\tif (ran) {\n\t\t\treturn;\n\t\t}\n\n\t\tran = true;\n\n\t\tcallback.apply(this, arguments);\n\t\tguaranteeMinimumTimeout(function() {\n\t\t\tran = null;\n\t\t}, delay);\n\t};\n}\n\nexport function uuid(): string {\n\treturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n\t\tconst r = (Math.random() * 16) | 0,\n\t\t\tv = c === 'x' ? r : (r & 0x3) | 0x8;\n\t\treturn v.toString(16);\n\t});\n}\n","export type DecoratorHandler = (target: any, propertyKey?: string) => void;\n\n/**\n * Generic decorator handler to take care of whether or not the decorator was called at the class level\n * or the method level.\n *\n * @param handler\n */\nexport function handleDecorator(handler: DecoratorHandler) {\n\treturn function(target: any, propertyKey?: string, descriptor?: PropertyDescriptor) {\n\t\tif (typeof target === 'function') {\n\t\t\thandler(target.prototype, undefined);\n\t\t} else {\n\t\t\thandler(target, propertyKey);\n\t\t}\n\t};\n}\n\nexport default handleDecorator;\n","import { handleDecorator } from './handleDecorator';\nimport { DiffPropertyFunction } from './../interfaces';\nimport { auto } from './../diff';\n\n/**\n * Decorator that can be used to register a function as a specific property diff\n *\n * @param propertyName  The name of the property of which the diff function is applied\n * @param diffType      The diff type, default is DiffType.AUTO.\n * @param diffFunction  A diff function to run if diffType if DiffType.CUSTOM\n */\nexport function diffProperty(\n\tpropertyName: string,\n\tdiffFunction: DiffPropertyFunction = auto,\n\treactionFunction?: Function\n) {\n\treturn handleDecorator((target, propertyKey) => {\n\t\ttarget.addDecorator(`diffProperty:${propertyName}`, diffFunction.bind(null));\n\t\ttarget.addDecorator('registeredDiffProperty', propertyName);\n\t\tif (reactionFunction || propertyKey) {\n\t\t\ttarget.addDecorator('diffReaction', {\n\t\t\t\tpropertyName,\n\t\t\t\treaction: propertyKey ? target[propertyKey] : reactionFunction\n\t\t\t});\n\t\t}\n\t});\n}\n\nexport default diffProperty;\n","import { dom } from '@dojo/framework/widget-core/d';\nimport { deepMixin } from '@dojo/framework/core/util';\nimport * as Grid from 'dgrid/Grid';\nimport * as declare from 'dojo/_base/declare';\nimport * as CellSelection from 'dgrid/CellSelection';\nimport * as Selector from 'dgrid/Selector';\nimport * as ColumnHider from 'dgrid/extensions/ColumnHider';\nimport * as ColumnReorder from 'dgrid/extensions/ColumnReorder';\nimport * as ColumnResizer from 'dgrid/extensions/ColumnResizer';\nimport * as CompoundColumns from 'dgrid/extensions/CompoundColumns';\nimport * as ColumnSet from 'dgrid/ColumnSet';\nimport * as Tree from 'dgrid/Tree';\nimport * as MemoryStore from 'dstore/Memory';\nimport * as TreeStore from 'dstore/Tree';\nimport * as Trackable from 'dstore/Trackable';\nimport * as StoreMixin from 'dgrid/_StoreMixin';\nimport * as OnDemandGrid from 'dgrid/OnDemandGrid';\nimport * as Keyboard from 'dgrid/Keyboard';\nimport * as Pagination from 'dgrid/extensions/Pagination';\nimport * as Selection from 'dgrid/Selection';\nimport { DNode, WidgetProperties } from '@dojo/framework/widget-core/interfaces';\nimport { WidgetBase } from '@dojo/framework/widget-core/WidgetBase';\nimport { diffProperty } from '@dojo/framework/widget-core/decorators/diffProperty';\nimport { w } from '@dojo/framework/widget-core/d';\nimport { columnsDiff } from './diff';\n\nexport enum SelectionMode {\n\tnone = 'none',\n\tmultiple = 'multiple',\n\tsingle = 'single',\n\textended = 'extended'\n}\n\nexport interface Selections {\n\t[id: string]: boolean;\n}\n\nexport interface DgridWrapperFeatures {\n\t// Setting pagination to true turns off infinite scrolling and displays rows in discrete pages.\n\tpagination?: boolean;\n\t// Add keyboard navigation capability.\n\tkeyboard?: boolean;\n\t// Add selection capabilities to a grid.\n\tselection?: SelectionType;\n\t// Add selector column to the grid.  selection must be set as well.\n\tselector?: boolean;\n\t// Support hierarchical data\n\t// When tree is enabled, the items in the data array are expected to have the following properties:\n\t//  - hasChildren: boolean, true indicates this item has children\n\t//  - parent: ID, if this item is a child, parent is the ID of the parent item.\n\ttree?: boolean;\n\t// Enable the column hider extension.\n\tcolumnHider?: boolean;\n\t// Enable the column reorder extension.\n\tcolumnReorder?: boolean;\n\t// Enable the column resizer extension.\n\tcolumnResizer?: boolean;\n\t// Enable the compound column extension.\n\tcompoundColumns?: boolean;\n\t// Enable the column set mixin.\n\tcolumnSet?: boolean;\n}\n\nexport interface DgridWrapperProperties extends WidgetProperties {\n\tfeatures?: DgridWrapperFeatures;\n\n\t// Grid properties\n\tcolumns?: ColumnSpec;\n\tsubRows?: Array<Column[]>;\n\n\t// An array of data items that will be pushed into a Memory store and passed to the dgrid grid.\n\tdata: {}[];\n\n\t// Grid Events\n\t// See https://github.com/SitePen/dgrid/blob/master/doc/usage/Working-with-Events.md\n\tonSort?: (sort: SortData) => void;\n\tonError?: (error: ErrorData) => void;\n\n\t// _StoreMixin properties\n\t// See https://github.com/SitePen/dgrid/blob/master/_StoreMixin.js for documentation and default values.\n\tnoDataMessage?: string;\n\tloadingMessage?: string;\n\n\t// Pagination properties\n\t// See https://github.com/SitePen/dgrid/blob/master/extensions/Pagination.js for documentation and default values.\n\trowsPerPage?: number;\n\tpagingTextBox?: boolean;\n\tpreviousNextArrows?: boolean;\n\tfirstLastArrows?: boolean;\n\tpagingLinks?: number;\n\tpageSizeOptions?: number[];\n\tshowLoadingMessage?: boolean;\n\n\t// Keyboard properties\n\t// See https://github.com/SitePen/dgrid/blob/master/Keyboard.js for documentation and default values.\n\tpageSkip?: number;\n\ttabIndex?: number;\n\tonCellFocusIn?: (focused: CellFocusData) => void;\n\tonCellFocusOut?: (focused: CellFocusData) => void;\n\n\t// Selection properties\n\t// See https://github.com/SitePen/dgrid/blob/master/Selection.js for documentation and default values.\n\tdeselectOnRefresh?: boolean;\n\tallowSelectAll?: boolean;\n\tselection?: Selections;\n\tselectionMode?: SelectionMode;\n\tallowTextSelection?: boolean;\n\tonSelect?: (selected: SelectionData, selections: Selections) => void;\n\tonDeselect?: (deselected: SelectionData, selections: Selections) => void;\n\n\t// Tree properties\n\t// See https://github.com/SitePen/dgrid/blob/master/Tree.js for documentation and default values.\n\tcollapseOnRefresh?: boolean;\n\tenableTreeTransitions?: boolean;\n\ttreeIndentWidth?: number;\n\n\t// Column Hider properties\n\t// See https://github.com/SitePen/dgrid/blob/master/extensions/ColumnHider.js for documentation and default values.\n\tonColumnStateChange?: (columnChange: ColumnStateChangeData) => void;\n\n\t// Column Reorder properties\n\t// See https://github.com/SitePen/dgrid/blob/master/extensions/ColumnReorder.js for documentation and default values.\n\tonColumnReorder?: (columnReorder: ColumnReorderData) => void;\n\n\t// Column Resizer properties\n\t// See https://github.com/SitePen/dgrid/blob/master/extensions/ColumnResizer.js for documentation and default values.\n\tonColumnResize?: (columnResize: ColumnResizeData) => void;\n\n\tminWidth?: number;\n\tadjustLastColumn?: boolean;\n\n\tcolumnSets?: Array<Array<Column[]>>;\n}\n\n// List of dgrid property names that must be passed to dgrid when a grid is constructed.\n// These keys can not update an existing grid.  If they change, a new grid must be constructed.\nexport const constructionKeys = [\n\t'previousNextArrows',\n\t'firstLastArrows',\n\t'pagingLinks',\n\t'tabIndex',\n\t'allowSelectAll',\n\t'selection',\n\t'treeIndentWidth'\n];\n\nexport interface Column {\n\tfield?: string;\n\tid?: string | number;\n\tlabel?: string;\n\tclassName?: string;\n\tcolSpan?: number;\n\trowSpan?: number;\n\tsortable?: boolean;\n\tformatter?: string | Formatter;\n\tselector?: string;\n\tchildren?: Column[];\n\tshowChildHeaders?: boolean;\n\n\tget?(item: any): any;\n\tset?(item: any): any;\n\trenderCell?(object: any, value: any, node: HTMLElement): HTMLElement | void;\n\trenderHeaderCell?(node: HTMLElement): HTMLElement | void;\n}\n\nexport type ColumnSpec = { [key: string]: Column | string } | Column[];\n\nexport type Formatter = (value: any, object: any) => string;\n\nexport enum SelectionType {\n\trow = 'row',\n\tcell = 'cell'\n}\n\nexport interface SelectionData {\n\ttype: SelectionType;\n\tdata: {\n\t\t// The data item used to render the selected row.\n\t\titem: any;\n\t\t// If the type is \"cell\", this contains the field name that corresponds to the selected cell.\n\t\tfield?: string;\n\t}[];\n}\n\nexport interface ColumnStateChangeData {\n\tfield?: string;\n\tid?: string | number;\n\thidden: boolean;\n}\n\nexport interface ColumnResizeData {\n\tid?: string | number;\n\tfield?: string;\n\twidth?: number;\n\tparentType?: string;\n}\n\nexport interface ColumnReorderData {\n\tsubRow?: ColumnSpec;\n\tfield?: string;\n\tid?: string | number;\n}\n\nexport interface ErrorData {\n\terror?: Error | string;\n}\n\nexport interface SortData {\n\tparentType?: string;\n\tsort?: { property: string; descending?: boolean }[];\n}\n\nexport interface CellFocusData {\n\trow?: {};\n\tcell?: {};\n\tparentType?: string;\n}\n\nexport interface DgridInnerWrapperProperties extends DgridWrapperProperties {\n\t// The inner wrapper can pass a state object to the outer wrapper widget so\n\t// a dgrid grid can be destroyed and recreated back to the same state when\n\t// desired.\n\tgridState?: DgridState;\n\tonGridState: (state: DgridState) => void;\n}\n\n/**\n * When a dgrid grid is destroyed some of its state will need to be restored when the next\n * grid is created.  This interface describes that state.\n */\nexport interface DgridState {\n\tcurrentPage?: number;\n}\n\ninterface DgridGrid extends Grid, Pagination, Keyboard, Selection {}\n\ninterface DgridProperties\n\textends Grid.KwArgs,\n\t\tStoreMixin.KwArgs,\n\t\tPagination.KwArgs,\n\t\tOnDemandGrid.KwArgs,\n\t\tSelection.KwArgs,\n\t\tColumnSet.KwArgs {\n\tselection?: Selections;\n}\n\ninterface DgridSelectionEvent extends Event {\n\trows?: { data: any }[];\n\tcells?: { data: any }[];\n}\n\ninterface DgridColumnHiderEvent extends Event {\n\tgrid: DgridGrid;\n\tcolumn: Column;\n\thidden: boolean;\n}\n\ninterface DgridColumnReorderEvent extends Event {\n\tgrid: DgridGrid;\n\tsubRow: ColumnSpec;\n\tcolumn: Column;\n}\n\ninterface DgridColumnResizeEvent extends Event {\n\tgrid: DgridGrid;\n\tcolumnId: string | number;\n\twidth: number;\n\tparentType?: string;\n}\n\ninterface DgridSortEvent extends Event {\n\tgrid: DgridGrid;\n\tparentType?: string;\n\tsort?: { property: string; descending?: boolean }[];\n}\n\ninterface DgridErrorEvent extends Event {\n\tgrid: DgridGrid;\n\terror?: Error | string;\n}\n\ninterface DgridCellFocusEvent extends Event {\n\tgrid: DgridGrid;\n\trow?: {};\n\tcell?: {};\n\tparentType?: string;\n}\n\nfunction duplicate<T extends {}>(source: T): T {\n\tconst target = Object.create(Object.getPrototypeOf(source));\n\n\treturn deepMixin(target, source);\n}\n\nfunction buildSelectEvent(event: DgridSelectionEvent): SelectionData {\n\tconst selectionType = event.rows ? SelectionType.row : SelectionType.cell;\n\tconst data: SelectionData = {\n\t\ttype: selectionType,\n\t\tdata: []\n\t};\n\tif (selectionType === SelectionType.row) {\n\t\tevent.rows &&\n\t\t\t(data.data = event.rows.map((rowData: any) => {\n\t\t\t\treturn {\n\t\t\t\t\titem: rowData.data\n\t\t\t\t};\n\t\t\t}));\n\t} else {\n\t\tevent.cells &&\n\t\t\t(data.data = event.cells.map((cellData: any) => {\n\t\t\t\treturn {\n\t\t\t\t\titem: cellData.row.data,\n\t\t\t\t\tfield: cellData.column.field\n\t\t\t\t};\n\t\t\t}));\n\t}\n\n\treturn data;\n}\n\nfunction buildColumnStateChange({ column: { field, id }, hidden }: DgridColumnHiderEvent): ColumnStateChangeData {\n\treturn {\n\t\tfield,\n\t\tid,\n\t\thidden\n\t};\n}\n\nfunction buildColumnReorder({ column: { field, id }, subRow }: DgridColumnReorderEvent): ColumnReorderData {\n\treturn {\n\t\tfield,\n\t\tid,\n\t\tsubRow\n\t};\n}\n\nfunction buildColumnResize({\n\tgrid: { columns },\n\twidth,\n\tparentType,\n\tcolumnId\n}: DgridColumnResizeEvent): ColumnResizeData {\n\tconst { field, id } = columns[columnId];\n\treturn {\n\t\tfield,\n\t\tid,\n\t\twidth,\n\t\tparentType\n\t};\n}\n\nfunction buildSort({ parentType, sort }: DgridSortEvent): SortData {\n\treturn {\n\t\tparentType,\n\t\tsort\n\t};\n}\n\nfunction buildError({ error }: DgridErrorEvent): ErrorData {\n\treturn {\n\t\terror\n\t};\n}\n\nfunction buildCellFocus({ row, cell, parentType }: DgridCellFocusEvent): CellFocusData {\n\treturn {\n\t\trow,\n\t\tcell,\n\t\tparentType\n\t};\n}\n\nfunction duplicateColumnDef(columnsSpec: Grid.ColumnSpec): Grid.ColumnSpec {\n\tif (Array.isArray(columnsSpec)) {\n\t\tif (columnsSpec.length === 0) {\n\t\t\treturn [];\n\t\t}\n\t\treturn columnsSpec.map((columnSpec) => {\n\t\t\treturn duplicate(columnSpec);\n\t\t});\n\t} else {\n\t\treturn duplicate(columnsSpec);\n\t}\n}\n\nfunction duplicateColumnSets(columnSets: Array<Array<Grid.Column[]>>): Array<Array<Grid.Column[]>> {\n\treturn columnSets.map((subRows) => {\n\t\treturn subRows.map((subRow) => {\n\t\t\treturn subRow.map((column) => duplicate(column));\n\t\t});\n\t});\n}\n\nfunction buildConstructor(properties: DgridInnerWrapperProperties, emitGridState: () => void): any {\n\tconst {\n\t\tpagination = false,\n\t\tkeyboard = false,\n\t\tselection = undefined,\n\t\tselector = false,\n\t\ttree = false,\n\t\tcolumnHider = false,\n\t\tcolumnReorder = false,\n\t\tcolumnResizer = false,\n\t\tcompoundColumns = false,\n\t\tcolumnSet = false\n\t} =\n\t\tproperties.features || {};\n\n\tlet mixins: any[] = [];\n\tlet overrides: any = {};\n\tif (pagination) {\n\t\tmixins.push(Grid);\n\t\tmixins.push(Pagination);\n\n\t\toverrides._updateNavigation = function _updateNavigation(total: number) {\n\t\t\tthis.inherited(_updateNavigation, arguments);\n\t\t\temitGridState();\n\t\t};\n\t} else {\n\t\tmixins.push(OnDemandGrid);\n\t}\n\n\tif (tree) {\n\t\tmixins.push(Tree);\n\t}\n\n\tif (keyboard) {\n\t\tmixins.push(Keyboard);\n\t}\n\n\tif (selection) {\n\t\tmixins.push(selection === SelectionType.row ? Selection : CellSelection);\n\t\tif (selector) {\n\t\t\tmixins.push(Selector);\n\t\t}\n\t}\n\n\tif (columnHider) {\n\t\tmixins.push(ColumnHider);\n\t}\n\n\tif (columnReorder) {\n\t\tmixins.push(ColumnReorder);\n\t}\n\n\tif (columnResizer) {\n\t\tmixins.push(ColumnResizer);\n\t}\n\n\tif (compoundColumns) {\n\t\tmixins.push(CompoundColumns);\n\t}\n\n\tif (columnSet) {\n\t\tmixins.push(ColumnSet);\n\t}\n\n\treturn declare(mixins as any, overrides);\n}\n\nfunction buildCollection(properties: DgridProperties, data?: {}[], features?: DgridWrapperFeatures): any {\n\tconst treeEnabled = features && features.tree;\n\tlet mixins: any[] = [MemoryStore, Trackable];\n\tlet overrides: any = {};\n\n\tif (treeEnabled) {\n\t\tmixins.push(TreeStore);\n\t\toverrides.getRootCollection = function() {\n\t\t\treturn this.root.filter((item: any) => {\n\t\t\t\treturn item.parent == null;\n\t\t\t});\n\t\t};\n\t}\n\n\tconst Store = declare(mixins as any, overrides);\n\tlet collection = new Store({\n\t\tdata\n\t});\n\tif (treeEnabled) {\n\t\tcollection = collection.getRootCollection();\n\t}\n\treturn collection;\n}\n\n/**\n * Wrap a dgrid widget, so that it can exist inside of the Dojo 2 widgeting system.\n *\n * This widget will construct a dgrid widget based on DgridProperties but it will only react to\n * changes in DgridProperties#data.  If the other properties change, then this widget will need\n * to be destroyed and a new one created.\n */\nexport class DgridInnerWrapper extends WidgetBase<DgridInnerWrapperProperties> {\n\tprivate _grid: DgridGrid;\n\n\tprotected render(): DNode {\n\t\tlet grid = this._grid;\n\t\tif (!grid) {\n\t\t\tgrid = this._grid = this.initGrid();\n\t\t\tthis.registerGridEvents();\n\t\t} else {\n\t\t\tthis.setChangedGridProperites();\n\t\t}\n\t\treturn dom({ node: grid.domNode });\n\t}\n\n\tprotected onAttach(): void {\n\t\tconst grid = this._grid;\n\t\tconst handle = grid.on('dgrid-refresh-complete', () => {\n\t\t\thandle.remove();\n\t\t\tthis.restoreGridState();\n\t\t});\n\t\tgrid.startup();\n\t}\n\n\tprotected onDetach(): void {\n\t\t// @dojo/framework expects this node to still be attached so we need to\n\t\tthis._grid && this._grid.destroy();\n\t}\n\n\tprivate emitGridState(): void {\n\t\tthis.properties.onGridState({\n\t\t\tcurrentPage: this._grid._currentPage\n\t\t});\n\t}\n\n\tprivate initGrid(): DgridGrid {\n\t\tconst Constructor = buildConstructor(this.properties, this.emitGridState.bind(this));\n\t\treturn new Constructor(this.filterProperties(this.properties));\n\t}\n\n\tprivate restoreGridState() {\n\t\tconst { gridState } = this.properties;\n\t\tif (gridState) {\n\t\t\tconst { currentPage } = gridState;\n\t\t\tif (currentPage && currentPage > 1 && this._grid.gotoPage) {\n\t\t\t\tthis._grid.gotoPage(currentPage);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate filterProperties(properties: DgridWrapperProperties): DgridProperties {\n\t\t// Remove DgridWrapperProperties properties not used by dgrid.\n\t\tconst { features, data, ...otherProperties } = properties;\n\t\tconst newProperties: DgridProperties = otherProperties;\n\t\tconst columnSet = features && features.columnSet;\n\t\tif (data != null) {\n\t\t\tnewProperties.collection = buildCollection(newProperties, data, this.properties.features);\n\t\t}\n\t\tif (columnSet) {\n\t\t\tif (newProperties.columnSets != null) {\n\t\t\t\tnewProperties.columnSets = duplicateColumnSets(newProperties.columnSets);\n\t\t\t} else {\n\t\t\t\tnewProperties.columnSets = [];\n\t\t\t}\n\t\t\tdelete newProperties.columns;\n\t\t} else {\n\t\t\tif (newProperties.columns != null) {\n\t\t\t\tnewProperties.columns = duplicateColumnDef(newProperties.columns);\n\t\t\t}\n\t\t\tdelete newProperties.columnSets;\n\t\t}\n\t\tif (newProperties.selection == null && 'selection' in newProperties) {\n\t\t\tnewProperties.selection = {};\n\t\t}\n\t\treturn newProperties;\n\t}\n\n\tprivate setChangedGridProperites(): void {\n\t\t// Set only the properties that changed to minimize how much DOM dgrid rebuild.\n\t\tconst properties: any = this.properties;\n\t\tconst changeProperties: any = {};\n\t\tthis.changedPropertyKeys.forEach((key) => {\n\t\t\tchangeProperties[key] = properties[key];\n\t\t});\n\t\tthis._grid && this._grid.set(this.filterProperties(changeProperties));\n\t}\n\n\tprivate registerGridEvents(): void {\n\t\tconst properties = this.properties;\n\t\tconst grid = this._grid;\n\t\tif (properties.features) {\n\t\t\tconst { selection, columnHider, columnReorder, columnResizer, keyboard } = properties.features;\n\t\t\tif (selection) {\n\t\t\t\tgrid.on('dgrid-select', (event: DgridSelectionEvent) => {\n\t\t\t\t\tconst onSelect = properties.onSelect;\n\t\t\t\t\tonSelect && onSelect(buildSelectEvent(event), grid.selection);\n\t\t\t\t});\n\t\t\t\tgrid.on('dgrid-deselect', (event: DgridSelectionEvent) => {\n\t\t\t\t\tconst onDeselect = properties.onDeselect;\n\t\t\t\t\tonDeselect && onDeselect(buildSelectEvent(event), grid.selection);\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (columnHider) {\n\t\t\t\tgrid.on('dgrid-columnstatechange', (event: DgridColumnHiderEvent) => {\n\t\t\t\t\tconst onColumnStateChange = properties.onColumnStateChange;\n\t\t\t\t\tonColumnStateChange && onColumnStateChange(buildColumnStateChange(event));\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (columnReorder) {\n\t\t\t\tgrid.on('dgrid-columnreorder', (event: DgridColumnReorderEvent) => {\n\t\t\t\t\tconst onColumnReorder = properties.onColumnReorder;\n\t\t\t\t\tonColumnReorder && onColumnReorder(buildColumnReorder(event));\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (columnResizer) {\n\t\t\t\tgrid.on('dgrid-columnresize', (event: DgridColumnResizeEvent) => {\n\t\t\t\t\tconst onColumnResize = properties.onColumnResize;\n\t\t\t\t\tonColumnResize && onColumnResize(buildColumnResize(event));\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (keyboard) {\n\t\t\t\tgrid.on('dgrid-cellfocusin', (event: DgridCellFocusEvent) => {\n\t\t\t\t\tconst onCellFocusIn = properties.onCellFocusIn;\n\t\t\t\t\tonCellFocusIn && onCellFocusIn(buildCellFocus(event));\n\t\t\t\t});\n\n\t\t\t\tgrid.on('dgrid-cellfocusout', (event: DgridCellFocusEvent) => {\n\t\t\t\t\tconst onCellFocusOut = properties.onCellFocusOut;\n\t\t\t\t\tonCellFocusOut && onCellFocusOut(buildCellFocus(event));\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tconst { onSort, onError } = properties;\n\n\t\tif (onSort) {\n\t\t\tgrid.on('dgrid-sort', (event: DgridSortEvent) => {\n\t\t\t\tonSort(buildSort(event));\n\t\t\t});\n\t\t}\n\n\t\tif (onError) {\n\t\t\tgrid.on('dgrid-error', (event: DgridErrorEvent) => {\n\t\t\t\tonError(buildError(event));\n\t\t\t});\n\t\t}\n\t}\n}\n\nconst keyPrefix = 'dgridWrapper';\n\n@diffProperty('columns', columnsDiff)\nexport class DgridWrapper extends WidgetBase<DgridWrapperProperties> {\n\tprivate key = 0;\n\tprivate _gridState: DgridState;\n\n\tprotected render(): DNode {\n\t\tconst changedPropertyKeys = this.changedPropertyKeys;\n\t\t// Some properties require the dgrid grid to be destroyed and recreated because a different\n\t\t// combination of mixins is required.  Some properties when changed can be handled by an existing\n\t\t// grid.  Determine if a new grid is needed or not.  If a new grid is needed, generate a new\n\t\t// key and let the vdom throw away the old grid.\n\t\tif (changedPropertyKeys.indexOf('features') >= 0) {\n\t\t\tthis.key++;\n\t\t} else {\n\t\t\tconst gridConstructionKeys = changedPropertyKeys.filter((key) => {\n\t\t\t\treturn constructionKeys.indexOf(key) >= 0;\n\t\t\t});\n\t\t\tif (gridConstructionKeys.length) {\n\t\t\t\tthis.key++;\n\t\t\t}\n\t\t}\n\t\treturn w(DgridInnerWrapper, {\n\t\t\tkey: `${keyPrefix}${this.key}`,\n\t\t\t...this.properties,\n\t\t\tgridState: this._gridState,\n\t\t\tonGridState: (gridState: DgridState) => {\n\t\t\t\tthis._gridState = gridState;\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport default DgridWrapper;\n","import WidgetBase from '@dojo/framework/widget-core/WidgetBase';\nimport { v, w } from '@dojo/framework/widget-core/d';\nimport DgridWrapper, {\n\tSelectionData,\n\tSelectionMode,\n\tSelections,\n\tSelectionType,\n\tColumnStateChangeData\n} from '@dojo/interop/dgrid/DgridWrapper';\nimport { deepMixin } from '@dojo/framework/core/util';\n\ninterface DataItem {\n\tid: number;\n\tfirst: string;\n\tlast: string;\n\thasChildren?: boolean;\n\tparent?: number | null;\n}\n\nfunction duplicate<T extends {}>(source: T): T {\n    const target = Object.create(Object.getPrototypeOf(source));\n\n    return deepMixin(target, source);\n}\n\nfunction buildToggleLabel(label: string, currentValue: boolean) {\n\treturn 'Turn ' + label + (currentValue ? ' Off' : ' On');\n}\nexport class App extends WidgetBase {\n\tprivate _data: DataItem[] = [\n\t\t{ first: 'Bob', last: 'Thomson', id: 1, hasChildren: true },\n\t\t{ first: 'Tom', last: 'Bobson', id: 2, hasChildren: true }\n\t];\n\n\tprivate _columnSets = [\n\t\t[[{ field: 'id', label: 'ID' }]],\n\t\t[[{ field: 'first', label: 'First' }], [{ field: 'last', label: 'Last' }]]\n\t];\n\n\tprivate _compoundColumns = [\n\t\t{\n\t\t\tlabel: 'Full Name',\n\t\t\tchildren: [{ field: 'first', label: 'First' }, { field: 'last', label: 'Last' }]\n\t\t},\n\t\t{ field: 'id', label: 'ID' }\n\t];\n\n\tprotected render() {\n\t\treturn v('div', {}, [\n\t\t\tw(DgridWrapper, {\n\t\t\t\tfeatures: {\n\t\t\t\t\tpagination: this._paginationOn,\n\t\t\t\t\tkeyboard: this._keyboardOn,\n\t\t\t\t\tselection: this._selectionType,\n\t\t\t\t\ttree: this._treeOn,\n\t\t\t\t\tcolumnHider: this._columnHiderOn,\n\t\t\t\t\tcolumnReorder: this._columnReorderOn,\n\t\t\t\t\tcolumnResizer: this._columnResizerOn,\n\t\t\t\t\tcompoundColumns: this._compoundColumnsOn,\n\t\t\t\t\tcolumnSet: this._columnSetsOn\n\t\t\t\t},\n\t\t\t\tdata: this._data,\n\t\t\t\tcolumns: this._compoundColumnsOn ? this._compoundColumns : this._columnDefs[this._columnToggle],\n\t\t\t\tcolumnSets: this._columnSets,\n\n\t\t\t\trowsPerPage: this._rowsPerPage,\n\t\t\t\tpreviousNextArrows: this._previousNextArrows,\n\t\t\t\tfirstLastArrows: this._firstLastArrows,\n\t\t\t\tpagingLinks: this._pagingLinks,\n\n\t\t\t\tpageSkip: this._pageSkip,\n\t\t\t\ttabIndex: 2,\n\n\t\t\t\tdeselectOnRefresh: this._deselectOnRefresh,\n\t\t\t\tallowSelectAll: this._allowSelectAll,\n\t\t\t\tselectionMode: this._selectionMode,\n\t\t\t\tallowTextSelection: this._allowTextSelection,\n\t\t\t\tonSelect: (selected: SelectionData, selections: Selections) => {\n\t\t\t\t\tconsole.log('SELECTED:', selected);\n\t\t\t\t\tconsole.log('SELECTIONS:', selections);\n\t\t\t\t},\n\t\t\t\tonDeselect: (deselected: SelectionData, selections: Selections) => {\n\t\t\t\t\tconsole.log('DESELECTED:', deselected);\n\t\t\t\t\tconsole.log('SELECTIONS:', selections);\n\t\t\t\t},\n\n\t\t\t\tcollapseOnRefresh: this._collapseOnRefresh,\n\t\t\t\tenableTreeTransitions: this._enableTreeTransitions,\n\t\t\t\ttreeIndentWidth: this._treeIndentWidth,\n\n\t\t\t\tonColumnStateChange: (columnStateData: ColumnStateChangeData) => {\n\t\t\t\t\tconsole.log('COLUMN STATE CHANGE', columnStateData);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tv(\n\t\t\t\t'button',\n\t\t\t\t{\n\t\t\t\t\tonclick: this.addData\n\t\t\t\t},\n\t\t\t\t['Add Data']\n\t\t\t),\n\t\t\tv(\n\t\t\t\t'button',\n\t\t\t\t{\n\t\t\t\t\tonclick: this.swapColumnDef\n\t\t\t\t},\n\t\t\t\t['Change Columns']\n\t\t\t),\n\t\t\tv('p', [\n\t\t\t\tv(\n\t\t\t\t\t'button',\n\t\t\t\t\t{\n\t\t\t\t\t\tonclick: this.togglePagination\n\t\t\t\t\t},\n\t\t\t\t\t[buildToggleLabel('Pagination', this._paginationOn)]\n\t\t\t\t),\n\t\t\t\tv('div', this.renderPaginationButtons())\n\t\t\t]),\n\t\t\tv('p', [\n\t\t\t\tv(\n\t\t\t\t\t'button',\n\t\t\t\t\t{\n\t\t\t\t\t\tonclick: this.toggleKeyboard\n\t\t\t\t\t},\n\t\t\t\t\t[buildToggleLabel('Keyboard', this._keyboardOn)]\n\t\t\t\t),\n\t\t\t\tv('div', this.renderKeyboardButtons())\n\t\t\t]),\n\t\t\tv('p', [\n\t\t\t\tv(\n\t\t\t\t\t'button',\n\t\t\t\t\t{\n\t\t\t\t\t\tonclick: this.toggleSelectionOnOff\n\t\t\t\t\t},\n\t\t\t\t\t[buildToggleLabel('Selection', this._selectionType != null)]\n\t\t\t\t),\n\t\t\t\tv('div', this.renderSelectionButtons())\n\t\t\t]),\n\t\t\tv('p', [\n\t\t\t\tv(\n\t\t\t\t\t'button',\n\t\t\t\t\t{\n\t\t\t\t\t\tonclick: this.toggleTree\n\t\t\t\t\t},\n\t\t\t\t\t[buildToggleLabel('Tree', this._treeOn)]\n\t\t\t\t),\n\t\t\t\tv('div', this.renderTreeButtons())\n\t\t\t]),\n\t\t\tv('p', [\n\t\t\t\tv(\n\t\t\t\t\t'button',\n\t\t\t\t\t{\n\t\t\t\t\t\tonclick: this.toggleColumnHider\n\t\t\t\t\t},\n\t\t\t\t\t[buildToggleLabel('Column Hider', this._columnHiderOn)]\n\t\t\t\t)\n\t\t\t]),\n\t\t\tv('p', [\n\t\t\t\tv(\n\t\t\t\t\t'button',\n\t\t\t\t\t{\n\t\t\t\t\t\tonclick: this.toggleColumnReorder\n\t\t\t\t\t},\n\t\t\t\t\t[buildToggleLabel('Column Reorder', this._columnReorderOn)]\n\t\t\t\t)\n\t\t\t]),\n\t\t\tv('p', [\n\t\t\t\tv(\n\t\t\t\t\t'button',\n\t\t\t\t\t{\n\t\t\t\t\t\tonclick: this.toggleColumnResizer\n\t\t\t\t\t},\n\t\t\t\t\t[buildToggleLabel('Column Resizer', this._columnResizerOn)]\n\t\t\t\t)\n\t\t\t]),\n\t\t\tv('p', [\n\t\t\t\tv(\n\t\t\t\t\t'button',\n\t\t\t\t\t{\n\t\t\t\t\t\tonclick: this.toggleCompoundColumns\n\t\t\t\t\t},\n\t\t\t\t\t[buildToggleLabel('Compound Columns', this._compoundColumnsOn)]\n\t\t\t\t)\n\t\t\t]),\n\t\t\tv('p', [\n\t\t\t\tv(\n\t\t\t\t\t'button',\n\t\t\t\t\t{\n\t\t\t\t\t\tonclick: this.toggleColumnSets\n\t\t\t\t\t},\n\t\t\t\t\t[buildToggleLabel('Column Sets', this._columnSetsOn)]\n\t\t\t\t)\n\t\t\t])\n\t\t]);\n\t}\n\n\tprivate renderPaginationButtons() {\n\t\tif (this._paginationOn) {\n\t\t\treturn [\n\t\t\t\tv('button', { onclick: this.updateRowsPerPage }, ['Set Rows Per Page ' + this.nextRowsPerPage()]),\n\t\t\t\tv('button', { onclick: this.togglePreviousNextArrows }, [\n\t\t\t\t\tbuildToggleLabel('Prev/Next Arrows', this._previousNextArrows)\n\t\t\t\t]),\n\t\t\t\tv('button', { onclick: this.toggleFirstLastArrows }, [\n\t\t\t\t\tbuildToggleLabel('First/Last Arrows', this._firstLastArrows)\n\t\t\t\t]),\n\t\t\t\tv('button', { onclick: this.updatePagingLinks }, ['Set Paging Links # ' + this.nextPagingLinks()])\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate _paginationOn = false;\n\tprivate togglePagination(): void {\n\t\tthis._paginationOn = !this._paginationOn;\n\t\tthis.invalidate();\n\t}\n\n\tprivate _rowsPerPage = 5;\n\tprivate updateRowsPerPage(): void {\n\t\tthis._rowsPerPage = this.nextRowsPerPage();\n\t\tthis.invalidate();\n\t}\n\n\tprivate nextRowsPerPage() {\n\t\treturn (this._rowsPerPage + 5) % 19;\n\t}\n\n\tprivate _previousNextArrows = true;\n\tprivate togglePreviousNextArrows(): void {\n\t\tthis._previousNextArrows = !this._previousNextArrows;\n\t\tthis.invalidate();\n\t}\n\n\tprivate _firstLastArrows = true;\n\tprivate toggleFirstLastArrows(): void {\n\t\tthis._firstLastArrows = !this._firstLastArrows;\n\t\tthis.invalidate();\n\t}\n\n\tprivate _pagingLinks = 2;\n\tprivate updatePagingLinks(): void {\n\t\tthis._pagingLinks = this.nextPagingLinks();\n\t\tthis.invalidate();\n\t}\n\n\tprivate nextPagingLinks() {\n\t\tlet pagingLinks = (this._pagingLinks + 2) % 10;\n\t\tif (!pagingLinks) {\n\t\t\tpagingLinks = 2;\n\t\t}\n\t\treturn pagingLinks;\n\t}\n\n\tprivate addData(): void {\n\t\tthis._data = this._data.map((item) => {\n\t\t\treturn duplicate(item);\n\t\t});\n\t\tfor (let i = 0; i < 20; i++) {\n\t\t\tthis._data.push({\n\t\t\t\tfirst: 'Extra',\n\t\t\t\tlast: 'Person',\n\t\t\t\tid: this._data.length + 1,\n\t\t\t\thasChildren: false,\n\t\t\t\tparent: (i % 2) + 1\n\t\t\t});\n\t\t}\n\t\tthis.invalidate();\n\t}\n\n\tprivate _columnToggle = 0;\n\tprivate _columnDefs = [\n\t\t[{ field: 'first', label: 'First', renderExpando: true }, { field: 'last', label: 'Last' }],\n\t\t[\n\t\t\t{ field: 'id', label: 'ID', renderExpando: true },\n\t\t\t{ field: 'first', label: 'First' },\n\t\t\t{ field: 'last', label: 'Last' }\n\t\t]\n\t];\n\tprivate swapColumnDef(): void {\n\t\tthis._columnToggle = this._columnToggle ? 0 : 1;\n\t\tthis.invalidate();\n\t}\n\n\tprivate _keyboardOn = false;\n\tprivate toggleKeyboard(): void {\n\t\tthis._keyboardOn = !this._keyboardOn;\n\t\tthis.invalidate();\n\t}\n\n\tprivate renderKeyboardButtons() {\n\t\tif (this._keyboardOn) {\n\t\t\treturn [v('button', { onclick: this.updatePageSkip }, ['Set Page Skip ' + this.nextPageSkip()])];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate _pageSkip = 3;\n\tprivate updatePageSkip(): void {\n\t\tthis._pageSkip = this.nextPageSkip();\n\t\tthis.invalidate();\n\t}\n\n\tprivate nextPageSkip() {\n\t\treturn (this._pageSkip + 2) % 9;\n\t}\n\n\tprivate _selectionType?: SelectionType;\n\tprivate toggleSelectionOnOff(): void {\n\t\tthis._selectionType = this._selectionType ? undefined : SelectionType.row;\n\t\tthis.invalidate();\n\t}\n\tprivate toggleSelectionType(): void {\n\t\tthis._selectionType = this._selectionType === SelectionType.row ? SelectionType.cell : SelectionType.row;\n\t\tthis.invalidate();\n\t}\n\n\tprivate renderSelectionButtons() {\n\t\tif (this._selectionType) {\n\t\t\treturn [\n\t\t\t\tv('div', [\n\t\t\t\t\tv('button', { onclick: this.toggleSelectionType }, [\n\t\t\t\t\t\t'Set Selection Type ' + (this._selectionType === SelectionType.row ? 'Cell' : 'Row')\n\t\t\t\t\t])\n\t\t\t\t]),\n\t\t\t\tv('div', [\n\t\t\t\t\tv('button', { onclick: this.toggleDeselectOnRefresh }, [\n\t\t\t\t\t\tbuildToggleLabel('Deselect On Referesh', this._deselectOnRefresh)\n\t\t\t\t\t]),\n\t\t\t\t\tv('button', { onclick: this.toggleAllowSelectAll }, [\n\t\t\t\t\t\tbuildToggleLabel('Select All', this._allowSelectAll)\n\t\t\t\t\t]),\n\t\t\t\t\tv('button', { onclick: this.toggleAllowTextSelection }, [\n\t\t\t\t\t\tbuildToggleLabel('Allow Text Selection', this._allowTextSelection)\n\t\t\t\t\t])\n\t\t\t\t]),\n\t\t\t\tv('div', [\n\t\t\t\t\tv('button', { onclick: this.setSelectionModeNone }, ['Select Mode: None']),\n\t\t\t\t\tv('button', { onclick: this.setSelectionModeMultiple }, ['Select Mode: Multiple']),\n\t\t\t\t\tv('button', { onclick: this.setSelectionModeExtended }, ['Select Mode: Extended']),\n\t\t\t\t\tv('button', { onclick: this.setSelectionModeSingle }, ['Select Mode: Single'])\n\t\t\t\t])\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate _deselectOnRefresh = false;\n\tprivate toggleDeselectOnRefresh(): void {\n\t\tthis._deselectOnRefresh = !this._deselectOnRefresh;\n\t\tthis.invalidate();\n\t}\n\n\tprivate _allowSelectAll = false;\n\tprivate toggleAllowSelectAll(): void {\n\t\tthis._allowSelectAll = !this._allowSelectAll;\n\t\tthis.invalidate();\n\t}\n\n\tprivate _selectionMode = SelectionMode.single;\n\n\tprivate _allowTextSelection = false;\n\tprivate toggleAllowTextSelection(): void {\n\t\tthis._allowTextSelection = !this._allowTextSelection;\n\t\tthis.invalidate();\n\t}\n\n\tprivate setSelectionModeNone() {\n\t\tthis._selectionMode = SelectionMode.none;\n\t\tthis.invalidate();\n\t}\n\n\tprivate setSelectionModeMultiple() {\n\t\tthis._selectionMode = SelectionMode.multiple;\n\t\tthis.invalidate();\n\t}\n\n\tprivate setSelectionModeExtended() {\n\t\tthis._selectionMode = SelectionMode.extended;\n\t\tthis.invalidate();\n\t}\n\n\tprivate setSelectionModeSingle() {\n\t\tthis._selectionMode = SelectionMode.single;\n\t\tthis.invalidate();\n\t}\n\n\tprivate _treeOn = false;\n\tprivate toggleTree(): void {\n\t\tthis._treeOn = !this._treeOn;\n\t\tthis.invalidate();\n\t}\n\n\tprivate renderTreeButtons() {\n\t\tif (this._treeOn) {\n\t\t\treturn [\n\t\t\t\tv('div', [\n\t\t\t\t\tv('button', { onclick: this.toggleCollapseOnRefresh }, [\n\t\t\t\t\t\tbuildToggleLabel('Collapse on Refresh', this._collapseOnRefresh)\n\t\t\t\t\t]),\n\t\t\t\t\tv('button', { onclick: this.toggleEnableTreeTransitions }, [\n\t\t\t\t\t\tbuildToggleLabel('Tree Transitions', this._enableTreeTransitions)\n\t\t\t\t\t]),\n\t\t\t\t\tv('button', { onclick: this.updateTreeIndentWidth }, [\n\t\t\t\t\t\t'Set Tree Indent ' + this.nextTreeIndentWidth()\n\t\t\t\t\t])\n\t\t\t\t])\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate _collapseOnRefresh = false;\n\tprivate toggleCollapseOnRefresh() {\n\t\tthis._collapseOnRefresh = !this._collapseOnRefresh;\n\t\tthis.invalidate();\n\t}\n\n\tprivate _enableTreeTransitions = false;\n\tprivate toggleEnableTreeTransitions() {\n\t\tthis._enableTreeTransitions = !this._enableTreeTransitions;\n\t\tthis.invalidate();\n\t}\n\n\tprivate _treeIndentWidth = 9;\n\tprivate updateTreeIndentWidth() {\n\t\tthis._treeIndentWidth = this.nextTreeIndentWidth();\n\t\tthis.invalidate();\n\t}\n\n\tprivate nextTreeIndentWidth() {\n\t\treturn (this._treeIndentWidth + 20) % 100;\n\t}\n\n\tprivate _columnHiderOn = false;\n\tprivate toggleColumnHider(): void {\n\t\tthis._columnHiderOn = !this._columnHiderOn;\n\t\tthis.invalidate();\n\t}\n\n\tprivate _columnReorderOn = false;\n\tprivate toggleColumnReorder(): void {\n\t\tthis._columnReorderOn = !this._columnReorderOn;\n\t\tthis.invalidate();\n\t}\n\n\tprivate _columnResizerOn = false;\n\tprivate toggleColumnResizer(): void {\n\t\tthis._columnResizerOn = !this._columnResizerOn;\n\t\tthis.invalidate();\n\t}\n\n\tprivate _compoundColumnsOn = false;\n\tprivate toggleCompoundColumns(): void {\n\t\tthis._compoundColumnsOn = !this._compoundColumnsOn;\n\t\tthis.invalidate();\n\t}\n\n\tprivate _columnSetsOn = false;\n\tprivate toggleColumnSets(): void {\n\t\tthis._columnSetsOn = !this._columnSetsOn;\n\t\tthis.invalidate();\n\t}\n}\n\nexport default App;\n","import renderer from '@dojo/framework/widget-core/vdom';\nimport { w } from '@dojo/framework/widget-core/d';\nimport App from './widgets/App';\n\nconst r = renderer(() => w(App, {}));\n\nr.mount();\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n                t[p[i]] = s[p[i]];\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [0, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __exportStar = function (m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    };\r\n\r\n    __values = function (o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator];\r\n        return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n});\r\n"],"sourceRoot":""}